{"version":3,"sources":["Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/$_lazy_route_resource lazy","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/api/anime/anime-api.queries.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/api/anime/anime.api.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/api/api.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/api/auth/auth.api.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/app.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/app.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/app.constants.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/app.module.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/anime.module.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-media-detail-modal/mt-media-detail-modal.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-media-detail-modal/mt-media-detail-modal.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-media-detail-modal/mt-media-detail-modal.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-anime-info/mt-anime-info.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-anime-info/mt-anime-info.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-anime-info/mt-anime-info.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-cover-media/mt-cover-media.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-cover-media/mt-cover-media.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-cover-media/mt-cover-media.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-genres-overview/mt-genres-overview.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-genres-overview/mt-genres-overview.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-genres-overview/mt-genres-overview.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-list-related-media/mt-list-related-media.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-list-related-media/mt-list-related-media.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-list-related-media/mt-list-related-media.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-media-actions/mt-media-actions.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-media-actions/mt-media-actions.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-media-actions/mt-media-actions.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media/mt-recently-finished-media.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media/mt-recently-finished-media.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media/mt-recently-finished-media.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-search-results-table/mt-search-results-table.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-search-results-table/mt-search-results-table.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-search-results-table/mt-search-results-table.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-user-anime-list-table/mt-user-anime-list-table.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-user-anime-list-table/mt-user-anime-list-table.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-user-anime-list-table/mt-user-anime-list-table.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/domain/anime.domain.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/material/material.module.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/fa-icon/fa-icon.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/fa-icon/fa-icon.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/fa-icon/fa-icon.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-content/mt-modal-content.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-content/mt-modal-content.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-content/mt-modal-content.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-footer/mt-modal-footer.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-footer/mt-modal-footer.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-footer/mt-modal-footer.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-header/mt-modal-header.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-header/mt-modal-header.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-header/mt-modal-header.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal/mt-modal.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal/mt-modal.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal/mt-modal.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-footer/mt-footer.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-footer/mt-footer.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-footer/mt-footer.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-header/mt-header.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-header/mt-header.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-header/mt-header.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-menu-action/mt-menu-action.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-menu-action/mt-menu-action.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-menu-action/mt-menu-action.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/with-observable-on-destroy/with-observable-on-destroy.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/pipes/sort.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/shared.module.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-detail/anime-detail.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-detail/anime-detail.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-detail/anime-detail.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-search/anime-search.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-search/anime-search.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-search/anime-search.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/dashboard/dashboard.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/dashboard/dashboard.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/dashboard/dashboard.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/login/login.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/login/login.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/login/login.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/page-not-found/page-not-found.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/page-not-found/page-not-found.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/page-not-found/page-not-found.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/user-anime-list/user-anime-list.component.html","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/user-anime-list/user-anime-list.component.scss","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/user-anime-list/user-anime-list.component.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/services/anime.service.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/services/auth.service.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/store/auth.store.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/anime.types.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/listEntryStatus.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/mediaFormats.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/mediaSorts.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/mediaStatus.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/onListOptions.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/media.types.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/enumMap.types.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/utils/generic.util.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/utils/local-storage.util.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/environments/environment.ts","Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","const filterTypes: { [key: string]: string } = {};\nconst filterMappings: { [key: string]: string } = {};\n\n/* filters */\n\nfilterTypes.page = `\n  $page: Int,\n  $perPage: Int,\n`;\nfilterMappings.page = `\n  page: $page,\n  perPage: $perPage,\n`;\n\nfilterTypes.mediaCollection = `\n  $mediaType: MediaType,\n  $sort: [MediaListSort],\n  $userId: Int!,\n`;\nfilterMappings.mediaCollection = `\n  sort: $sort,\n  type: $mediaType,\n  userId: $userId,\n`;\n\nfilterTypes.media = `\n  $mediaType: MediaType,\n  $sort: [MediaSort],\n  $adultContent: Boolean,\n  $averageScore_greater: Int,\n  $averageScore_lesser: Int,\n  $genre_in: [String],\n  $genre_not_in: [String],\n  $format_in: [MediaFormat],\n  $format_not_in: [MediaFormat],\n  $status_in: [MediaStatus],\n  $status_not_in: [MediaStatus],\n  $search: String,\n  $startDate_greater: FuzzyDateInt,\n  $startDate_lesser: FuzzyDateInt,\n  $status: MediaStatus,\n  $id: Int,\n  $idIn: [Int],\n  $idNotIn: [Int],\n  $onList: Boolean,\n`;\nfilterMappings.media = `\n  sort: $sort,\n  type: $mediaType,\n  isAdult: $adultContent,\n  averageScore_greater: $averageScore_greater,\n  averageScore_lesser: $averageScore_lesser,\n  genre_in: $genre_in,\n  genre_not_in: $genre_not_in,\n  format_in: $format_in,\n  format_not_in: $format_not_in,\n  status_in: $status_in,\n  status_not_in: $status_not_in,\n  search: $search,\n  startDate_greater: $startDate_greater,\n  startDate_lesser: $startDate_lesser,\n  status: $status,\n  id: $id,\n  id_in: $idIn,\n  id_not_in: $idNotIn,\n  onList: $onList,\n`;\n\n/* fields */\n\nconst pageInfoFields: string = `\n  currentPage\n  hasNextPage\n  lastPage\n  perPage\n  total\n`;\n\nconst listAnimeFields: string = `\n  averageScore\n  coverImage {\n    large\n    medium\n  }\n  description\n  duration\n  episodes\n  format\n  genres\n  id\n  startDate {\n    year\n  }\n  status\n  studios(isMain: true) {\n    nodes {\n      name\n    }\n  }\n  tags {\n    description\n    isMediaSpoiler\n    name\n  }\n  title {\n    romaji\n  }\n`;\n\nconst searchAnimeFields: string = `${listAnimeFields}\n  mediaListEntry {\n    id\n    scoreRaw: score (\n      format: POINT_100\n    )\n    status\n  }\n`;\n\nconst listEntryFields: string = `\n  id\n  media {\n    ${listAnimeFields}\n  }\n  scoreRaw: score (\n    format: POINT_100\n  )\n  status\n  updatedAt\n`;\n\n/* queries */\n\nexport const genresQuery: string = `\n  {\n    GenreCollection\n  }\n`;\n\nexport const userQuery: string = `\n  {\n    Viewer {\n      avatar {\n        large\n      }\n      id\n      name\n      options {\n        displayAdultContent\n      }\n      stats {\n        favouredGenresOverview {\n          amount\n          genre\n          meanScore\n          timeWatched\n        }\n        watchedTime\n      }\n    }\n  }\n`;\n\nexport const searchQuery: string = `\n  query (\n    ${filterTypes.media}\n    ${filterTypes.page}\n  ) {\n    Page (\n      ${filterMappings.page}\n    ) {\n      pageInfo {\n        ${pageInfoFields}\n      }\n      media (\n        ${filterMappings.media}\n      ) {\n        ${searchAnimeFields}\n      }\n    }\n  }\n`;\n\nexport const listQuery: string = `\n  query (\n    ${filterTypes.mediaCollection}\n  ) {\n    MediaListCollection (\n      ${filterMappings.mediaCollection}\n    ) {\n      lists {\n        entries {\n          ${listEntryFields}\n        }\n      }\n    }\n  }\n`;\n\nexport const relatedMediaQuery: string = `\n  query (\n    ${filterTypes.mediaCollection}\n  ) {\n    MediaListCollection (\n      ${filterMappings.mediaCollection}\n    ) {\n      lists {\n        entries {\n          status\n          media {\n            relations {\n              nodes {\n                ${listAnimeFields}\n              }\n            }\n          }\n        }\n      }\n`;\n\nexport const listMediaIdsQuery: string = `\n  query (\n    ${filterTypes.mediaCollection}\n  ) {\n    MediaListCollection (\n      ${filterMappings.mediaCollection}\n    ) {\n      lists {\n        entries {\n          status\n          media {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const updatedEntriesQuery: string = `\n  query (\n    ${filterTypes.mediaCollection}\n    ${filterTypes.page}\n  ) {\n    Page (\n      ${filterMappings.page}\n    ) {\n      pageInfo {\n        ${pageInfoFields}\n      }\n      mediaList (\n        ${filterMappings.mediaCollection}\n      ) {\n        ${listEntryFields}\n      }\n    }\n  }\n`;\n\nexport const finishedAiringMediaQuery: string = `\n  query (\n    ${filterTypes.media}\n    ${filterTypes.page}\n  ) {\n    Page (\n      ${filterMappings.page}\n    ) {\n      pageInfo {\n        ${pageInfoFields}\n      }\n      media (\n        ${filterMappings.media}\n      ) {\n        ${listAnimeFields}\n\n        mediaListEntry {\n          ${listEntryFields}\n        }\n      }\n    }\n  }\n`;\n\nexport const listFavouritesQuery: string = `\n  query (\n    $userId: Int!,\n    $page: Int\n  ) {\n    User (\n      id: $userId\n    ) {\n      favourites {\n        anime (\n          page: $page\n        ) {\n          nodes {\n            id\n          }\n          pageInfo {\n            ${pageInfoFields}\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const saveListEntryQuery: string = `\n  mutation (\n    $mediaId: Int,\n    $scoreRaw: Int,\n    $status: MediaListStatus\n  ) {\n    SaveMediaListEntry (\n      mediaId: $mediaId,\n      scoreRaw: $scoreRaw,\n      status: $status\n    ) {\n      id\n      status\n    }\n  }\n`;\n\nexport const deleteListEntryQuery: string = `\n  mutation (\n    $id: Int\n  ) {\n    DeleteMediaListEntry (id: $id) {\n      deleted\n    }\n  }\n`;\n\nexport const toggleFavouriteEntryQuery: string = `\n  mutation (\n    $animeId: Int\n  ) {\n    ToggleFavourite (\n      animeId: $animeId\n    ) {\n      anime {\n        nodes {\n          id\n          title {\n            userPreferred\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/api/anime/anime-api.queries.ts","import 'rxjs/add/operator/map';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\nimport { getParsedAnime, getParsedListEntry, mapQueryFilters } from '../../modules/anime/domain/anime.domain';\nimport { AuthStore } from '../../store/auth.store';\nimport { MediaSort } from '../../types/anilist/enums/mediaSorts';\nimport { ListEntry, ListEntryStatus } from '../../types/anilist/listEntry.types';\nimport { Media } from '../../types/anilist/media.types';\nimport { PageQuery } from '../../types/anilist/pageInfo.types';\nimport { User } from '../../types/anilist/user.types';\nimport { AniListApi } from '../api';\nimport {\n  deleteListEntryQuery,\n  finishedAiringMediaQuery,\n  genresQuery,\n  listFavouritesQuery,\n  listMediaIdsQuery,\n  listQuery,\n  relatedMediaQuery,\n  saveListEntryQuery,\n  searchQuery,\n  toggleFavouriteEntryQuery,\n  updatedEntriesQuery,\n} from './anime-api.queries';\nimport {\n  DeleteListEntryDto,\n  FavouriteMediaDto,\n  GenreCollectionDto,\n  IdFilters,\n  ListEntriesPageDto,\n  ListMediaDto,\n  ListMediaIdsDto,\n  MediaPageDto,\n  SaveListEntryDto,\n  SearchFilters,\n  SearchMediaDto,\n  ToggleFavouriteMediaResponseDto as ToggleFavouriteMediaDto,\n} from './anime-api.types';\n\n@Injectable()\nexport class AnimeApi extends AniListApi {\n  constructor(protected httpClient: HttpClient, protected authStore: AuthStore) {\n    super(httpClient, authStore);\n  }\n\n  public queryAnimeGenres() {\n    return this.postRequest<GenreCollectionDto>(genresQuery).map(\n      response => this.getResponseData(response).GenreCollection\n    );\n  }\n\n  public queryAnimeSearch(query: SearchFilters, pageInfo?: PageQuery) {\n    return this.postRequest<SearchMediaDto>(searchQuery, {\n      variables: mapQueryFilters(query, {\n        mediaType: 'ANIME',\n        adultContent: query.adultContent || false,\n        onList: query.onList,\n        sort: query.sort || MediaSort.TITLE_ROMAJI,\n\n        page: pageInfo ? (pageInfo.pageIndex >= 1 ? pageInfo.pageIndex : 1) : 1,\n        perPage: pageInfo ? pageInfo.perPage || 10 : 1,\n      }),\n    }).map(response => {\n      let responseData = this.getResponseData(response).Page;\n      if (responseData) {\n        responseData.media.map(anime => getParsedAnime(anime));\n      }\n      return responseData;\n    });\n  }\n\n  public queryAnimeList(user: User) {\n    return this.postRequest<ListMediaDto>(listQuery, {\n      variables: {\n        mediaType: 'ANIME',\n        userId: user.id,\n        sort: MediaSort.SCORE_DESC,\n      },\n    }).map(response => {\n      let listEntriesByStatus: { [Status in ListEntryStatus]?: ListEntry[] } = {};\n\n      const listMediaDto = this.getResponseData(response);\n      if (listMediaDto) {\n        listMediaDto.MediaListCollection.lists.forEach(list => {\n          const status = list.entries[0].status;\n\n          list.entries.forEach(listEntry => {\n            listEntriesByStatus[status] = [...(listEntriesByStatus[status] || []), getParsedListEntry(listEntry)];\n          });\n        });\n      }\n\n      return listEntriesByStatus;\n    });\n  }\n\n  public queryAnimeListMediaIdsByStatus(user: User) {\n    return this.postRequest<ListMediaIdsDto>(listMediaIdsQuery, {\n      variables: {\n        mediaType: 'ANIME',\n        userId: user.id,\n      },\n    }).map(response => {\n      let listMediaIdsByStatus: { [Status in ListEntryStatus]?: number[] } = {};\n\n      const listMediaDto = this.getResponseData(response);\n      if (listMediaDto) {\n        listMediaDto.MediaListCollection.lists.forEach(list => {\n          const status = list.entries[0].status;\n\n          list.entries.forEach(listEntry => {\n            listMediaIdsByStatus[status] = [...(listMediaIdsByStatus[status] || []), listEntry.media.id];\n          });\n        });\n      }\n\n      return listMediaIdsByStatus;\n    });\n  }\n\n  public queryRecentlyUpdatedAnime(user: User, pageInfo?: PageQuery) {\n    return this.postRequest<ListEntriesPageDto>(updatedEntriesQuery, {\n      variables: {\n        mediaType: 'ANIME',\n        userId: user.id,\n        sort: MediaSort.UPDATED_TIME_DESC,\n\n        page: pageInfo ? (pageInfo.pageIndex >= 1 ? pageInfo.pageIndex : 1) : 1,\n        perPage: pageInfo ? pageInfo.perPage || 10 : 1,\n      },\n    }).map(response => {\n      const listEntriesDto = this.getResponseData(response);\n      if (listEntriesDto) {\n        listEntriesDto.Page.mediaList.map(listEntry => getParsedListEntry(listEntry));\n      }\n      return listEntriesDto && listEntriesDto.Page;\n    });\n  }\n\n  public queryRecentlyFinishedAiringAnime(query: IdFilters, pageInfo?: PageQuery) {\n    return this.postRequest<MediaPageDto>(finishedAiringMediaQuery, {\n      variables: mapQueryFilters(query, {\n        mediaType: 'ANIME',\n        status: 'FINISHED',\n        sort: 'END_DATE_DESC',\n        onList: true,\n\n        idIn: query && query.idIn,\n        idtIn: query && query.idNotIn,\n\n        page: pageInfo ? (pageInfo.pageIndex >= 1 ? pageInfo.pageIndex : 1) : 1,\n        perPage: pageInfo ? pageInfo.perPage || 10 : 1,\n      }),\n    }).map(response => {\n      const listEntriesDto = this.getResponseData(response);\n      if (listEntriesDto) {\n        listEntriesDto.Page.media.map(media => getParsedAnime(media));\n      }\n      return listEntriesDto && listEntriesDto.Page;\n    });\n  }\n\n  public queryRelatedAnimeMedia(user: User) {\n    return this.postRequest<ListMediaDto>(relatedMediaQuery, {\n      variables: {\n        mediaType: 'ANIME',\n        userId: user.id,\n      },\n    }).map(response => {\n      let mediaList: Media[] = [];\n\n      const listMediaDto = this.getResponseData(response);\n      if (listMediaDto) {\n        listMediaDto.MediaListCollection.lists.forEach(list => {\n          list.entries.forEach(listEntry => {\n            mediaList = [...mediaList, listEntry.media];\n          });\n        });\n      }\n\n      return mediaList;\n    });\n  }\n\n  public queryAnimeListFavourites(user: User, callback: Function) {\n    this.queryFavouritesResultsPage(\n      {\n        userId: user.id,\n        page: 0,\n      },\n      [],\n      callback\n    );\n  }\n\n  private queryFavouritesResultsPage(options: any, favourites: any[], callback: Function) {\n    return this.postRequest<FavouriteMediaDto>(listFavouritesQuery, {\n      variables: options,\n    })\n      .pipe(\n        tap(response => {\n          let results = [];\n\n          const responseData = this.getResponseData(response);\n          if (responseData && responseData.User && responseData.User.favourites && responseData.User.favourites.anime) {\n            const favouritesData = responseData.User.favourites.anime;\n            results = favouritesData.nodes;\n            favourites = [...favourites, ...results];\n\n            if (favouritesData.pageInfo.hasNextPage) {\n              options.page++;\n              this.queryFavouritesResultsPage(options, favourites, callback);\n            } else {\n              callback(favourites);\n            }\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  public queryAnimeListFavouriteIDs(user: User, callback: (favouriteIDs: number[]) => void) {\n    this.queryAnimeListFavourites(user, listFavourites => {\n      let favouriteIDs: number[] = [];\n\n      listFavourites.forEach((media: Media) => {\n        favouriteIDs.push(media.id);\n      });\n\n      callback(favouriteIDs);\n    });\n  }\n\n  public saveAnimeListEntry(listEntry: ListEntry) {\n    return this.postRequest<SaveListEntryDto>(saveListEntryQuery, {\n      variables: {\n        status: listEntry.status || 'COMPLETED',\n        mediaId: listEntry.media.id,\n        scoreRaw: listEntry.scoreRaw,\n      },\n    });\n  }\n\n  public deleteAnimeListEntry(listEntry: ListEntry) {\n    return this.postRequest<DeleteListEntryDto>(deleteListEntryQuery, {\n      variables: {\n        id: listEntry.id,\n      },\n    });\n  }\n\n  public toggleAnimeFavouriteEntry(listEntry: ListEntry) {\n    return this.postRequest<ToggleFavouriteMediaDto>(toggleFavouriteEntryQuery, {\n      variables: {\n        animeId: listEntry.media.id,\n      },\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/api/anime/anime.api.ts","import 'rxjs/add/operator/map';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { _throw } from 'rxjs/observable/throw';\nimport { catchError } from 'rxjs/operators';\n\nimport { apiUrl } from '../app.constants';\nimport { AuthStore } from '../store/auth.store';\nimport { ServerResponse } from '../types/anilist/response.types';\nimport {\n  DeleteListEntryRequest,\n  MediaCollectionFilters,\n  MediaFilters,\n  PageQueryDto,\n  SaveListEntryRequest,\n  SearchFilters,\n  ToggleFavouriteMediaRequest,\n} from './anime/anime-api.types';\n\nexport class AniListApi {\n  protected apiUrl: string = apiUrl;\n\n  constructor(protected httpClient: HttpClient, protected authStore: AuthStore) {}\n\n  protected getRequestOptions() {\n    const accessToken = this.authStore.getAccessToken();\n    return { headers: accessToken ? { Authorization: `Bearer ${accessToken}` } : {} };\n  }\n\n  protected postRequest<T>(\n    query: string,\n    options?: {\n      variables?: (\n        | MediaCollectionFilters\n        | MediaFilters\n        | SearchFilters\n        | SaveListEntryRequest\n        | DeleteListEntryRequest\n        | ToggleFavouriteMediaRequest) &\n        Partial<PageQueryDto>;\n    }\n  ): Observable<ServerResponse<T>> {\n    return this.httpClient\n      .post(\n        this.apiUrl,\n        {\n          query,\n          variables: options && options.variables,\n        },\n        this.getRequestOptions()\n      )\n      .pipe(this.mapObjectErrorToStringError());\n  }\n\n  protected isValidResponse<T>(response: ServerResponse<T>) {\n    return !!this.getResponseData(response);\n  }\n\n  protected getResponseData<T>(response: ServerResponse<T>) {\n    return !!response && response.data;\n  }\n\n  protected mapObjectErrorToStringError() {\n    return catchError(error => _throw(JSON.stringify(error, undefined, 2)));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/api/api.ts","import 'rxjs/add/operator/map';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AuthStore } from '../../store/auth.store';\nimport { User } from '../../types/anilist/user.types';\nimport { userQuery } from '../anime/anime-api.queries';\nimport { AniListApi } from '../api';\n\n@Injectable()\nexport class AuthApi extends AniListApi {\n  constructor(protected httpClient: HttpClient, protected authStore: AuthStore) {\n    super(httpClient, authStore);\n  }\n\n  public queryUser(): Observable<User> {\n    return this.postRequest<any>(userQuery).map(response => {\n      const listEntriesDto = this.getResponseData(response);\n      return listEntriesDto && listEntriesDto.Viewer;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/api/auth/auth.api.ts","module.exports = \"<mt-header></mt-header>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n<mt-footer></mt-footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mt-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  constructor() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/app.component.ts","import { environment } from '../environments/environment';\nimport { ModalOptions } from './types/modal.types';\n\nexport const apiUrl: string = 'https://graphql.anilist.co';\nexport const apiLoginUrl: string = `https://anilist.co/api/v2/oauth/authorize?client_id=${\n  environment.anilist_client_id\n}&response_type=token`;\nexport const apiTokenPrefix: string = '#access_token=';\n\nexport const accessTokenCookieKey: string = 'accessToken';\nexport const userCookieKey: string = 'user';\n\nexport const dashboardUrl: string = '/dashboard';\nexport const animeSearchUrl: string = '/anime-search';\nexport const userListUrl: string = '/user-anime-list';\nexport const rootUrl: string = animeSearchUrl;\n\nexport const defaultModalOptions: ModalOptions = {\n  minWidth: '480px',\n  width: 'auto',\n  maxWidth: '672px',\n};\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/app.constants.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AnimeApi } from './api/anime/anime.api';\nimport { AuthApi } from './api/auth/auth.api';\nimport { AppComponent } from './app.component';\nimport { AnimeModule } from './modules/anime/anime.module';\nimport { SharedModule } from './modules/shared/shared.module';\nimport { AnimeDetailPageComponent } from './pages/anime-detail/anime-detail.component';\nimport { AnimeSearchPageComponent } from './pages/anime-search/anime-search.component';\nimport { DashboardPageComponent } from './pages/dashboard/dashboard.component';\nimport { LoginPageComponent } from './pages/login/login.component';\nimport { PageNotFoundPageComponent } from './pages/page-not-found/page-not-found.component';\nimport { UserAnimeListPageComponent } from './pages/user-anime-list/user-anime-list.component';\nimport { AnimeService } from './services/anime.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthStore } from './store/auth.store';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/anime-search', pathMatch: 'full' },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'dashboard', component: DashboardPageComponent },\n  { path: 'anime-search', component: AnimeSearchPageComponent },\n  { path: 'anime-detail/:id', component: AnimeDetailPageComponent },\n  { path: 'user-anime-list', component: UserAnimeListPageComponent },\n  { path: '**', component: PageNotFoundPageComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundPageComponent,\n    LoginPageComponent,\n    DashboardPageComponent,\n    AnimeSearchPageComponent,\n    AnimeDetailPageComponent,\n    UserAnimeListPageComponent,\n  ],\n  imports: [SharedModule, AnimeModule, RouterModule.forRoot(appRoutes)],\n  providers: [AnimeService, AuthService, AnimeApi, AuthApi, AuthStore],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/app.module.ts","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport {\n  MtListEntryFormModalComponent,\n} from './components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component';\nimport { MtMediaDetailModalComponent } from './components/modals/mt-media-detail-modal/mt-media-detail-modal.component';\nimport { MtAnimeInfoComponent } from './components/mt-anime-info/mt-anime-info.component';\nimport { MtCoverMediaComponent } from './components/mt-cover-media/mt-cover-media.component';\nimport { MtGenresOverviewComponent } from './components/mt-genres-overview/mt-genres-overview.component';\nimport { MtListRelatedMediaComponent } from './components/mt-list-related-media/mt-list-related-media.component';\nimport { MtMediaActionsComponent } from './components/mt-media-actions/mt-media-actions.component';\nimport {\n  MtRecentlyFinishedMediaByFormatComponent,\n} from './components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component';\nimport {\n  MtRecentlyFinishedMediaComponent,\n} from './components/mt-recently-finished-media/mt-recently-finished-media.component';\nimport {\n  MtRecentlyUpdatedListEntriesComponent,\n} from './components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component';\nimport { MtSearchResultsTableComponent } from './components/mt-search-results-table/mt-search-results-table.component';\nimport {\n  MtUserAnimeListTableComponent,\n} from './components/mt-user-anime-list-table/mt-user-anime-list-table.component';\n\nconst declarations = [\n  MtAnimeInfoComponent,\n  MtCoverMediaComponent,\n  MtGenresOverviewComponent,\n  MtListEntryFormModalComponent,\n  MtListRelatedMediaComponent,\n  MtMediaActionsComponent,\n  MtMediaDetailModalComponent,\n  MtRecentlyFinishedMediaByFormatComponent,\n  MtRecentlyFinishedMediaComponent,\n  MtRecentlyUpdatedListEntriesComponent,\n  MtSearchResultsTableComponent,\n  MtUserAnimeListTableComponent,\n];\n\n@NgModule({\n  declarations,\n  imports: [SharedModule],\n  exports: declarations,\n  entryComponents: [MtListEntryFormModalComponent, MtMediaDetailModalComponent],\n})\nexport class AnimeModule {}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/anime.module.ts","module.exports = \"<mt-modal>\\n  <mt-modal-header (onClosePressed)=\\\"this.dismiss()\\\">\\n    {{ media.title.romaji }}\\n  </mt-modal-header>\\n\\n  <form [formGroup]=\\\"listEntryForm\\\" (ngSubmit)=\\\"saveEntry()\\\">\\n    <mt-modal-content>\\n      <!-- status -->\\n      <div class=\\\"form-group\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Status\\\" formControlName=\\\"status\\\">\\n            <mat-option *ngFor=\\\"let status of liestEntryStatusList\\\" [value]=\\\"status.value\\\">\\n              {{ status.label }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <!-- score -->\\n      <div class=\\\"form-group\\\">\\n        <mat-form-field class=\\\"score-input\\\">\\n          <mat-label>Score</mat-label>\\n          <input\\n            matInput\\n            type=\\\"number\\\"\\n            min=\\\"0\\\"\\n            max=\\\"10\\\"\\n            step=\\\".1\\\"\\n            [placeholder]=\\\"listEntry ? listEntry.scoreRaw / 10 : 5\\\"\\n            formControlName=\\\"score\\\"\\n          />\\n        </mat-form-field>\\n        / 10\\n      </div>\\n\\n      <!--<mat-slider min=\\\"0\\\" max=\\\"10\\\" value=\\\"5\\\" step=\\\"0.5\\\" tickInterval=\\\"2\\\" class=\\\"full-width no-padding\\\"></mat-slider>-->\\n\\n      <!--<span *ngIf=\\\"listEntry !== undefined\\\">-->\\n      <!--<button mat-raised-button color=\\\"warn\\\" class=\\\"margin-right-s square-button\\\" (click)=\\\"deleteEntry($event)\\\">-->\\n      <!--<fa-icon name=\\\"trash\\\" class=\\\"baseline\\\"></fa-icon>-->\\n      <!--</button>-->\\n      <!--</span>-->\\n    </mt-modal-content>\\n\\n    <mat-divider></mat-divider>\\n\\n    <mt-modal-footer>\\n      <span class=\\\"float-right\\\">\\n        <button\\n          mat-raised-button\\n          color=\\\"accent\\\"\\n          class=\\\"margin-right-xs\\\"\\n          [disabled]=\\\"!listEntryForm.valid || !isSubmitEnabled()\\\"\\n        >\\n          <fa-icon name=\\\"save\\\" class=\\\"baseline margin-right-xxxs\\\"></fa-icon>\\n          Submit\\n        </button>\\n\\n        <button mat-raised-button class=\\\"float-right\\\" (click)=\\\"dismiss($event)\\\">\\n          <fa-icon name=\\\"times\\\" class=\\\"baseline margin-right-xxxs\\\"></fa-icon>\\n          Cancel\\n        </button>\\n      </span>\\n    </mt-modal-footer>\\n  </form>\\n</mt-modal>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component.html\n// module id = ../../../../../src/app/modules/anime/components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\n.content .form-group {\\n  margin: auto; }\\n\\n.content mat-form-field {\\n  width: 100%; }\\n  .content mat-form-field.score-input {\\n    width: 72px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component.scss\n// module id = ../../../../../src/app/modules/anime/components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component.scss\n// module chunks = main","import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { tap } from 'rxjs/operators';\n\nimport { AnimeService } from '../../../../../services/anime.service';\nimport { listEntryStatusValues } from '../../../../../types/anilist/enums/listEntryStatus';\nimport { ListEntry } from '../../../../../types/anilist/listEntry.types';\nimport { Media } from '../../../../../types/anilist/media.types';\n\ntype ListEntryFormModalParameters = {\n  listEntry: ListEntry;\n  media: Media;\n};\n\n@Component({\n  selector: 'mt-list-entry-form-modal',\n  templateUrl: './mt-list-entry-form-modal.component.html',\n  styleUrls: ['./mt-list-entry-form-modal.component.scss'],\n})\nexport class MtListEntryFormModalComponent {\n  originalEntry: ListEntry;\n  listEntry: ListEntry;\n  media: Media;\n  listEntryForm: FormGroup;\n  liestEntryStatusList = listEntryStatusValues;\n\n  constructor(\n    private animeService: AnimeService,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<MtListEntryFormModalComponent>,\n    @Inject(MAT_DIALOG_DATA) protected data: ListEntryFormModalParameters\n  ) {\n    this.listEntry = data.listEntry;\n    this.media = data.media;\n\n    if (this.listEntry) {\n      this.originalEntry = { ...this.listEntry };\n    }\n\n    this.listEntryForm = this.formBuilder.group({\n      status: [\n        this.originalEntry && this.originalEntry.status ? this.originalEntry.status : 'COMPLETED',\n        [Validators.required],\n      ],\n      score: [\n        this.originalEntry && this.originalEntry.scoreRaw && this.originalEntry.scoreRaw / 10,\n        [Validators.max(10), Validators.min(0)],\n      ],\n    });\n  }\n\n  saveEntry() {\n    const entryToSave: ListEntry = this.getFormEntry();\n\n    this.animeService\n      .saveAnimeListEntry(entryToSave)\n      .pipe(\n        tap(response => {\n          const success: boolean = response.data.SaveMediaListEntry.id !== undefined;\n          if (success) {\n            if (this.listEntry) {\n              this.listEntry.scoreRaw = entryToSave.scoreRaw;\n              this.listEntry.status = entryToSave.status;\n            }\n\n            this.dialogRef.close(this.listEntry);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  deleteEntry(event?: Event) {\n    this.preventDefault(event);\n\n    this.animeService\n      .deleteAnimeListEntry(this.listEntry)\n      .pipe(\n        tap(response => {\n          const success: boolean = response.data.DeleteMediaListEntry.deleted === true;\n          if (success) {\n            this.dialogRef.close({\n              deletedEntry: this.listEntry,\n            });\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  dismiss(event?: Event) {\n    this.preventDefault(event);\n\n    this.dialogRef.close();\n  }\n\n  isSubmitEnabled(): boolean {\n    return !this.originalEntry || this.getFormEntry() !== this.originalEntry;\n  }\n\n  private getFormEntry(): ListEntry {\n    return {\n      media: this.media,\n      scoreRaw: this.listEntryForm.value.score * 10,\n      status: this.listEntryForm.value.status,\n    };\n  }\n\n  private preventDefault(event: Event) {\n    if (event) {\n      event.preventDefault();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component.ts","module.exports = \"<mt-modal>\\n  <mt-modal-header (onClosePressed)=\\\"this.dismiss()\\\">\\n    <mt-media-actions *ngIf=\\\"media\\\" [media]=\\\"media\\\" [fromModal]=\\\"true\\\" class=\\\"inline-block margin-right-xxxs\\\">\\n    </mt-media-actions>\\n\\n    {{ media.title.romaji }}\\n  </mt-modal-header>\\n\\n  <mt-modal-content>\\n    <mt-anime-info *ngIf=\\\"media\\\" [anime]=\\\"media\\\" [generalInfoOnly]=\\\"true\\\"> </mt-anime-info>\\n  </mt-modal-content>\\n\\n  <mt-modal-footer>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"goToDetail()\\\">\\n      <fa-icon name=\\\"newspaper\\\" class=\\\"baseline margin-right-xxxs\\\"></fa-icon>\\n      Open full detail\\n    </button>\\n  </mt-modal-footer>\\n</mt-modal>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-media-detail-modal/mt-media-detail-modal.component.html\n// module id = ../../../../../src/app/modules/anime/components/modals/mt-media-detail-modal/mt-media-detail-modal.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-media-detail-modal/mt-media-detail-modal.component.scss\n// module id = ../../../../../src/app/modules/anime/components/modals/mt-media-detail-modal/mt-media-detail-modal.component.scss\n// module chunks = main","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { Media } from '../../../../../types/anilist/media.types';\n\ntype MediaDetailModalParameters = {\n  media: Media;\n};\n\n@Component({\n  selector: 'mt-media-detail-modal',\n  templateUrl: './mt-media-detail-modal.component.html',\n  styleUrls: ['./mt-media-detail-modal.component.scss'],\n})\nexport class MtMediaDetailModalComponent {\n  media: Media;\n\n  constructor(\n    private dialogRef: MatDialogRef<MtMediaDetailModalComponent>,\n    private router: Router,\n    @Inject(MAT_DIALOG_DATA) protected data: MediaDetailModalParameters\n  ) {\n    this.media = data.media;\n  }\n\n  dismiss() {\n    this.dialogRef.close();\n  }\n\n  goToDetail() {\n    this.router.navigate(['anime-detail/', this.media.id]);\n    this.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/modals/mt-media-detail-modal/mt-media-detail-modal.component.ts","module.exports = \"<div *ngIf=\\\"anime\\\" [class.general-info-only]=\\\"generalInfoOnly\\\">\\n  <div [class.row]=\\\"showAsColumns\\\">\\n    <!-- left column -->\\n    <div class=\\\"column left\\\">\\n      <img [src]=\\\"anime.coverImage?.large\\\" class=\\\"cover\\\" />\\n\\n      <div *ngIf=\\\"anime.description\\\">\\n        <h4 class=\\\"no-margin-top margin-bottom-xxs\\\">\\n          Description:\\n        </h4>\\n\\n        <div [innerHTML]=\\\"anime.description\\\"></div>\\n      </div>\\n    </div>\\n\\n    <!-- right column -->\\n    <div class=\\\"column right\\\">\\n      <p *ngIf=\\\"!generalInfoOnly && anime.format\\\" class=\\\"property-value-pair flex-box\\\">\\n        <strong class=\\\"property\\\">\\n          Format:\\n        </strong>\\n\\n        <span class=\\\"value\\\">\\n          {{ anime.format }}\\n        </span>\\n      </p>\\n\\n      <p *ngIf=\\\"!generalInfoOnly && anime.episodes\\\" class=\\\"property-value-pair flex-box\\\">\\n        <strong class=\\\"property\\\">\\n          Episodes:\\n        </strong>\\n\\n        <span class=\\\"value\\\">\\n          {{ anime.episodes }}\\n        </span>\\n      </p>\\n\\n      <p *ngIf=\\\"!generalInfoOnly && anime.duration\\\" class=\\\"property-value-pair flex-box\\\">\\n        <strong class=\\\"property\\\">\\n          Duration:\\n        </strong>\\n\\n        <span class=\\\"value\\\">\\n          {{ getFormattedMediaDuration(anime) }}\\n        </span>\\n      </p>\\n\\n      <p *ngIf=\\\"!generalInfoOnly && anime.startDate.year\\\" class=\\\"property-value-pair flex-box\\\">\\n        <strong class=\\\"property\\\">\\n          Year:\\n        </strong>\\n\\n        <span class=\\\"value\\\">\\n          {{ anime.startDate.year }}\\n        </span>\\n      </p>\\n\\n      <p *ngIf=\\\"!generalInfoOnly && anime.format?.length\\\" class=\\\"property-value-pair flex-box\\\">\\n        <strong class=\\\"property\\\">\\n          Format:\\n        </strong>\\n\\n        <span class=\\\"value\\\">\\n          {{ anime.format }}\\n        </span>\\n      </p>\\n\\n      <p *ngIf=\\\"anime.status?.length\\\" class=\\\"property-value-pair flex-box\\\">\\n        <strong class=\\\"property\\\">\\n          Status:\\n        </strong>\\n\\n        <span class=\\\"value\\\">\\n          {{ anime.status }}\\n        </span>\\n      </p>\\n\\n      <p *ngIf=\\\"anime.studios?.nodes?.length\\\" class=\\\"property-value-pair flex-box\\\">\\n        <strong class=\\\"property\\\">\\n          Studio:\\n        </strong>\\n\\n        <span class=\\\"value\\\">\\n          {{ anime.studios.nodes[0].name }}\\n        </span>\\n      </p>\\n\\n      <p *ngIf=\\\"!generalInfoOnly && anime.averageScore\\\" class=\\\"property-value-pair flex-box\\\">\\n        <strong class=\\\"property\\\">\\n          Score:\\n        </strong>\\n\\n        <span class=\\\"value\\\"> {{ anime.averageScore / 10 }}/10 </span>\\n      </p>\\n    </div>\\n  </div>\\n\\n  <!-- below columns -->\\n  <p *ngIf=\\\"!generalInfoOnly && anime.genres?.length\\\" class=\\\"property-value-pair flex-box no-margin-bottom\\\">\\n    <strong class=\\\"property\\\">\\n      Genres:\\n    </strong>\\n\\n    <span class=\\\"value\\\">\\n      <span *ngFor=\\\"let genre of anime.genres\\\">\\n        <mat-chip class=\\\"rounded\\\">{{ genre }}</mat-chip>\\n      </span>\\n    </span>\\n  </p>\\n\\n  <p *ngIf=\\\"anime.tags?.length\\\" class=\\\"property-value-pair flex-box no-margin-bottom\\\">\\n    <strong class=\\\"property\\\">\\n      Tags:\\n    </strong>\\n\\n    <span class=\\\"value\\\">\\n      <span *ngFor=\\\"let tag of anime.tags\\\">\\n        <span *ngIf=\\\"!tag.isMediaSpoiler\\\">\\n          <mat-chip [title]=\\\"tag.description\\\">{{ tag.name }}</mat-chip>\\n        </span>\\n      </span>\\n    </span>\\n  </p>\\n\\n  <!-- float fix -->\\n  <div></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-anime-info/mt-anime-info.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-anime-info/mt-anime-info.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\nimg.cover {\\n  width: 160px;\\n  max-width: 33vw;\\n  margin-right: 12px;\\n  float: left; }\\n\\n.general-info-only .property-value-pair .property {\\n  min-width: 64px !important; }\\n\\n@media (min-width: 1024px) {\\n  .row {\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-align: start;\\n        align-items: start; }\\n    .row .column {\\n      display: inline-block; }\\n      .row .column.left {\\n        width: calc(100% - 192px);\\n        padding-right: 16px;\\n        border-right: 1px solid lightgray; }\\n      .row .column.right {\\n        width: 192px;\\n        padding-left: 16px; }\\n        .row .column.right .property-value-pair:first-child {\\n          margin-top: 0; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-anime-info/mt-anime-info.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-anime-info/mt-anime-info.component.scss\n// module chunks = main","import { Component, Input } from '@angular/core';\n\nimport { Anime } from '../../../../types/anilist/anime.types';\nimport { Media } from '../../../../types/anilist/media.types';\nimport { getFormattedMediaDuration } from '../../domain/anime.domain';\n\n@Component({\n  selector: 'mt-anime-info',\n  templateUrl: './mt-anime-info.component.html',\n  styleUrls: ['./mt-anime-info.component.scss'],\n})\nexport class MtAnimeInfoComponent {\n  @Input() anime: Anime;\n  @Input() showAsColumns?: boolean;\n  @Input() generalInfoOnly?: boolean;\n\n  getFormattedMediaDuration(media: Media) {\n    return getFormattedMediaDuration(media);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-anime-info/mt-anime-info.component.ts","module.exports = \"<div *ngIf=\\\"media\\\" (click)=\\\"showDetail()\\\" class=\\\"clickable\\\">\\n  <div [style.background-image]=\\\"'url(' + media.coverImage.medium + ')'\\\" class=\\\"cover\\\">\\n    <div class=\\\"backdrop\\\">\\n      <div class=\\\"full-width\\\">\\n        <div *ngIf=\\\"media.title\\\">\\n          {{ media.title.romaji }}\\n        </div>\\n\\n        <div *ngIf=\\\"media.averageScore\\\">({{ media.averageScore / 10 }})</div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-cover-media/mt-cover-media.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-cover-media/mt-cover-media.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\n.cover {\\n  width: 100px;\\n  height: 138px;\\n  background-position: center center;\\n  background-size: cover; }\\n  .cover:hover .backdrop {\\n    opacity: 1; }\\n  .cover:not(:hover) .backdrop {\\n    opacity: 0; }\\n  .cover .backdrop {\\n    font-size: 12px;\\n    padding: 4px;\\n    box-sizing: border-box;\\n    width: 100%;\\n    height: 100%;\\n    transition: 0.2s;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-align: center;\\n        align-items: center;\\n    text-align: center;\\n    pointer-events: none;\\n    background: rgba(0, 0, 0, 0.5);\\n    color: white; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-cover-media/mt-cover-media.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-cover-media/mt-cover-media.component.scss\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n\nimport { defaultModalOptions } from '../../../../app.constants';\nimport { ListEntry } from '../../../../types/anilist/listEntry.types';\nimport { Media } from '../../../../types/anilist/media.types';\nimport { MtMediaDetailModalComponent } from '../modals/mt-media-detail-modal/mt-media-detail-modal.component';\n\n@Component({\n  selector: 'mt-cover-media',\n  templateUrl: './mt-cover-media.component.html',\n  styleUrls: ['./mt-cover-media.component.scss'],\n})\nexport class MtCoverMediaComponent implements OnInit {\n  @Input() listEntry?: ListEntry;\n  @Input() media: Media;\n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this.media && this.listEntry) {\n      this.media = this.listEntry.media;\n      delete this.listEntry.media;\n      this.media.mediaListEntry = this.listEntry;\n    }\n  }\n\n  showDetail() {\n    this.dialog.open(MtMediaDetailModalComponent, {\n      ...defaultModalOptions,\n      maxWidth: '800px',\n      data: {\n        media: this.media,\n      },\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-cover-media/mt-cover-media.component.ts","module.exports = \"<h3>\\n  Genres Overview\\n</h3>\\n\\n<mat-grid-list *ngIf=\\\"(genreStatsList?.length | sort: 'amount')\\\" [cols]=\\\"getColumnCount()\\\" rowHeight=\\\"32px\\\">\\n  <mat-grid-tile\\n    *ngFor=\\\"let genreStats of genreStatsList\\\"\\n    [matTooltip]=\\\"genreStats.amount + ' entries'\\\"\\n    matTooltipPosition=\\\"above\\\"\\n  >\\n    {{ genreStats.genre }} ({{ genreStats.percentage }}%)\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-genres-overview/mt-genres-overview.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-genres-overview/mt-genres-overview.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-grid-tile {\\n  cursor: default; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-genres-overview/mt-genres-overview.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-genres-overview/mt-genres-overview.component.scss\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\n\nimport { GenreStats } from '../../../../types/anilist/genreStats.types';\n\n@Component({\n  selector: 'mt-genres-overview',\n  templateUrl: './mt-genres-overview.component.html',\n  styleUrls: ['./mt-genres-overview.component.scss'],\n})\nexport class MtGenresOverviewComponent implements OnInit {\n  @Input() genreStatsList: GenreStats[];\n\n  maxColumnCount: number = 5;\n  minColumnWidth: number = 160;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.calculateStatistics();\n  }\n\n  private calculateStatistics() {\n    let totalCount: number = 0;\n\n    this.genreStatsList.forEach((genreStats: GenreStats) => {\n      totalCount += genreStats.amount;\n    });\n\n    this.genreStatsList.forEach((genreStats: GenreStats) => {\n      genreStats.percentage = Math.round((genreStats.amount * 100) / totalCount);\n    });\n  }\n\n  getColumnCount(): number {\n    const columnCount: number = window.screen.width / this.minColumnWidth;\n    return Math.floor(columnCount < this.maxColumnCount ? columnCount : this.maxColumnCount);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-genres-overview/mt-genres-overview.component.ts","module.exports = \"<mat-card class=\\\"composite compact\\\">\\n  <div class=\\\"header\\\">\\n    <h4 class=\\\"no-margin\\\">\\n      Media related to what you have watched\\n    </h4>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n\\n  <div class=\\\"content\\\">\\n    <mat-spinner *ngIf=\\\"!ready\\\" mode=\\\"indeterminate\\\" class=\\\"margin-auto\\\"></mat-spinner>\\n\\n    <div *ngIf=\\\"mediaList?.length\\\" class=\\\"cover-media-grid\\\">\\n      <mt-cover-media *ngFor=\\\"let media of mediaList\\\" [media]=\\\"media\\\"></mt-cover-media>\\n    </div>\\n\\n    <mat-card *ngIf=\\\"error\\\" class=\\\"error\\\">\\n      <h4>\\n        <fa-icon name=\\\"exclamation-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n        {{ error }}\\n      </h4>\\n    </mat-card>\\n  </div>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-list-related-media/mt-list-related-media.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-list-related-media/mt-list-related-media.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-list-related-media/mt-list-related-media.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-list-related-media/mt-list-related-media.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { AnimeService } from '../../../../services/anime.service';\nimport { AuthStore } from '../../../../store/auth.store';\nimport { Media } from '../../../../types/anilist/media.types';\n\n@Component({\n  selector: 'mt-list-related-media',\n  templateUrl: './mt-list-related-media.component.html',\n  styleUrls: ['./mt-list-related-media.component.scss'],\n})\nexport class MtListRelatedMediaComponent {\n  mediaList: Media[];\n  maxEntries: number = 20;\n\n  ready: boolean;\n  error: Error;\n\n  constructor(private animeService: AnimeService, private authStore: AuthStore) {\n    this.animeService\n      .getRelatedAnimeMedia(this.authStore.getUser())\n      .pipe(\n        tap(relatedMediaList => {\n          this.mediaList = relatedMediaList;\n        }),\n        catchError(error => {\n          this.error = error;\n          this.ready = true;\n\n          return of();\n        })\n      )\n      .subscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-list-related-media/mt-list-related-media.component.ts","module.exports = \"<fa-icon name=\\\"bars\\\" class=\\\"menu-toggle clickable\\\" [matMenuTriggerFor]=\\\"entryMenu\\\"></fa-icon>\\n\\n<mat-menu #entryMenu=\\\"matMenu\\\">\\n  <mt-menu-action (onPress)=\\\"saveToList()\\\" disabled=\\\"{{ !user }}\\\" icon=\\\"{{ isUpdateAvailable() ? 'pen' : 'plus' }}\\\">\\n    {{ isUpdateAvailable() ? 'Update entry' : 'Add to list' }}\\n  </mt-menu-action>\\n\\n  <div *ngIf=\\\"isUpdateAvailable()\\\">\\n    <mt-menu-action (onPress)=\\\"toggleFavourite()\\\" icon=\\\"star\\\">\\n      Toggle favourite\\n    </mt-menu-action>\\n  </div>\\n\\n  <div *ngIf=\\\"isUpdateAvailable()\\\">\\n    <mt-menu-action (onPress)=\\\"deleteEntry()\\\" icon=\\\"trash\\\">\\n      Delete from list\\n    </mt-menu-action>\\n  </div>\\n\\n  <div *ngIf=\\\"media && !fromModal\\\">\\n    <mt-menu-action (onPress)=\\\"showDetail()\\\" icon=\\\"id-card\\\">\\n      Additional info\\n    </mt-menu-action>\\n  </div>\\n\\n  <mt-menu-action (onPress)=\\\"viewOnAniList()\\\" icon=\\\"external-link-alt\\\">\\n    View on AniList\\n  </mt-menu-action>\\n</mat-menu>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-media-actions/mt-media-actions.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-media-actions/mt-media-actions.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\n:host {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-align: center;\\n      align-items: center;\\n  overflow: visible; }\\n\\n.action-icon {\\n  min-width: 24px;\\n  display: inline-block;\\n  text-align: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-media-actions/mt-media-actions.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-media-actions/mt-media-actions.component.scss\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { takeUntil, tap } from 'rxjs/operators';\n\nimport { defaultModalOptions } from '../../../../app.constants';\nimport { AnimeService } from '../../../../services/anime.service';\nimport { AuthService } from '../../../../services/auth.service';\nimport { AuthStore } from '../../../../store/auth.store';\nimport { ListEntry } from '../../../../types/anilist/listEntry.types';\nimport { Media } from '../../../../types/anilist/media.types';\nimport { User } from '../../../../types/anilist/user.types';\nimport {\n  WithObservableOnDestroy,\n} from '../../../shared/components/with-observable-on-destroy/with-observable-on-destroy.component';\nimport { MtListEntryFormModalComponent } from '../modals/mt-list-entry-form-modal/mt-list-entry-form-modal.component';\nimport { MtMediaDetailModalComponent } from '../modals/mt-media-detail-modal/mt-media-detail-modal.component';\n\n@Component({\n  selector: 'mt-media-actions',\n  templateUrl: './mt-media-actions.component.html',\n  styleUrls: ['./mt-media-actions.component.scss'],\n})\nexport class MtMediaActionsComponent extends WithObservableOnDestroy implements OnInit {\n  @Input() listEntry?: ListEntry;\n  @Input() media: Media;\n  @Input() fromModal?: boolean;\n  @Output() onUpdate?: EventEmitter<ListEntry> = new EventEmitter<ListEntry>();\n\n  user: User;\n\n  constructor(\n    private dialog: MatDialog,\n    private matSnackBar: MatSnackBar,\n    private animeService: AnimeService,\n    private authService: AuthService,\n    private authStore: AuthStore\n  ) {\n    super();\n\n    this.user = this.authStore.getUser();\n\n    this.authService.userChange\n      .pipe(\n        takeUntil(this.destroyed$),\n        tap((user: User) => {\n          this.user = user;\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnInit() {\n    if (this.media && this.media.mediaListEntry && !this.listEntry) {\n      this.listEntry = this.media.mediaListEntry;\n    }\n  }\n\n  saveToList() {\n    this.showFormModal()\n      .afterClosed()\n      .pipe(\n        tap(result => {\n          if (result) {\n            if (result.savedEntry) {\n              this.showSavedEntryToast(result.savedEntry);\n            }\n            if (result.deletedEntry) {\n              this.showDeletedEntryToast(result.deletedEntry);\n            }\n\n            this.onUpdate.emit(result.savedEntry || result.deletedEntry);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  toggleFavourite() {\n    const targetEntry: ListEntry = this.getListEntry();\n\n    this.animeService\n      .toggleFavouriteAnimeListEntry(targetEntry)\n      .pipe(\n        tap(response => {\n          const success: boolean = response.data.ToggleFavourite !== undefined;\n          if (success) {\n            this.showToggledFavouriteToast(targetEntry);\n            this.onUpdate.emit(targetEntry);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  deleteEntry() {\n    const targetEntry: ListEntry = this.getListEntry();\n\n    this.animeService\n      .deleteAnimeListEntry(targetEntry)\n      .pipe(\n        tap(response => {\n          const success: boolean = response.data.DeleteMediaListEntry.deleted === true;\n          if (success) {\n            this.showDeletedEntryToast(targetEntry);\n            this.onUpdate.emit(targetEntry);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  showDetail() {\n    this.dialog.open(MtMediaDetailModalComponent, {\n      ...defaultModalOptions,\n      maxWidth: '800px',\n      data: {\n        media: this.media,\n      },\n    });\n  }\n\n  viewOnAniList() {\n    window.open(`https://anilist.co/anime/${this.media.id}`);\n  }\n\n  isUpdateAvailable(): boolean {\n    return !!this.listEntry && !!this.user;\n  }\n\n  private getListEntry(): ListEntry {\n    const mediaCopy: Media = { ...this.media };\n    mediaCopy.mediaListEntry = undefined;\n\n    const listEntryCopy: ListEntry = { ...this.listEntry };\n    listEntryCopy.media = mediaCopy;\n\n    return listEntryCopy;\n  }\n\n  private showFormModal() {\n    return this.dialog.open(MtListEntryFormModalComponent, {\n      ...defaultModalOptions,\n      data: {\n        listEntry: this.listEntry,\n        media: this.media,\n      },\n    });\n  }\n\n  private showSavedEntryToast(listEntry: ListEntry) {\n    this.showToast(`Updated list entry for \"${listEntry.media.title.romaji}\"`);\n  }\n\n  private showToggledFavouriteToast(listEntry: ListEntry) {\n    this.showToast(`Toggled entry \"${listEntry.media.title.romaji}\" as favourite`);\n  }\n\n  private showDeletedEntryToast(listEntry: ListEntry) {\n    this.showToast(`Deleted list entry for \"${listEntry.media.title.romaji}\"`);\n  }\n\n  private showToast(message: string) {\n    this.matSnackBar.open(message, undefined, {\n      duration: 10000,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-media-actions/mt-media-actions.component.ts","module.exports = \"<mat-spinner *ngIf=\\\"!ready\\\" mode=\\\"indeterminate\\\" class=\\\"margin-auto\\\"></mat-spinner>\\n\\n<div *ngIf=\\\"mediaList?.length\\\" class=\\\"cover-media-grid\\\">\\n  <mt-cover-media *ngFor=\\\"let media of mediaList\\\" [media]=\\\"media\\\"></mt-cover-media>\\n</div>\\n\\n<mat-paginator\\n  *ngIf=\\\"pagination\\\"\\n  [length]=\\\"pagination.total\\\"\\n  [pageSize]=\\\"pagination.perPage\\\"\\n  (page)=\\\"changePage($event)\\\"\\n  class=\\\"basic negative-bottom-margin\\\"\\n>\\n</mat-paginator>\\n\\n<mat-card *ngIf=\\\"error\\\" class=\\\"error\\\">\\n  <h4>\\n    <fa-icon name=\\\"exclamation-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n    {{ error }}\\n  </h4>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component.scss\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { PageEvent } from '@angular/material';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { AnimeService } from '../../../../services/anime.service';\nimport { AuthStore } from '../../../../store/auth.store';\nimport { Media } from '../../../../types/anilist/media.types';\nimport { PageQuery } from '../../../../types/anilist/pageInfo.types';\n\n@Component({\n  selector: 'mt-recently-finished-media-by-format',\n  templateUrl: './mt-recently-finished-media-by-format.component.html',\n  styleUrls: ['./mt-recently-finished-media-by-format.component.scss'],\n})\nexport class MtRecentlyFinishedMediaByFormatComponent {\n  @Input() formatIn?: string[];\n  @Input() formatNotIn?: string[];\n  @Input() title: string;\n\n  whitelistedIds: number[];\n  mediaList: Media[];\n  pagination: PageQuery;\n  maxEntries: number = 16;\n\n  ready: boolean;\n  error: Error;\n\n  constructor(private animeService: AnimeService, private authStore: AuthStore) {\n    this.whitelistedIds = [];\n\n    this.animeService\n      .getAnimeListMediaIdsByStatus(this.authStore.getUser())\n      .pipe(\n        tap(listMediaIdsByStatus => {\n          this.whitelistedIds = [...(listMediaIdsByStatus.CURRENT || []), ...(listMediaIdsByStatus.PLANNING || [])];\n          this.getRecentlyFinishedAiring();\n        }),\n        catchError(error => of(this.onError(error)))\n      )\n      .subscribe();\n  }\n\n  changePage(pageEvent: PageEvent) {\n    this.pagination.pageIndex = pageEvent.pageIndex + 1;\n    this.getRecentlyFinishedAiring();\n  }\n\n  private getRecentlyFinishedAiring() {\n    this.animeService\n      .getRecentlyFinishedAiringAnime(\n        {\n          idIn: this.whitelistedIds,\n          format_in: this.formatIn,\n          format_not_in: this.formatNotIn,\n        },\n        {\n          perPage: this.maxEntries,\n          pageIndex: this.pagination && this.pagination.pageIndex,\n        }\n      )\n      .pipe(\n        tap(response => {\n          this.mediaList = response.media;\n          this.pagination = response.pageInfo;\n          this.ready = true;\n        }),\n        catchError(error => of(this.onError(error)))\n      )\n      .subscribe();\n  }\n\n  private onError(error: Error) {\n    this.error = error;\n    this.ready = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media-by-format/mt-recently-finished-media-by-format.component.ts","module.exports = \"<mat-card class=\\\"composite compact\\\">\\n  <div class=\\\"tab-group\\\">\\n    <div class=\\\"header\\\">\\n      <h4 class=\\\"no-margin\\\">\\n        Finished airing\\n      </h4>\\n    </div>\\n\\n    <div\\n      *ngFor=\\\"let tab of tabs\\\"\\n      class=\\\"header tab {{ tab === activeTab ? 'active' : 'clickable' }}\\\"\\n      (click)=\\\"activateTab(tab)\\\"\\n    >\\n      <h4 class=\\\"no-margin\\\">\\n        {{ tab.label }}\\n      </h4>\\n    </div>\\n  </div>\\n\\n  <div *ngFor=\\\"let tab of tabs\\\" [hidden]=\\\"tab !== activeTab\\\" class=\\\"content\\\">\\n    <mt-recently-finished-media-by-format [formatIn]=\\\"tab.formatIn\\\" [formatNotIn]=\\\"tab.formatNotIn\\\">\\n    </mt-recently-finished-media-by-format>\\n  </div>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media/mt-recently-finished-media.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-recently-finished-media/mt-recently-finished-media.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media/mt-recently-finished-media.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-recently-finished-media/mt-recently-finished-media.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { Tab } from '../../../../types/tab.types';\n\n@Component({\n  selector: 'mt-recently-finished-media',\n  templateUrl: './mt-recently-finished-media.component.html',\n  styleUrls: ['./mt-recently-finished-media.component.scss'],\n})\nexport class MtRecentlyFinishedMediaComponent {\n  tabs: Tab[];\n  activeTab: Tab;\n\n  constructor() {\n    this.tabs = [\n      {\n        label: 'Series',\n        formatIn: ['TV'],\n      },\n      {\n        label: 'Movies',\n        formatIn: ['MOVIE'],\n      },\n      {\n        label: 'Other',\n        formatNotIn: ['TV', 'MOVIE'],\n      },\n    ];\n\n    this.activeTab = this.tabs[0];\n  }\n\n  activateTab(tab: Tab) {\n    this.activeTab = tab;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-finished-media/mt-recently-finished-media.component.ts","module.exports = \"<mat-card class=\\\"composite compact\\\">\\n  <div class=\\\"header\\\">\\n    <h4 class=\\\"no-margin\\\">\\n      Your latest list updates\\n    </h4>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n\\n  <div class=\\\"content\\\">\\n    <mat-spinner *ngIf=\\\"!ready\\\" mode=\\\"indeterminate\\\" class=\\\"margin-auto\\\"></mat-spinner>\\n\\n    <div *ngIf=\\\"listEntries?.length\\\" class=\\\"cover-media-grid\\\">\\n      <mt-cover-media *ngFor=\\\"let entry of listEntries\\\" [listEntry]=\\\"entry\\\"></mt-cover-media>\\n    </div>\\n\\n    <mat-paginator\\n      *ngIf=\\\"pagination\\\"\\n      [length]=\\\"pagination.total\\\"\\n      [pageSize]=\\\"pagination.perPage\\\"\\n      (page)=\\\"changePage($event)\\\"\\n      class=\\\"basic negative-bottom-margin\\\"\\n    >\\n    </mat-paginator>\\n\\n    <mat-card *ngIf=\\\"error\\\" class=\\\"error\\\">\\n      <h4>\\n        <fa-icon name=\\\"exclamation-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n        {{ error }}\\n      </h4>\\n    </mat-card>\\n  </div>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { PageEvent } from '@angular/material';\nimport { tap } from 'rxjs/operators';\n\nimport { AnimeService } from '../../../../services/anime.service';\nimport { AuthService } from '../../../../services/auth.service';\nimport { AuthStore } from '../../../../store/auth.store';\nimport { ListEntry } from '../../../../types/anilist/listEntry.types';\nimport { PageQuery } from '../../../../types/anilist/pageInfo.types';\nimport { User } from '../../../../types/anilist/user.types';\n\n@Component({\n  selector: 'mt-recently-updated-list-entries',\n  templateUrl: './mt-recently-updated-list-entries.component.html',\n  styleUrls: ['./mt-recently-updated-list-entries.component.scss'],\n})\nexport class MtRecentlyUpdatedListEntriesComponent {\n  user: User;\n  listEntries: ListEntry[];\n  pagination: PageQuery;\n  maxEntries: number = 16;\n\n  ready: boolean;\n  error: Error;\n\n  constructor(private animeService: AnimeService, private authService: AuthService, private authStore: AuthStore) {\n    this.user = this.authStore.getUser();\n    this.getRecentlyUpdatedAnime();\n  }\n\n  changePage(pageEvent: PageEvent) {\n    this.pagination.pageIndex = pageEvent.pageIndex + 1;\n    this.getRecentlyUpdatedAnime();\n  }\n\n  private getRecentlyUpdatedAnime() {\n    if (this.user) {\n      this.animeService\n        .getRecentlyUpdatedAnime(this.user, {\n          perPage: this.maxEntries,\n          pageIndex: this.pagination && this.pagination.pageIndex,\n        })\n        .pipe(\n          tap(\n            response => {\n              this.listEntries = response.mediaList;\n              this.pagination = response.pageInfo;\n              this.ready = true;\n            },\n            error => {\n              this.error = error;\n              this.ready = true;\n            }\n          )\n        )\n        .subscribe();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-recently-updated-list-entries/mt-recently-updated-list-entries.component.ts","module.exports = \"<mat-table\\n  #table\\n  [dataSource]=\\\"dataSource\\\"\\n  [hidden]=\\\"!dataSource?.data?.length\\\"\\n  class=\\\"series-table\\\"\\n  matSort\\n  (matSortChange)=\\\"sortBy($event)\\\"\\n>\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      <mt-media-actions [media]=\\\"anime\\\"></mt-media-actions>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"cover-image\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Cover\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      <img [src]=\\\"anime.coverImage.medium\\\" class=\\\"cover\\\" />\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"title-romaji\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\\n      Title\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      <span class=\\\"title\\\">\\n        {{ anime.title.romaji }}\\n      </span>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"format\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\\n      Format\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      {{ anime.format }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"start-date\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n      Year\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      {{ anime.startDate.year }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"genres\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Genres\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      <mat-list>\\n        <mat-list-item *ngFor=\\\"let genre of anime.genres\\\">\\n          <mat-chip class=\\\"rounded\\\">{{ genre }}</mat-chip>\\n        </mat-list-item>\\n      </mat-list>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"score\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n      Score\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\"> {{ anime.averageScore / 10 }}/10 </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"episodes\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n      Episodes\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      {{ anime.episodes }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"tableRows\\\"></mat-header-row>\\n  <mat-row\\n    *matRowDef=\\\"let anime; columns: tableRows\\\"\\n    [class.completed]=\\\"anime?.mediaListEntry?.status === 'COMPLETED'\\\"\\n    [class.dropped]=\\\"anime?.mediaListEntry?.status === 'DROPPED'\\\"\\n    [class.paused]=\\\"anime?.mediaListEntry?.status === 'PAUSED'\\\"\\n    [class.planned]=\\\"anime?.mediaListEntry?.status === 'PLANNING'\\\"\\n    [class.repeating]=\\\"anime?.mediaListEntry?.status === 'REPEATING'\\\"\\n    [class.watching]=\\\"anime?.mediaListEntry?.status === 'CURRENT'\\\"\\n  >\\n  </mat-row>\\n</mat-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-search-results-table/mt-search-results-table.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-search-results-table/mt-search-results-table.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-search-results-table/mt-search-results-table.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-search-results-table/mt-search-results-table.component.scss\n// module chunks = main","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatSort, MatTableDataSource, Sort } from '@angular/material';\n\nimport { Anime } from '../../../../types/anilist/anime.types';\nimport { MediaSort } from '../../../../types/anilist/enums/mediaSorts';\n\n@Component({\n  selector: 'mt-search-results-table',\n  templateUrl: './mt-search-results-table.component.html',\n  styleUrls: ['./mt-search-results-table.component.scss'],\n})\nexport class MtSearchResultsTableComponent implements OnInit, OnChanges {\n  @Input() tableData: Anime[];\n  @Output() onSortChange: EventEmitter<MediaSort> = new EventEmitter<MediaSort>();\n  @ViewChild(MatSort) sort: MatSort;\n\n  tableRows: string[] = [\n    'actions',\n    'cover-image',\n    'title-romaji',\n    'format',\n    'start-date',\n    'genres',\n    'score',\n    'episodes',\n  ];\n  dataSource: MatTableDataSource<Anime>;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.tableData.currentValue !== changes.tableData.previousValue) {\n      this.initializeDataSource();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  sortBy(sort: Sort) {\n    this.onSortChange.emit(MediaSort.fromSort(sort));\n  }\n\n  private initializeDataSource() {\n    this.dataSource = new MatTableDataSource<Anime>(this.tableData);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-search-results-table/mt-search-results-table.component.ts","module.exports = \"<h3 [id]=\\\"tableStatus.value\\\" class=\\\"capitalize no-margin-bottom margin-top-xxs vertical-padding-xs\\\">\\n  {{ tableStatus.label }}\\n</h3>\\n\\n<mat-card class=\\\"no-padding\\\">\\n  <mat-table\\n    #table\\n    [dataSource]=\\\"dataSource\\\"\\n    [hidden]=\\\"!dataSource || dataSource.data.length < 1\\\"\\n    matSort\\n    class=\\\"series-table\\\"\\n  >\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let entry\\\">\\n        <mt-media-actions [listEntry]=\\\"entry\\\" [media]=\\\"entry.media\\\" (onUpdate)=\\\"onUpdate($event)\\\"> </mt-media-actions>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"cover-image\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        Cover\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let entry\\\">\\n        <img [src]=\\\"entry.media.coverImage.medium\\\" class=\\\"cover\\\" />\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"title-romaji\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>\\n        Title\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let entry\\\">\\n        <span class=\\\"title\\\">\\n          {{ entry.media.title.romaji }}\\n        </span>\\n        <span *ngIf=\\\"favouriteIDs?.indexOf(entry.media.id) >= 0\\\">\\n          <fa-icon name=\\\"heart\\\" class=\\\"favourite\\\"></fa-icon>\\n        </span>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"format\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>\\n        Format\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let entry\\\">\\n        {{ entry.media.format }}\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"start-date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n        Year\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let entry\\\">\\n        {{ entry.media.startDate.year }}\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"genres\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        Genres\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let entry\\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\\"let genre of entry.media.genres\\\">\\n            <mat-chip class=\\\"rounded\\\">{{ genre }}</mat-chip>\\n          </mat-list-item>\\n        </mat-list>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"score\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n        Score\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let entry\\\"> {{ entry.scoreRaw / 10 }}/10 </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"episodes\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n        Episodes\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let entry\\\">\\n        {{ entry.media.episodes }}\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"tableRows\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let entry; columns: tableRows\\\"></mat-row>\\n  </mat-table>\\n\\n  <mat-paginator\\n    #paginator\\n    [pageSize]=\\\"10\\\"\\n    [pageSizeOptions]=\\\"[5, 10, 25, 50, 75, 100, 250, 500, 750, 1000]\\\"\\n    [showFirstLastButtons]=\\\"true\\\"\\n    (page)=\\\"onPageChange()\\\"\\n  >\\n  </mat-paginator>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-user-anime-list-table/mt-user-anime-list-table.component.html\n// module id = ../../../../../src/app/modules/anime/components/mt-user-anime-list-table/mt-user-anime-list-table.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.favourite {\\n  padding: 3px 0 0;\\n  color: #e91e63; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-user-anime-list-table/mt-user-anime-list-table.component.scss\n// module id = ../../../../../src/app/modules/anime/components/mt-user-anime-list-table/mt-user-anime-list-table.component.scss\n// module chunks = main","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\nimport { Anime } from '../../../../types/anilist/anime.types';\nimport { ListEntry } from '../../../../types/anilist/listEntry.types';\nimport { GenericUtil } from '../../../../utils/generic.util';\n\n@Component({\n  selector: 'mt-user-anime-list-table',\n  templateUrl: './mt-user-anime-list-table.component.html',\n  styleUrls: ['./mt-user-anime-list-table.component.scss'],\n})\nexport class MtUserAnimeListTableComponent implements AfterViewInit, OnChanges {\n  @Input() tableStatus: string;\n  @Input() tableData: ListEntry[];\n  @Input() favouriteIDs: number[];\n  @Input() filter?: string;\n  @Output() onEntryUpdate?: EventEmitter<ListEntry> = new EventEmitter<ListEntry>();\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  tableRows: string[] = [\n    'actions',\n    'cover-image',\n    'title-romaji',\n    'format',\n    'start-date',\n    'genres',\n    'score',\n    'episodes',\n  ];\n  dataSource: MatTableDataSource<ListEntry>;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterViewInit() {\n    // TODO: Fix ExpressionChangedAfterItHasBeenCheckedError\n    this.initializeDataSource();\n    this.bindChildComponents();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.dataSource && changes.filter) {\n      this.dataSource.filter = changes.filter.currentValue;\n    }\n  }\n\n  onUpdate(listEntry?: ListEntry) {\n    this.onEntryUpdate.emit(listEntry);\n  }\n\n  private initializeDataSource() {\n    this.dataSource = new MatTableDataSource<ListEntry>(this.tableData);\n  }\n\n  private bindChildComponents() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.dataSource.sortingDataAccessor = (listEntry: ListEntry, property: string) => {\n      const anime: Anime = <Anime>listEntry.media;\n\n      return {\n        'title-romaji': anime.title.romaji.toLowerCase(),\n        format: anime.format.toLowerCase(),\n        'start-date': +anime.startDate.year,\n        genres: anime.genres.length ? anime.genres[0] : '',\n        score: +listEntry.scoreRaw,\n        episodes: +anime.episodes,\n      }[property];\n    };\n\n    this.dataSource.filterPredicate = (listEntry: ListEntry, filter: string) => {\n      return (\n        listEntry.media.title.romaji\n          .trim()\n          .toLowerCase()\n          .indexOf(filter.trim().toLowerCase()) >= 0\n      );\n    };\n  }\n\n  private onPageChange() {\n    GenericUtil.scrollToRef(this.elementRef);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/components/mt-user-anime-list-table/mt-user-anime-list-table.component.ts","import { SearchFilters } from '../../../api/anime/anime-api.types';\nimport { Anime } from '../../../types/anilist/anime.types';\nimport { ListEntry } from '../../../types/anilist/listEntry.types';\nimport { Media } from '../../../types/anilist/media.types';\n\nconst fallbackCover = 'assets/pictures/non-vectorial/no-cover-available.png';\n\nconst searchFilters = [\n  'id',\n  'search',\n  'startDate_greater',\n  'startDate_lesser',\n  'averageScore_greater',\n  'averageScore_lesser',\n  'genre_in',\n  'genre_not_in',\n  'format_in',\n  'format_not_in',\n  'status_in',\n  'status_not_in',\n];\n\nexport const mapQueryFilters = (query: SearchFilters, options: any) => {\n  const mappedFilters: SearchFilters = { ...options };\n\n  searchFilters.forEach((filter: string) => {\n    if (query[filter] && query[filter].length !== 0) {\n      mappedFilters[filter] = query[filter];\n    }\n  });\n\n  return mappedFilters;\n};\n\nexport const getParsedAnime = (anime: Partial<Anime>): Partial<Anime> => {\n  const parsedAnime = { ...anime };\n\n  if (parsedAnime) {\n    if (\n      parsedAnime.coverImage &&\n      parsedAnime.coverImage.medium === 'https://cdn.anilist.co/img/dir/anime/med/noimg.jpg'\n    ) {\n      parsedAnime.coverImage.medium = fallbackCover;\n    }\n\n    if (parsedAnime.mediaListEntry) {\n      getParsedListEntry(parsedAnime.mediaListEntry);\n    }\n  }\n\n  return parsedAnime;\n};\n\nexport const getParsedListEntry = (listEntry: Partial<ListEntry>): Partial<ListEntry> => {\n  const parsedListEntry = { ...listEntry };\n\n  if (parsedListEntry) {\n    if (parsedListEntry.media) {\n      getParsedAnime(<Anime>parsedListEntry.media);\n    }\n  }\n\n  return parsedListEntry;\n};\n\nexport const getFormattedMediaDuration = (media: Media) => {\n  return media.duration < 60 ? `${media.duration}m` : `${Math.floor(media.duration / 60)}h ${media.duration % 60}m`;\n};\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/anime/domain/anime.domain.ts","import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\n\nconst modules = [\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDatepickerModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatTooltipModule\n];\n\n@NgModule({\n  imports: modules,\n  exports: modules\n})\nexport class MaterialModule {}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/material/material.module.ts","module.exports = \"<i [ngClass]=\\\"[type || 'fas', 'fa-' + name, class || '']\\\"></i>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/fa-icon/fa-icon.component.html\n// module id = ../../../../../src/app/modules/shared/components/fa-icon/fa-icon.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/fa-icon/fa-icon.component.scss\n// module id = ../../../../../src/app/modules/shared/components/fa-icon/fa-icon.component.scss\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fa-icon',\n  templateUrl: './fa-icon.component.html',\n  styleUrls: ['./fa-icon.component.scss'],\n})\nexport class FaIconComponent {\n  @Input() type?: 'fas' | 'fab';\n  @Input() name: string;\n  @Input() class?: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/fa-icon/fa-icon.component.ts","module.exports = \"<div class=\\\"content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-content/mt-modal-content.component.html\n// module id = ../../../../../src/app/modules/shared/components/modal/mt-modal-content/mt-modal-content.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\n:host > .content {\\n  -ms-flex: 1;\\n      flex: 1;\\n  max-height: calc(100vh - 70px - 84px - 1px * 2);\\n  overflow-y: auto;\\n  box-sizing: border-box; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-content/mt-modal-content.component.scss\n// module id = ../../../../../src/app/modules/shared/components/modal/mt-modal-content/mt-modal-content.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mt-modal-content',\n  templateUrl: './mt-modal-content.component.html',\n  styleUrls: ['./mt-modal-content.component.scss'],\n})\nexport class MtModalContentComponent {}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-content/mt-modal-content.component.ts","module.exports = \"<mat-divider></mat-divider>\\n\\n<div class=\\\"footer no-vertical-padding\\\">\\n  <div class=\\\"full-width text-center\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-footer/mt-modal-footer.component.html\n// module id = ../../../../../src/app/modules/shared/components/modal/mt-modal-footer/mt-modal-footer.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\n:host > .footer {\\n  height: 84px;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-align: center;\\n      align-items: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-footer/mt-modal-footer.component.scss\n// module id = ../../../../../src/app/modules/shared/components/modal/mt-modal-footer/mt-modal-footer.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mt-modal-footer',\n  templateUrl: './mt-modal-footer.component.html',\n  styleUrls: ['./mt-modal-footer.component.scss'],\n})\nexport class MtModalFooterComponent {}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-footer/mt-modal-footer.component.ts","module.exports = \"<div class=\\\"header no-vertical-padding no-margin\\\">\\n  <div class=\\\"title\\\">\\n    <h3 class=\\\"no-margin\\\">\\n      <ng-content></ng-content>\\n    </h3>\\n  </div>\\n\\n  <fa-icon name=\\\"times\\\" class=\\\"clickable\\\" (click)=\\\"onClosePressed.emit()\\\"></fa-icon>\\n</div>\\n\\n<mat-divider></mat-divider>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-header/mt-modal-header.component.html\n// module id = ../../../../../src/app/modules/shared/components/modal/mt-modal-header/mt-modal-header.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\n:host > .header {\\n  height: 70px;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-align: center;\\n      align-items: center; }\\n  :host > .header > .title {\\n    -ms-flex: 1;\\n        flex: 1;\\n    padding-right: 16px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-header/mt-modal-header.component.scss\n// module id = ../../../../../src/app/modules/shared/components/modal/mt-modal-header/mt-modal-header.component.scss\n// module chunks = main","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'mt-modal-header',\n  templateUrl: './mt-modal-header.component.html',\n  styleUrls: ['./mt-modal-header.component.scss'],\n})\nexport class MtModalHeaderComponent {\n  @Output() onClosePressed: EventEmitter<void> = new EventEmitter<void>();\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal-header/mt-modal-header.component.ts","module.exports = \"<mat-card class=\\\"composite\\\">\\n  <ng-content></ng-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal/mt-modal.component.html\n// module id = ../../../../../src/app/modules/shared/components/modal/mt-modal/mt-modal.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal/mt-modal.component.scss\n// module id = ../../../../../src/app/modules/shared/components/modal/mt-modal/mt-modal.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mt-modal',\n  templateUrl: './mt-modal.component.html',\n  styleUrls: ['./mt-modal.component.scss'],\n})\nexport class MtModalComponent {}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/modal/mt-modal/mt-modal.component.ts","module.exports = \"<mat-toolbar>\\n  <div class=\\\"text-center\\\">\\n    <div>\\n      About\\n    </div>\\n\\n    <div class=\\\"links-wrapper\\\">\\n      <a [href]=\\\"gitHubProjectUrl\\\"><fa-icon type=\\\"fab\\\" name=\\\"github\\\"></fa-icon> GitHub repository </a>\\n    </div>\\n\\n    <div class=\\\"about-anilist margin-top-xxs\\\">Powered by the <mat-icon svgIcon=\\\"anilist\\\"></mat-icon> AniList API</div>\\n  </div>\\n</mat-toolbar>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-footer/mt-footer.component.html\n// module id = ../../../../../src/app/modules/shared/components/mt-footer/mt-footer.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\nmat-toolbar {\\n  display: block;\\n  height: auto;\\n  padding: 16px;\\n  font-size: 14px;\\n  line-height: 21px; }\\n  mat-toolbar .about-anilist {\\n    color: #444; }\\n    mat-toolbar .about-anilist .mat-icon[svgIcon='anilist'] {\\n      height: 12px;\\n      width: 16px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-footer/mt-footer.component.scss\n// module id = ../../../../../src/app/modules/shared/components/mt-footer/mt-footer.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'mt-footer',\n  templateUrl: './mt-footer.component.html',\n  styleUrls: ['./mt-footer.component.scss'],\n})\nexport class MtFooterComponent {\n  gitHubProjectUrl: string = 'https://github.com/jesuscc1993/unofficial-ng5-anilist-client';\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'anilist',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/pictures/vectorial/icons/anilist.svg')\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-footer/mt-footer.component.ts","module.exports = \"<mat-toolbar>\\n  <div>\\n    <span class=\\\"hide-below-s\\\">\\n      Anime management client\\n    </span>\\n  </div>\\n\\n  <div class=\\\"centered-content section-links\\\" *ngIf=\\\"user\\\">\\n    <a [routerLink]=\\\"animeSearchUrl\\\" [class.active]=\\\"onAnimeSearch\\\">\\n      <fa-icon name=\\\"search\\\" class=\\\"section-icon\\\"></fa-icon>\\n      <span class=\\\"small\\\">\\n        Anime search\\n      </span>\\n    </a>\\n    <a [routerLink]=\\\"dashboardUrl\\\" [class.active]=\\\"onDashboard\\\">\\n      <fa-icon name=\\\"columns\\\" class=\\\"section-icon\\\"></fa-icon>\\n      <span class=\\\"small\\\">\\n        Dashboard\\n      </span>\\n    </a>\\n    <a [routerLink]=\\\"userListUrl\\\" [class.active]=\\\"onUserList\\\">\\n      <fa-icon name=\\\"th-list\\\" class=\\\"section-icon\\\"></fa-icon>\\n      <span class=\\\"small\\\">\\n        User's list\\n      </span>\\n    </a>\\n  </div>\\n\\n  <!-- logged in -->\\n  <div *ngIf=\\\"user\\\" class=\\\"flex-box center\\\">\\n    <span class=\\\"padding-right-xs clickable hide-below-s\\\" [matMenuTriggerFor]=\\\"userMenu\\\">\\n      {{ user.name }}\\n    </span>\\n    <img class=\\\"avatar clickable hide-below-s\\\" [src]=\\\"user.avatar.large\\\" [matMenuTriggerFor]=\\\"userMenu\\\" />\\n\\n    <a class=\\\"clickable show-below-s\\\" [matMenuTriggerFor]=\\\"userMenu\\\">\\n      <fa-icon name=\\\"bars\\\"></fa-icon>\\n    </a>\\n\\n    <mat-menu #userMenu=\\\"matMenu\\\">\\n      <mt-menu-action (onPress)=\\\"navigateToAnilistProfile()\\\" icon=\\\"external-link-alt\\\">\\n        View profile\\n      </mt-menu-action>\\n\\n      <mt-menu-action (onPress)=\\\"logOut()\\\" icon=\\\"door-open\\\">\\n        Log out\\n      </mt-menu-action>\\n    </mat-menu>\\n  </div>\\n\\n  <!-- not logged in -->\\n  <div *ngIf=\\\"!user\\\" class=\\\"flex-box center\\\">\\n    <a *ngIf=\\\"loginAvailable\\\" [href]=\\\"apiLoginUrl\\\">\\n      <span class=\\\"hide-below-s\\\">\\n        Log in with AniList\\n      </span>\\n      <fa-icon name=\\\"sign-in-alt\\\"></fa-icon>\\n    </a>\\n  </div>\\n</mat-toolbar>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-header/mt-header.component.html\n// module id = ../../../../../src/app/modules/shared/components/mt-header/mt-header.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\nmat-toolbar {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-pack: justify;\\n      justify-content: space-between;\\n  position: relative;\\n  height: 64px;\\n  padding: 0 24px; }\\n  mat-toolbar > * {\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-align: center;\\n        align-items: center;\\n    -ms-flex: 1;\\n        flex: 1;\\n    height: 100%; }\\n    mat-toolbar > *:first-child {\\n      -ms-flex-pack: start;\\n          justify-content: flex-start; }\\n    mat-toolbar > *:not(:first-child):not(:last-child) {\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n    mat-toolbar > *:last-child {\\n      -ms-flex-pack: end;\\n          justify-content: flex-end; }\\n  mat-toolbar .centered-content {\\n    text-align: center; }\\n  mat-toolbar .section-links a {\\n    width: 96px;\\n    display: -ms-inline-flexbox;\\n    display: inline-flex;\\n    -ms-flex-direction: column;\\n        flex-direction: column;\\n    box-sizing: border-box;\\n    border-top-width: 4px;\\n    border-top-style: solid;\\n    border-bottom-width: 0;\\n    height: 100%;\\n    transition: 0.2s;\\n    font-size: 0;\\n    padding: 4px 0; }\\n    mat-toolbar .section-links a > * {\\n      font-size: initial; }\\n    mat-toolbar .section-links a .section-icon {\\n      font-size: 28px;\\n      padding: 2px 0; }\\n    mat-toolbar .section-links a.active {\\n      border-bottom-width: 4px;\\n      border-bottom-style: solid;\\n      pointer-events: none; }\\n    mat-toolbar .section-links a .small {\\n      display: block;\\n      font-size: 12px;\\n      line-height: 12px; }\\n  mat-toolbar img.avatar {\\n    max-width: 64px;\\n    max-height: 100%;\\n    width: auto;\\n    height: auto; }\\n\\n.action-icon {\\n  min-width: 24px;\\n  display: inline-block;\\n  text-align: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-header/mt-header.component.scss\n// module id = ../../../../../src/app/modules/shared/components/mt-header/mt-header.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { takeUntil, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../../environments/environment';\nimport {\n  animeSearchUrl,\n  apiLoginUrl,\n  apiTokenPrefix,\n  dashboardUrl,\n  rootUrl,\n  userListUrl,\n} from '../../../../app.constants';\nimport { AuthService } from '../../../../services/auth.service';\nimport { AuthStore } from '../../../../store/auth.store';\nimport { User } from '../../../../types/anilist/user.types';\nimport { WithObservableOnDestroy } from '../with-observable-on-destroy/with-observable-on-destroy.component';\n\n@Component({\n  selector: 'mt-header',\n  templateUrl: './mt-header.component.html',\n  styleUrls: ['./mt-header.component.scss'],\n})\nexport class MtHeaderComponent extends WithObservableOnDestroy {\n  apiLoginUrl: string = apiLoginUrl;\n  dashboardUrl: string = dashboardUrl;\n  animeSearchUrl: string = animeSearchUrl;\n  userListUrl: string = userListUrl;\n\n  user: User;\n  onRoot: boolean;\n  onDashboard: boolean;\n  onAnimeSearch: boolean;\n  onUserList: boolean;\n  loginAvailable: boolean;\n\n  constructor(private router: Router, private authService: AuthService, private authStore: AuthStore) {\n    super();\n\n    if (location.href.indexOf(apiTokenPrefix) >= 0) {\n      const locationParts: string[] = location.href.split('&')[0].split(apiTokenPrefix);\n      history.replaceState({}, 'Login success', locationParts[0]);\n      this.authService.logIn(locationParts[1]);\n      this.navigateToHomePage(true);\n    }\n\n    this.loginAvailable = environment.anilist_client_id >= 0;\n    this.user = this.authStore.getUser();\n\n    this.router.events\n      .pipe(\n        tap(() => {\n          this.onRoot = location.href.indexOf(rootUrl) >= 0;\n          this.onDashboard = location.href.indexOf(dashboardUrl) >= 0;\n          this.onAnimeSearch = location.href.indexOf(animeSearchUrl) >= 0;\n          this.onUserList = location.href.indexOf(userListUrl) >= 0;\n        })\n      )\n      .subscribe();\n\n    this.authService.userChange\n      .pipe(\n        takeUntil(this.destroyed$),\n        tap((user: User) => {\n          this.user = user;\n        })\n      )\n      .subscribe();\n  }\n\n  navigateToAnilistProfile() {\n    window.open(`https://anilist.co/user/${this.user.name}`);\n  }\n\n  navigateToUserList(replaceUrl?: boolean) {\n    this.router.navigate([userListUrl], {\n      replaceUrl: replaceUrl,\n    });\n  }\n\n  private navigateToHomePage(replaceUrl?: boolean) {\n    this.router.navigate([rootUrl], {\n      replaceUrl: replaceUrl,\n    });\n  }\n\n  protected logOut() {\n    this.authService.logOut();\n    this.user = undefined;\n    this.loginAvailable = environment.anilist_client_id >= 0;\n    this.navigateToHomePage();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-header/mt-header.component.ts","module.exports = \"<button mat-menu-item (click)=\\\"onPress.emit()\\\" [disabled]=\\\"disabled === true\\\">\\n  <fa-icon [name]=\\\"icon\\\"></fa-icon>\\n  <ng-content></ng-content>\\n</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-menu-action/mt-menu-action.component.html\n// module id = ../../../../../src/app/modules/shared/components/mt-menu-action/mt-menu-action.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\nfa-icon {\\n  min-width: 24px;\\n  display: inline-block;\\n  text-align: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-menu-action/mt-menu-action.component.scss\n// module id = ../../../../../src/app/modules/shared/components/mt-menu-action/mt-menu-action.component.scss\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'mt-menu-action',\n  templateUrl: './mt-menu-action.component.html',\n  styleUrls: ['./mt-menu-action.component.scss'],\n})\nexport class MtMenuActionComponent {\n  @Input() disabled?: boolean;\n  @Input() icon?: string;\n  @Output() onPress: EventEmitter<void> = new EventEmitter<void>();\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/mt-menu-action/mt-menu-action.component.ts","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nexport class WithObservableOnDestroy implements OnDestroy {\n  private destroyedSubject = new Subject();\n  protected destroyed$ = this.destroyedSubject.asObservable();\n\n  ngOnDestroy() {\n    this.destroyedSubject.next();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/components/with-observable-on-destroy/with-observable-on-destroy.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n  transform(array: { [index: string]: any }[], field: string, desc?: boolean) {\n    const direction: number = desc ? -1 : 1;\n\n    if (array && array.length) {\n      array.sort((a, b) => {\n        if (a[field] < b[field]) {\n          return -1 * direction;\n        } else if (a[field] > b[field]) {\n          return 1 * direction;\n        } else {\n          return 0;\n        }\n      });\n    }\n    return array;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/pipes/sort.ts","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nimport { MaterialModule } from '../material/material.module';\nimport { FaIconComponent } from './components/fa-icon/fa-icon.component';\nimport { MtModalContentComponent } from './components/modal/mt-modal-content/mt-modal-content.component';\nimport { MtModalFooterComponent } from './components/modal/mt-modal-footer/mt-modal-footer.component';\nimport { MtModalHeaderComponent } from './components/modal/mt-modal-header/mt-modal-header.component';\nimport { MtModalComponent } from './components/modal/mt-modal/mt-modal.component';\nimport { MtFooterComponent } from './components/mt-footer/mt-footer.component';\nimport { MtHeaderComponent } from './components/mt-header/mt-header.component';\nimport { MtMenuActionComponent } from './components/mt-menu-action/mt-menu-action.component';\nimport { SortPipe } from './pipes/sort';\n\nconst declarations = [\n  FaIconComponent,\n  MtFooterComponent,\n  MtHeaderComponent,\n  MtMenuActionComponent,\n  MtModalComponent,\n  MtModalContentComponent,\n  MtModalFooterComponent,\n  MtModalHeaderComponent,\n  SortPipe,\n];\n\nconst imports = [\n  BrowserAnimationsModule,\n  BrowserModule,\n  CommonModule,\n  FormsModule,\n  HttpClientModule,\n  MaterialModule,\n  ReactiveFormsModule,\n  RouterModule,\n];\n\n@NgModule({\n  declarations,\n  imports,\n  exports: [...declarations, ...imports],\n})\nexport class SharedModule {}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/modules/shared/shared.module.ts","module.exports = \"<div class=\\\"narrow-page\\\">\\n\\n  <mat-progress-bar *ngIf=\\\"searching\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n\\n  <mat-card class=\\\"composite\\\">\\n\\n    <div *ngIf=\\\"anime\\\">\\n\\n      <div class=\\\"header\\\">\\n        <h3 class=\\\"no-margin\\\">\\n          {{ anime.title.romaji }}\\n        </h3>\\n      </div>\\n\\n      <mat-divider></mat-divider>\\n\\n      <div class=\\\"content\\\">\\n\\n        <mt-anime-info\\n          *ngIf=\\\"anime\\\"\\n          [anime]=\\\"anime\\\"\\n          [showAsColumns]=\\\"true\\\">\\n        </mt-anime-info>\\n\\n      </div>\\n\\n    </div>\\n\\n  </mat-card>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-detail/anime-detail.component.html\n// module id = ../../../../../src/app/pages/anime-detail/anime-detail.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-detail/anime-detail.component.scss\n// module id = ../../../../../src/app/pages/anime-detail/anime-detail.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nimport { AnimeService } from '../../services/anime.service';\nimport { Anime } from '../../types/anilist/anime.types';\n\n@Component({\n  selector: 'mt-anime-detail',\n  templateUrl: './anime-detail.component.html',\n  styleUrls: ['./anime-detail.component.scss'],\n})\nexport class AnimeDetailPageComponent {\n  anime: Anime;\n\n  searching: boolean;\n  errorGotten: boolean;\n\n  constructor(private activatedRoute: ActivatedRoute, private animeService: AnimeService) {\n    const animeId: number = this.activatedRoute.snapshot.params.id;\n    if (animeId && animeId > 0) {\n      this.getEntry(animeId);\n    }\n  }\n\n  private getEntry(animeId: number) {\n    this.searching = true;\n    this.errorGotten = false;\n\n    this.animeService\n      .searchAnime({ id: animeId })\n      .pipe(\n        tap(\n          response => {\n            this.anime = response.media.length > 0 && response.media[0];\n            this.searching = false;\n          },\n          () => {\n            this.errorGotten = true;\n            this.searching = false;\n          }\n        )\n      )\n      .subscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-detail/anime-detail.component.ts","module.exports = \"<div class=\\\"narrow-page\\\">\\n  <mat-card *ngIf=\\\"!user\\\" class=\\\"warning margin-bottom-xs\\\">\\n    <h4>\\n      <fa-icon name=\\\"exclamation-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n      You are not logged in. Search will be available but most other features will not.\\n    </h4>\\n  </mat-card>\\n\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"search()\\\">\\n    <mat-card class=\\\"text-center\\\">\\n      <h1>\\n        <label for=\\\"searchInput\\\">\\n          Anime search\\n        </label>\\n      </h1>\\n\\n      <div class=\\\"form-group\\\">\\n        <mat-form-field class=\\\"medium display-block margin-auto\\\">\\n          <input id=\\\"searchInput\\\" matInput placeholder=\\\"Anime title\\\" formControlName=\\\"search\\\" />\\n        </mat-form-field>\\n      </div>\\n\\n      <!--<mat-form-field id=\\\"yearInput\\\">-->\\n      <!--<input matInput [matDatepicker]=\\\"startDatePicker\\\" placeholder=\\\"Year\\\" disabled>-->\\n      <!--<mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>-->\\n      <!--<mat-datepicker #startDatePicker disabled=\\\"false\\\" startView=\\\"year\\\"></mat-datepicker>-->\\n      <!--</mat-form-field>-->\\n\\n      <mat-expansion-panel class=\\\"mat-elevation-z padding-bottom-s search-filters\\\">\\n        <mat-expansion-panel-header>\\n          Advanced filters\\n        </mat-expansion-panel-header>\\n\\n        <mat-divider></mat-divider>\\n\\n        <div class=\\\"vertical-padding-xs\\\">\\n          <!-- air date -->\\n          <div class=\\\"form-group two-rows\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                type=\\\"number\\\"\\n                placeholder=\\\"Aired after year\\\"\\n                formControlName=\\\"startDate_greater\\\"\\n                [min]=\\\"minYear\\\"\\n                [max]=\\\"maxYear\\\"\\n              />\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <input\\n                matInput\\n                type=\\\"number\\\"\\n                placeholder=\\\"Aired before year\\\"\\n                formControlName=\\\"startDate_lesser\\\"\\n                [min]=\\\"minYear\\\"\\n                [max]=\\\"maxYear\\\"\\n              />\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- score -->\\n          <div class=\\\"form-group two-rows\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                type=\\\"number\\\"\\n                placeholder=\\\"Scored above\\\"\\n                formControlName=\\\"averageScore_greater\\\"\\n                min=\\\"0\\\"\\n                max=\\\"10\\\"\\n                step=\\\".1\\\"\\n              />\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <input\\n                matInput\\n                type=\\\"number\\\"\\n                placeholder=\\\"Scored below\\\"\\n                formControlName=\\\"averageScore_lesser\\\"\\n                min=\\\"0\\\"\\n                max=\\\"10\\\"\\n                step=\\\".1\\\"\\n              />\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- genre -->\\n          <div class=\\\"form-group two-rows\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Genre in...\\\" formControlName=\\\"genre_in\\\" multiple>\\n                <mat-option *ngFor=\\\"let genre of mediaGenres\\\" [value]=\\\"genre\\\">\\n                  {{ genre }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Genre not in...\\\" formControlName=\\\"genre_not_in\\\" multiple>\\n                <mat-option *ngFor=\\\"let genre of mediaGenres\\\" [value]=\\\"genre\\\">\\n                  {{ genre }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- format -->\\n          <div class=\\\"form-group two-rows\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Format in...\\\" #formatInput formControlName=\\\"format_in\\\" multiple>\\n                <mat-option *ngFor=\\\"let mediaFormat of mediaFormats\\\" [value]=\\\"mediaFormat.value\\\">\\n                  {{ mediaFormat.label }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Format not in...\\\" #formatInput formControlName=\\\"format_not_in\\\" multiple>\\n                <mat-option *ngFor=\\\"let mediaFormat of mediaFormats\\\" [value]=\\\"mediaFormat.value\\\">\\n                  {{ mediaFormat.label }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- status -->\\n          <div class=\\\"form-group two-rows\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Status in...\\\" #formatInput formControlName=\\\"status_in\\\" multiple>\\n                <mat-option *ngFor=\\\"let mediaStatus of mediaStatuses\\\" [value]=\\\"mediaStatus.value\\\">\\n                  {{ mediaStatus.label }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Status not in...\\\" #formatInput formControlName=\\\"status_not_in\\\" multiple>\\n                <mat-option *ngFor=\\\"let mediaStatus of mediaStatuses\\\" [value]=\\\"mediaStatus.value\\\">\\n                  {{ mediaStatus.label }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- on list -->\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"On list?\\\" formControlName=\\\"onList\\\">\\n                <mat-option *ngFor=\\\"let option of onListOptions\\\" [value]=\\\"option.value\\\">\\n                  {{ option.label }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"text-center padding-bottom-xs\\\">\\n          <button mat-raised-button type=\\\"button\\\" (click)=\\\"clearFilters($event)\\\">\\n            Clear filters\\n          </button>\\n        </div>\\n\\n        <mat-divider></mat-divider>\\n      </mat-expansion-panel>\\n\\n      <div class=\\\"text-center\\\">\\n        <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!searchForm.valid\\\">\\n          <fa-icon name=\\\"search baseline\\\" class=\\\"margin-right-xxxs\\\"></fa-icon>\\n          Search\\n        </button>\\n      </div>\\n    </mat-card>\\n\\n    <mat-progress-bar *ngIf=\\\"searching\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n    <div *ngIf=\\\"!searching\\\" class=\\\"progress-placeholder\\\"></div>\\n\\n    <mat-card *ngIf=\\\"error\\\" class=\\\"error\\\">\\n      <h4>\\n        <fa-icon name=\\\"exclamation-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n        {{ error }}\\n      </h4>\\n    </mat-card>\\n\\n    <mat-card *ngIf=\\\"noResults\\\" class=\\\"info\\\">\\n      <h4>\\n        <fa-icon name=\\\"info-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n        No results found\\n      </h4>\\n    </mat-card>\\n\\n    <mat-card *ngIf=\\\"animeList && animeList.length > 0\\\" class=\\\"no-padding\\\">\\n      <mt-search-results-table [tableData]=\\\"animeList\\\" (onSortChange)=\\\"sortBy($event)\\\"> </mt-search-results-table>\\n\\n      <mat-paginator\\n        [length]=\\\"pagination.total\\\"\\n        [pageSize]=\\\"pagination.perPage\\\"\\n        [pageIndex]=\\\"pagination.pageIndex\\\"\\n        [pageSizeOptions]=\\\"[5, 10, 25, 50]\\\"\\n        (page)=\\\"changePage($event)\\\"\\n      >\\n      </mat-paginator>\\n    </mat-card>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-search/anime-search.component.html\n// module id = ../../../../../src/app/pages/anime-search/anime-search.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\nmat-form-field {\\n  width: 100%; }\\n\\n#searchInput {\\n  font-size: 16px;\\n  line-height: 24px; }\\n\\n.form-group {\\n  max-width: 640px;\\n  margin: auto; }\\n  @media (min-width: 481px) {\\n    .form-group.two-rows > * {\\n      max-width: calc(50% - 16px); }\\n      .form-group.two-rows > *:first-child {\\n        float: left; }\\n      .form-group.two-rows > *:last-child {\\n        float: right; } }\\n\\n.progress-placeholder {\\n  height: 5px; }\\n\\nmat-card:not(:first-of-type) {\\n  margin-top: 24px; }\\n\\nmat-expansion-panel-header {\\n  padding: 0 8px; }\\n\\n@media (max-width: 480px) {\\n  button {\\n    width: 100%; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-search/anime-search.component.scss\n// module id = ../../../../../src/app/pages/anime-search/anime-search.component.scss\n// module chunks = main","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatExpansionPanel, PageEvent } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { takeUntil, tap } from 'rxjs/operators';\n\nimport { SearchFilters } from '../../api/anime/anime-api.types';\nimport { animeSearchUrl } from '../../app.constants';\nimport {\n  MtSearchResultsTableComponent,\n} from '../../modules/anime/components/mt-search-results-table/mt-search-results-table.component';\nimport {\n  WithObservableOnDestroy,\n} from '../../modules/shared/components/with-observable-on-destroy/with-observable-on-destroy.component';\nimport { AnimeService } from '../../services/anime.service';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthStore } from '../../store/auth.store';\nimport { Anime } from '../../types/anilist/anime.types';\nimport { mediaFormatValues } from '../../types/anilist/enums/mediaFormats';\nimport { MediaSort } from '../../types/anilist/enums/mediaSorts';\nimport { mediaStatusValues } from '../../types/anilist/enums/mediaStatus';\nimport { OnListOptions } from '../../types/anilist/enums/onListOptions';\nimport { PageInfo, PageQuery } from '../../types/anilist/pageInfo.types';\nimport { User } from '../../types/anilist/user.types';\nimport { GenericUtil } from '../../utils/generic.util';\n\n@Component({\n  selector: 'mt-anime-search',\n  templateUrl: './anime-search.component.html',\n  styleUrls: ['./anime-search.component.scss'],\n})\nexport class AnimeSearchPageComponent extends WithObservableOnDestroy implements OnInit {\n  @ViewChild(MatExpansionPanel) expansionPanel: MatExpansionPanel;\n  @ViewChild(MtSearchResultsTableComponent, { read: ElementRef }) resultsTable: ElementRef;\n\n  user: User;\n  animeList: Anime[];\n  searchForm: FormGroup;\n  pagination: PageInfo;\n  sort: string;\n  excludeOnList: boolean;\n\n  mediaGenres: string[];\n  mediaFormats = mediaFormatValues;\n  mediaStatuses = mediaStatusValues;\n  onListOptions = OnListOptions.LIST;\n  minYear = 1900;\n  maxYear = new Date().getFullYear() + 1;\n\n  searching: boolean;\n  noResults: boolean;\n  error: Error;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private animeService: AnimeService,\n    private authService: AuthService,\n    private authStore: AuthStore,\n    private formBuilder: FormBuilder\n  ) {\n    super();\n\n    this.user = this.authStore.getUser();\n    this.setupForm();\n\n    this.animeService\n      .getAnimeGenres()\n      .pipe(tap(mediaGenres => (this.mediaGenres = mediaGenres)))\n      .subscribe();\n\n    this.authService.userChange\n      .pipe(\n        takeUntil(this.destroyed$),\n        tap((user: User) => {\n          this.user = user;\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnInit() {\n    const queryParams = this.activatedRoute.snapshot.queryParams;\n    const fieldKeys = Object.keys(queryParams);\n\n    if (fieldKeys.length) {\n      Object.keys(queryParams).forEach(fieldKey => {\n        const field = this.searchForm.controls[fieldKey];\n        const value = JSON.parse(queryParams[fieldKey]);\n\n        if (field && GenericUtil.isSet(value)) {\n          field.setValue(value);\n        }\n      });\n\n      this.sort = queryParams.sort ? JSON.parse(queryParams.sort) : this.sort;\n\n      this.expansionPanel.open();\n      this.search();\n    }\n  }\n\n  clearFilters(event?: Event) {\n    this.preventDefault(event);\n    this.setupForm();\n    this.updateQueryParams();\n  }\n\n  sortBy(mediaSort: MediaSort) {\n    this.sort = mediaSort && mediaSort.value;\n    this.search();\n  }\n\n  private preventDefault(event: Event) {\n    if (event) {\n      event.preventDefault();\n    }\n  }\n\n  private setupForm() {\n    this.searchForm = this.formBuilder.group({\n      search: [''],\n      startDate_greater: [undefined, [Validators.min(this.minYear), Validators.max(this.maxYear)]],\n      startDate_lesser: [undefined, [Validators.min(this.minYear), Validators.max(this.maxYear)]],\n      averageScore_greater: [undefined, [Validators.min(0), Validators.max(10)]],\n      averageScore_lesser: [undefined, [Validators.min(0), Validators.max(10)]],\n      genre_in: [[]],\n      genre_not_in: [[]],\n      format_in: [[]],\n      format_not_in: [[]],\n      status_in: [[]],\n      status_not_in: [[]],\n      onList: [undefined],\n    });\n  }\n\n  private search(page?: number, perPage?: number) {\n    GenericUtil.scrollToRef(this.resultsTable);\n    this.updateQueryParams();\n\n    this.searching = true;\n    this.error = undefined;\n\n    const filters = this.searchForm.value;\n\n    let query: SearchFilters = {\n      search: filters.search,\n      genre_in: filters.genre_in,\n      genre_not_in: filters.genre_not_in,\n      format_in: filters.format_in,\n      format_not_in: filters.format_not_in,\n      status_in: filters.status_in,\n      status_not_in: filters.status_not_in,\n      onList: filters.onList,\n      sort: this.sort,\n    };\n\n    if (filters.startDate_lesser) {\n      query.startDate_lesser = this.getDateScalarFromYear(filters.startDate_lesser);\n    }\n    if (filters.startDate_greater) {\n      query.startDate_greater = this.getDateScalarFromYear(filters.startDate_greater - 1) + 1231;\n    }\n    if (filters.averageScore_greater) {\n      query.averageScore_greater = filters.averageScore_greater * 10;\n    }\n    if (filters.averageScore_lesser) {\n      query.averageScore_lesser = filters.averageScore_lesser * 10;\n    }\n\n    const pageInfo: PageQuery = {\n      pageIndex: page,\n      perPage: perPage,\n    };\n\n    this.animeService\n      .searchAnime(query, pageInfo)\n      .pipe(\n        tap(\n          response => {\n            this.noResults = response.media.length < 1;\n            this.animeList = response.media;\n            this.pagination = response.pageInfo;\n            this.pagination.pageIndex = response.pageInfo.currentPage - 1;\n            this.searching = false;\n          },\n          error => {\n            this.error = error;\n            this.noResults = false;\n            this.searching = false;\n          }\n        )\n      )\n      .subscribe();\n  }\n\n  private getDateScalarFromYear(year: number): number {\n    return year * 10000;\n  }\n\n  private updateQueryParams() {\n    const queryParams = {\n      sort: JSON.stringify(this.sort),\n    };\n\n    const filters = this.searchForm.value;\n\n    Object.keys(filters).forEach(fieldKey => {\n      const field = filters[fieldKey];\n\n      if (GenericUtil.isSet(field) && field.length !== 0) {\n        queryParams[fieldKey] = JSON.stringify(field);\n      }\n    });\n\n    this.router.navigate([animeSearchUrl], { queryParams: queryParams });\n  }\n\n  private changePage(pageEvent: PageEvent) {\n    this.search(pageEvent.pageIndex + 1, pageEvent.pageSize);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/anime-search/anime-search.component.ts","module.exports = \"<div class=\\\"columns-wrapper\\\">\\n  <div class=\\\"column left-sidebar\\\">\\n    <mt-recently-updated-list-entries></mt-recently-updated-list-entries>\\n  </div>\\n  <div class=\\\"column main-content\\\">\\n    <mat-card class=\\\"warning\\\">\\n      <h4>\\n        <fa-icon name=\\\"exclamation-triangle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n        Work In Progress\\n      </h4>\\n    </mat-card>\\n    <!--<mt-list-related-media></mt-list-related-media>-->\\n  </div>\\n  <div class=\\\"column right-sidebar\\\">\\n    <mt-recently-finished-media></mt-recently-finished-media>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/pages/dashboard/dashboard.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\n.columns-wrapper {\\n  font-size: 0; }\\n  .columns-wrapper > * {\\n    font-size: initial; }\\n  .columns-wrapper .column {\\n    padding: 0 6px;\\n    vertical-align: top;\\n    display: inline-block;\\n    box-sizing: border-box; }\\n    .columns-wrapper .column.left-sidebar {\\n      width: 440px;\\n      padding-left: 0; }\\n    .columns-wrapper .column.main-content {\\n      width: calc(100% - 880px); }\\n    .columns-wrapper .column.right-sidebar {\\n      width: 440px;\\n      padding-right: 0; }\\n    @media (max-width: 1360px) {\\n      .columns-wrapper .column {\\n        padding: 6px 0;\\n        width: 100% !important; }\\n        .columns-wrapper .column.left-sidebar, .columns-wrapper .column.right-sidebar {\\n          float: none; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/dashboard/dashboard.component.scss\n// module id = ../../../../../src/app/pages/dashboard/dashboard.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mt-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardPageComponent {\n  constructor() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/dashboard/dashboard.component.ts","module.exports = \"<div class=\\\"narrow-page\\\">\\n\\n  <mat-card>\\n    <div class=\\\"text-center vertical-padding-m\\\">\\n      <h2>\\n        <a [href]=apiLoginUrl>Log in with AniList</a>\\n      </h2>\\n    </div>\\n  </mat-card>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/login/login.component.html\n// module id = ../../../../../src/app/pages/login/login.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/login/login.component.scss\n// module id = ../../../../../src/app/pages/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { apiLoginUrl } from '../../app.constants';\n\n@Component({\n  selector: 'mt-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginPageComponent implements OnInit {\n  apiLoginUrl: string = apiLoginUrl;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/login/login.component.ts","module.exports = \"<mat-card class=\\\"inline-block text-center\\\">\\n  <fa-icon name=\\\"exclamation-circle\\\" class=\\\"fa-5x\\\"></fa-icon>\\n  <h1>\\n    Error 404\\n  </h1>\\n  <h2>\\n    Page not found\\n  </h2>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/page-not-found/page-not-found.component.html\n// module id = ../../../../../src/app/pages/page-not-found/page-not-found.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/page-not-found/page-not-found.component.scss\n// module id = ../../../../../src/app/pages/page-not-found/page-not-found.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mt-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/page-not-found/page-not-found.component.ts","module.exports = \"<div class=\\\"narrow-page\\\">\\n  <mat-card *ngIf=\\\"!user\\\" class=\\\"alert warning\\\">\\n    <h4>\\n      <fa-icon name=\\\"exclamation-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n      You are not logged in.\\n    </h4>\\n  </mat-card>\\n\\n  <mat-spinner *ngIf=\\\"user && !ready\\\" mode=\\\"indeterminate\\\" class=\\\"full-page\\\"></mat-spinner>\\n\\n  <div *ngIf=\\\"user && ready && !errorGotten\\\">\\n    <div *ngIf=\\\"statuses && statuses.length\\\">\\n      <mat-card class=\\\"table-filter\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter by name\\\" />\\n        </mat-form-field>\\n      </mat-card>\\n\\n      <mat-card class=\\\"margin-top-s\\\">\\n        <h3>\\n          Show / Go to\\n        </h3>\\n\\n        <div class=\\\"statuses-wrapper\\\">\\n          <span *ngFor=\\\"let status of statuses\\\" class=\\\"status-wrapper\\\">\\n            <div *ngIf=\\\"hasDataOfStatus(status.value)\\\">\\n              <mat-checkbox [(ngModel)]=\\\"status.shown\\\">\\n                <span class=\\\"capitalize\\\">\\n                  {{ status.value.toLowerCase() }}\\n                </span>\\n              </mat-checkbox>\\n\\n              <a href=\\\"{{ '/user-anime-list#' + status.value }}\\\" class=\\\"go-to-link\\\">\\n                <fa-icon name=\\\"arrow-down\\\" class=\\\"vertically-centered\\\"></fa-icon>\\n              </a>\\n            </div>\\n          </span>\\n        </div>\\n      </mat-card>\\n\\n      <div *ngFor=\\\"let status of statuses\\\">\\n        <div *ngIf=\\\"status.shown && hasDataOfStatus(status.value)\\\" class=\\\"status-table-wrapper\\\">\\n          <mt-user-anime-list-table\\n            [tableStatus]=\\\"status\\\"\\n            [tableData]=\\\"statusObjects[status.value]\\\"\\n            [favouriteIDs]=\\\"favouriteIDs\\\"\\n            [filter]=\\\"filter\\\"\\n            (onEntryUpdate)=\\\"onEntryUpdate($event)\\\"\\n          >\\n          </mt-user-anime-list-table>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"padding-top-xs padding-bottom-m\\\">\\n        <h3>\\n          Settings\\n        </h3>\\n\\n        <mat-slide-toggle [checked]=\\\"reloadOnUpdate\\\" (change)=\\\"reloadOnUpdate = !reloadOnUpdate\\\">\\n          Reload on update\\n        </mat-slide-toggle>\\n      </div>\\n\\n      <mt-genres-overview [genreStatsList]=\\\"user.stats.favouredGenresOverview\\\"> </mt-genres-overview>\\n    </div>\\n\\n    <mat-card *ngIf=\\\"ready && !error && (!statuses || !statuses.length)\\\">\\n      <h4>\\n        <fa-icon name=\\\"exclamation-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n        You haven't added any entries yet.\\n      </h4>\\n    </mat-card>\\n  </div>\\n\\n  <mat-card *ngIf=\\\"error\\\" class=\\\"error\\\">\\n    <h4>\\n      <fa-icon name=\\\"exclamation-circle\\\" class=\\\"margin-right-xxs\\\"></fa-icon>\\n      {{ error }}\\n    </h4>\\n  </mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/user-anime-list/user-anime-list.component.html\n// module id = ../../../../../src/app/pages/user-anime-list/user-anime-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* modals */\\n/* generic */\\n/* specific */\\n.table-filter {\\n  padding-top: 8px !important;\\n  padding-bottom: 0 !important; }\\n\\n.statuses-wrapper mat-checkbox {\\n  display: inline-block;\\n  vertical-align: text-bottom; }\\n\\n.statuses-wrapper .status-wrapper {\\n  margin-right: 16px;\\n  display: inline-block;\\n  min-width: 104px; }\\n  .statuses-wrapper .status-wrapper .go-to-link {\\n    height: 24px;\\n    display: inline-block;\\n    vertical-align: top; }\\n\\n.status-table-wrapper:not(:last-of-type) {\\n  margin-bottom: 40px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/user-anime-list/user-anime-list.component.scss\n// module id = ../../../../../src/app/pages/user-anime-list/user-anime-list.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { rootUrl } from '../../app.constants';\nimport { AnimeService } from '../../services/anime.service';\nimport { AuthStore } from '../../store/auth.store';\nimport { ListEntry, ListEntryStatus } from '../../types/anilist/listEntry.types';\nimport { User } from '../../types/anilist/user.types';\n\n@Component({\n  selector: 'mt-user-anime-list',\n  templateUrl: './user-anime-list.component.html',\n  styleUrls: ['./user-anime-list.component.scss'],\n})\nexport class UserAnimeListPageComponent {\n  user: User;\n  statusObjects: { [Status in ListEntryStatus]?: ListEntry[] };\n  statuses: { value: ListEntryStatus; shown: boolean }[];\n  favouriteIDs: number[];\n\n  loggedIn: boolean;\n  ready: boolean;\n  error: Error;\n\n  reloadOnUpdate: boolean = true;\n  filter: string;\n\n  constructor(private router: Router, private animeService: AnimeService, private authStore: AuthStore) {\n    this.user = this.authStore.getUser();\n    this.loggedIn = this.user !== undefined;\n\n    if (!this.loggedIn) {\n      this.router.navigate([rootUrl]);\n    }\n\n    this.updateListData();\n  }\n\n  private getUserList() {\n    if (this.user) {\n      this.animeService\n        .getAnimeList(this.user)\n        .pipe(\n          tap(response => {\n            this.statusObjects = response;\n            this.statuses = Object.keys(response)\n              .sort()\n              .map(status => ({\n                value: status as ListEntryStatus,\n                shown: true,\n              }));\n            this.ready = true;\n          }),\n          catchError(error => {\n            this.error = error;\n            this.ready = true;\n\n            return of();\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  private getListFavouriteIDs() {\n    if (this.user) {\n      this.animeService.getAnimeListFavouriteIDs(this.user, favouriteIDs => {\n        this.favouriteIDs = favouriteIDs;\n      });\n    }\n  }\n\n  hasDataOfStatus(status: string): boolean {\n    return this.statusObjects && this.statusObjects[status] && this.statusObjects[status].length > 0;\n  }\n\n  applyFilter(filterValue: string) {\n    this.filter = filterValue.trim().toLowerCase();\n  }\n\n  getListAsString(): string {\n    return JSON.stringify(this.statusObjects, undefined, 2);\n  }\n\n  onEntryUpdate(listEntry?: ListEntry) {\n    if (this.reloadOnUpdate) {\n      this.updateListData();\n    }\n  }\n\n  private updateListData() {\n    this.statusObjects = undefined;\n    this.statuses = undefined;\n    this.favouriteIDs = undefined;\n    this.ready = false;\n\n    this.getUserList();\n    this.getListFavouriteIDs();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/pages/user-anime-list/user-anime-list.component.ts","import 'rxjs/add/operator/map';\n\nimport { Injectable } from '@angular/core';\n\nimport { SearchFilters } from '../api/anime/anime-api.types';\nimport { AnimeApi } from '../api/anime/anime.api';\nimport { ListEntry } from '../types/anilist/listEntry.types';\nimport { PageQuery } from '../types/anilist/pageInfo.types';\nimport { User } from '../types/anilist/user.types';\n\n@Injectable()\nexport class AnimeService {\n  constructor(private animeApi: AnimeApi) {}\n\n  public getAnimeGenres() {\n    return this.animeApi.queryAnimeGenres();\n  }\n\n  public searchAnime(query: SearchFilters, pageInfo?: PageQuery) {\n    return this.animeApi.queryAnimeSearch(query, pageInfo);\n  }\n\n  public getAnimeList(user: User) {\n    return this.animeApi.queryAnimeList(user);\n  }\n\n  public getAnimeListMediaIdsByStatus(user: User) {\n    return this.animeApi.queryAnimeListMediaIdsByStatus(user);\n  }\n\n  public getRecentlyUpdatedAnime(user: User, pageInfo?: PageQuery) {\n    return this.animeApi.queryRecentlyUpdatedAnime(user, pageInfo);\n  }\n\n  public getRecentlyFinishedAiringAnime(query: any, pageInfo?: PageQuery) {\n    return this.animeApi.queryRecentlyFinishedAiringAnime(query, pageInfo);\n  }\n\n  public getRelatedAnimeMedia(user: User) {\n    return this.animeApi.queryRelatedAnimeMedia(user);\n  }\n\n  public getAnimeListFavourites(user: User, callback: (favouriteIDs: number[]) => void) {\n    return this.animeApi.queryAnimeListFavourites(user, callback);\n  }\n\n  public getAnimeListFavouriteIDs(user: User, callback: (favouriteIDs: number[]) => void) {\n    return this.animeApi.queryAnimeListFavouriteIDs(user, callback);\n  }\n\n  public saveAnimeListEntry(listEntry: ListEntry) {\n    return this.animeApi.saveAnimeListEntry(listEntry);\n  }\n\n  public deleteAnimeListEntry(listEntry: ListEntry) {\n    return this.animeApi.deleteAnimeListEntry(listEntry);\n  }\n\n  public toggleFavouriteAnimeListEntry(listEntry: ListEntry) {\n    return this.animeApi.toggleAnimeFavouriteEntry(listEntry);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/services/anime.service.ts","import 'rxjs/add/operator/map';\n\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs/Subject';\n\nimport { AuthApi } from '../api/auth/auth.api';\nimport { accessTokenCookieKey, userCookieKey } from '../app.constants';\nimport { AuthStore } from '../store/auth.store';\nimport { User } from '../types/anilist/user.types';\nimport { LocalStorage } from '../utils/local-storage.util';\n\n@Injectable()\nexport class AuthService {\n  public userChange: Subject<User> = new Subject<User>();\n\n  constructor(private authApi: AuthApi, private authStore: AuthStore) {\n    this.getAccessToken();\n    this.getUser();\n  }\n\n  public logIn(accessToken: string) {\n    this.setAccessToken(accessToken);\n\n    this.authApi\n      .queryUser()\n      .pipe(\n        tap(user => {\n          this.setUser(user);\n          this.userChange.next(user);\n        })\n      )\n      .subscribe();\n  }\n\n  public logOut() {\n    this.removeAccessToken();\n    this.removeUser();\n    this.userChange.next();\n  }\n\n  private setAccessToken(accessToken: string) {\n    this.authStore.setAccessToken(accessToken);\n    LocalStorage.setString(accessTokenCookieKey, accessToken);\n  }\n  private getAccessToken() {\n    const accessToken = LocalStorage.getString(accessTokenCookieKey);\n    this.authStore.setAccessToken(accessToken);\n  }\n  private removeAccessToken() {\n    this.authStore.removeAccessToken();\n    LocalStorage.remove(accessTokenCookieKey);\n  }\n\n  private setUser(user: User) {\n    this.authStore.setUser(user);\n    LocalStorage.setObject(userCookieKey, user);\n  }\n  private getUser() {\n    const user = LocalStorage.getObject<User>(userCookieKey);\n    this.authStore.setUser(user);\n  }\n  private removeUser() {\n    this.authStore.removeUser();\n    LocalStorage.remove(userCookieKey);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\n\nimport { User } from '../types/anilist/user.types';\n\nexport type AuthStoreState = { accessToken?: string; user?: User };\n\n@Injectable()\nexport class AuthStore {\n  private state: AuthStoreState = {};\n\n  public setAccessToken(accessToken: string) {\n    this.state = { ...this.state, accessToken };\n  }\n  public getAccessToken() {\n    return this.state.accessToken;\n  }\n  public removeAccessToken() {\n    this.state = { ...this.state, accessToken: undefined };\n  }\n\n  public setUser(user: User) {\n    this.state = { ...this.state, user };\n  }\n  public getUser() {\n    return this.state.user;\n  }\n  public removeUser() {\n    this.state = { ...this.state, user: undefined };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/store/auth.store.ts","import { FuzzyDate } from './dataTypes.types';\nimport { Media } from './media.types';\n\nexport class Anime extends Media {\n  startDate: FuzzyDate;\n  episodes: number;\n  genres: string[];\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/anime.types.ts","import { ListEntryStatus } from '../listEntry.types';\n\nexport const listEntryStatusValues: { label: string; value: ListEntryStatus }[] = [\n  { label: 'Completed', value: 'COMPLETED' },\n  { label: 'Dropped', value: 'DROPPED' },\n  { label: 'Paused', value: 'PAUSED' },\n  { label: 'Planned', value: 'PLANNING' },\n  { label: 'Repeating', value: 'REPEATING' },\n  { label: 'Watching', value: 'CURRENT' },\n];\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/listEntryStatus.ts","export const mediaFormatValues = [\n  { label: 'Movie', value: 'MOVIE' },\n  { label: 'Music', value: 'MUSIC' },\n  { label: 'ONA', value: 'ONA' },\n  { label: 'OVA', value: 'OVA' },\n  { label: 'Special', value: 'SPECIAL' },\n  { label: 'TV short', value: 'TV_SHORT' },\n  { label: 'TV', value: 'TV' },\n];\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/mediaFormats.ts","import { Sort } from '@angular/material';\n\nimport { EnumMap } from '../../enumMap.types';\n\nexport class MediaSort extends EnumMap {\n  static TITLE_ROMAJI: string = 'TITLE_ROMAJI';\n  static TITLE_ROMAJI_DESC: string = 'TITLE_ROMAJI_DESC';\n  static FORMAT: string = 'FORMAT';\n  static FORMAT_DESC: string = 'FORMAT_DESC';\n  static START_DATE: string = 'START_DATE';\n  static START_DATE_DESC: string = 'START_DATE_DESC';\n  static SCORE: string = 'SCORE';\n  static SCORE_DESC: string = 'SCORE_DESC';\n  static EPISODES: string = 'EPISODES';\n  static EPISODES_DESC: string = 'EPISODES_DESC';\n  static UPDATED_TIME: string = 'UPDATED_TIME';\n  static UPDATED_TIME_DESC: string = 'UPDATED_TIME_DESC';\n  static END_DATE: string = 'END_DATE';\n  static END_DATE_DESC: string = 'END_DATE_DESC';\n\n  static LIST = [\n    { label: 'Title (asc)', value: 'TITLE_ROMAJI' },\n    { label: 'Title (desc)', value: 'TITLE_ROMAJI_DESC' },\n    { label: 'Format (asc)', value: 'FORMAT' },\n    { label: 'Format (desc)', value: 'FORMAT_DESC' },\n    { label: 'Year (asc)', value: 'START_DATE' },\n    { label: 'Year (desc)', value: 'START_DATE_DESC' },\n    { label: 'Score (asc)', value: 'SCORE' },\n    { label: 'Score (desc)', value: 'SCORE_DESC' },\n    { label: 'Episodes (asc)', value: 'EPISODES' },\n    { label: 'Episodes (desc)', value: 'EPISODES_DESC' },\n    { label: 'Time updated (asc)', value: 'UPDATED_TIME' },\n    { label: 'Time updated (desc)', value: 'UPDATED_TIME_DESC' },\n    { label: 'Date ended (asc)', value: 'END_DATE' },\n    { label: 'Date ended (desc)', value: 'END_DATE_DESC' }\n  ];\n\n  constructor(value: string) {\n    super(value, MediaSort.LIST, true);\n  }\n\n  static fromSort(sort: Sort): MediaSort {\n    let sortKey: string = sort.active.replace(/-/g, '_');\n    if (sort.direction === 'desc') {\n      sortKey += `_${sort.direction}`;\n    }\n    return new MediaSort(sortKey);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/mediaSorts.ts","export const mediaStatusValues = [\n  { label: 'Finished', value: 'FINISHED' },\n  { label: 'Airing', value: 'RELEASING' },\n  { label: 'Unaired', value: 'NOT_YET_RELEASED' },\n  { label: 'Cancelled', value: 'CANCELLED' },\n];\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/mediaStatus.ts","import { EnumMap } from '../../enumMap.types';\n\nexport class OnListOptions extends EnumMap {\n  static LIST = [\n    { label: 'Not on list', value: false },\n    { label: 'On list only', value: true },\n    { label: 'Both', value: undefined },\n  ];\n\n  constructor(value: string) {\n    super(value, OnListOptions.LIST, true);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/enums/onListOptions.ts","import { CoverImage, FuzzyDate, Tag, Title } from './dataTypes.types';\nimport { ListEntry } from './listEntry.types';\n\nexport type MediaStatus = 'FINISHED' | 'RELEASING' | 'NOT_YET_RELEASED' | 'CANCELLED';\n\nexport class Media {\n  averageScore: number;\n  coverImage: CoverImage;\n  description: string;\n  duration: number;\n  format: string;\n  id: number;\n  mediaListEntry: ListEntry;\n  status: MediaStatus;\n  studios: NodeList;\n  tags: Tag[];\n  title: Title;\n  endDate?: FuzzyDate;\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/anilist/media.types.ts","type EnummapValue = {\n  label: string;\n  value: any;\n};\n\nexport class EnumMap {\n  label: string;\n  value: string;\n\n  constructor(value: string, mapping: EnummapValue[], ignoreCase?: boolean) {\n    return mapping.find(mediaType =>\n      ignoreCase ? mediaType.value.toLowerCase() === value.toLowerCase() : mediaType.value === value\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/types/enumMap.types.ts","import { ElementRef, Injectable } from '@angular/core';\n\n@Injectable()\nexport class GenericUtil {\n  static isSet(variable: any): boolean {\n    return variable !== undefined && variable !== null;\n  }\n\n  static scrollTo(element: Element) {\n    if (element) {\n      element.scrollIntoView({ block: 'start', behavior: 'smooth' });\n    }\n  }\n\n  static scrollToRef(elementRef: ElementRef) {\n    if (elementRef && elementRef.nativeElement) {\n      this.scrollTo(elementRef.nativeElement);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/utils/generic.util.ts","export class LocalStorage {\n  static setString(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n\n  static getString(key: string) {\n    return localStorage.getItem(key);\n  }\n\n  static remove(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  static setObject(key: string, json: any) {\n    localStorage.setItem(key, JSON.stringify(json));\n  }\n\n  static getObject<T>(key: string) {\n    const jsonString: string = localStorage.getItem(key);\n    return jsonString && (JSON.parse(jsonString) as T);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/app/utils/local-storage.util.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `envi ronment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  anilist_client_id: 1364, // 1363 = local; 1364 = gh-pages\n  production: false,\n};\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/unofficial-ng5-anilist-client/src/main.ts"],"sourceRoot":"webpack:///"}