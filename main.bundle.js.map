{"version":3,"sources":["Z:/Txus/Projects/web/ng-material/src/$_lazy_route_resource lazy","Z:/Txus/Projects/web/ng-material/src/app/app.component.html","Z:/Txus/Projects/web/ng-material/src/app/app.component.ts","Z:/Txus/Projects/web/ng-material/src/app/app.constants.ts","Z:/Txus/Projects/web/ng-material/src/app/app.module.ts","Z:/Txus/Projects/web/ng-material/src/app/components/footer/footer.component.html","Z:/Txus/Projects/web/ng-material/src/app/components/footer/footer.component.scss","Z:/Txus/Projects/web/ng-material/src/app/components/footer/footer.component.ts","Z:/Txus/Projects/web/ng-material/src/app/components/genres-overview/genres-overview.component.html","Z:/Txus/Projects/web/ng-material/src/app/components/genres-overview/genres-overview.component.scss","Z:/Txus/Projects/web/ng-material/src/app/components/genres-overview/genres-overview.component.ts","Z:/Txus/Projects/web/ng-material/src/app/components/header/header.component.html","Z:/Txus/Projects/web/ng-material/src/app/components/header/header.component.scss","Z:/Txus/Projects/web/ng-material/src/app/components/header/header.component.ts","Z:/Txus/Projects/web/ng-material/src/app/components/media-actions/media-actions.component.html","Z:/Txus/Projects/web/ng-material/src/app/components/media-actions/media-actions.component.scss","Z:/Txus/Projects/web/ng-material/src/app/components/media-actions/media-actions.component.ts","Z:/Txus/Projects/web/ng-material/src/app/components/search-results-table/search-results-table.component.html","Z:/Txus/Projects/web/ng-material/src/app/components/search-results-table/search-results-table.component.scss","Z:/Txus/Projects/web/ng-material/src/app/components/search-results-table/search-results-table.component.ts","Z:/Txus/Projects/web/ng-material/src/app/components/user-list-table/user-list-table.component.html","Z:/Txus/Projects/web/ng-material/src/app/components/user-list-table/user-list-table.component.scss","Z:/Txus/Projects/web/ng-material/src/app/components/user-list-table/user-list-table.component.ts","Z:/Txus/Projects/web/ng-material/src/app/modals/list-entry-form-modal/list-entry-form-modal.component.html","Z:/Txus/Projects/web/ng-material/src/app/modals/list-entry-form-modal/list-entry-form-modal.component.scss","Z:/Txus/Projects/web/ng-material/src/app/modals/list-entry-form-modal/list-entry-form-modal.component.ts","Z:/Txus/Projects/web/ng-material/src/app/modals/media-detail-modal/media-detail-modal.component.html","Z:/Txus/Projects/web/ng-material/src/app/modals/media-detail-modal/media-detail-modal.component.scss","Z:/Txus/Projects/web/ng-material/src/app/modals/media-detail-modal/media-detail-modal.component.ts","Z:/Txus/Projects/web/ng-material/src/app/models/anilist/listEntry.ts","Z:/Txus/Projects/web/ng-material/src/app/models/anilist/listEntryStatus.ts","Z:/Txus/Projects/web/ng-material/src/app/models/anilist/media.ts","Z:/Txus/Projects/web/ng-material/src/app/models/anilist/mediaFormats.ts","Z:/Txus/Projects/web/ng-material/src/app/models/anilist/mediaSorts.ts","Z:/Txus/Projects/web/ng-material/src/app/models/anilist/mediaStatus.ts","Z:/Txus/Projects/web/ng-material/src/app/models/anilist/mediaType.ts","Z:/Txus/Projects/web/ng-material/src/app/models/enumMap.ts","Z:/Txus/Projects/web/ng-material/src/app/modules/material.module.ts","Z:/Txus/Projects/web/ng-material/src/app/pages/anime-search/anime-search.component.html","Z:/Txus/Projects/web/ng-material/src/app/pages/anime-search/anime-search.component.scss","Z:/Txus/Projects/web/ng-material/src/app/pages/anime-search/anime-search.component.ts","Z:/Txus/Projects/web/ng-material/src/app/pages/login/login.component.html","Z:/Txus/Projects/web/ng-material/src/app/pages/login/login.component.scss","Z:/Txus/Projects/web/ng-material/src/app/pages/login/login.component.ts","Z:/Txus/Projects/web/ng-material/src/app/pages/page-not-found/page-not-found.component.html","Z:/Txus/Projects/web/ng-material/src/app/pages/page-not-found/page-not-found.component.scss","Z:/Txus/Projects/web/ng-material/src/app/pages/page-not-found/page-not-found.component.ts","Z:/Txus/Projects/web/ng-material/src/app/pages/user-list/user-list.component.html","Z:/Txus/Projects/web/ng-material/src/app/pages/user-list/user-list.component.scss","Z:/Txus/Projects/web/ng-material/src/app/pages/user-list/user-list.component.ts","Z:/Txus/Projects/web/ng-material/src/app/pipes/sort.ts","Z:/Txus/Projects/web/ng-material/src/app/providers/anime.service.ts","Z:/Txus/Projects/web/ng-material/src/environments/environment.ts","Z:/Txus/Projects/web/ng-material/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA,mM;;;;;;;;;;;;;;;;;;;ACA0C;AAM1C;IAEE;IAEA,CAAC;IAJU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAErB,CAAC;;OACW,YAAY,CAMxB;IAAD,mBAAC;CAAA;AANwB;;;;;;;;;;;;;;;;;;ACNiC;AAEnD,IAAM,MAAM,GAAW,4BAA4B,CAAC;AACpD,IAAM,WAAW,GAAW,yDAAwD,8EAAW,CAAC,iBAAiB,yBAAuB,CAAC;AACzI,IAAM,cAAc,GAAW,gBAAgB,CAAC;AAEhD,IAAM,oBAAoB,GAAW,aAAa,CAAC;AACnD,IAAM,aAAa,GAAW,MAAM,CAAC;AAErC,IAAM,cAAc,GAAW,eAAe,CAAC;AAC/C,IAAM,WAAW,GAAW,YAAY,CAAC;AACzC,IAAM,OAAO,GAAW,cAAc,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX9C,UAAU;AACqE;AACrB;AACQ;AACV;AACf;AACc;AACvD,aAAa;AAC8C;AAC3D,gBAAgB;AAC+B;AAC/C,eAAe;AAC0C;AACzD,WAAW;AAC6B;AACxC,WAAW;AAC6E;AACzB;AACoB;AACT;AAC1E,gBAAgB;AACuD;AACA;AACwC;AACf;AACL;AACU;AACQ;AACZ;AAEjG,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,EAAE;IAC5D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yGAAoB,EAAE;IACzD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gGAAiB,EAAE;IACnD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,8GAAqB,EAAE;CACjD,CAAC;AAwCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtCrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,8GAAqB;gBACrB,qFAAc;gBACd,yGAAoB;gBACpB,gGAAiB;gBACjB,6FAAe;gBACf,6FAAe;gBACf,qIAA2B;gBAC3B,sHAAsB;gBACtB,iHAAqB;gBACrB,2HAAyB;gBACzB,mIAA2B;gBAC3B,uHAAuB;gBACvB,6DAAQ;aACT;YACD,OAAO,EAAE;gBACP,qGAAuB;gBACvB,gFAAa;gBACb,mEAAW;gBACX,2EAAmB;gBACnB,8EAAgB;gBAChB,gFAAc;gBACd,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,SAAS,EAAE;gBACT,8EAAY;aACb;YACD,SAAS,EAAE;gBACT,oEAAY;aACb;YACD,eAAe,EAAE;gBACf,2HAAyB;gBACzB,mIAA2B;aAC5B;SACF,CAAC;OAEW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;AC5EtB,ib;;;;;;;ACAA;AACA;;;AAGA;AACA,0IAA2I,mBAAmB,iBAAiB,kBAAkB,oBAAoB,sBAAsB,EAAE,gCAAgC,kBAAkB,EAAE,iEAAiE,qBAAqB,oBAAoB,EAAE;;AAE7Y;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;ACX0C;AACU;AACK;AAOzD;IAIE,yBACE,YAA6B,EAC7B,SAAuB;QAJzB,qBAAgB,GAAW,sDAAsD,CAAC;QAMhF,YAAY,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,CAAC,8BAA8B,CAAC,6CAA6C,CAAC,CAAC,CAAC;IAC9H,CAAC;IATU,eAAe;QAL3B,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAMgB,0EAAe;YAClB,+EAAY;OANd,eAAe,CAW3B;IAAD,sBAAC;CAAA;AAX2B;;;;;;;;ACT5B,yUAAyU,oBAAoB,IAAI,yBAAyB,yC;;;;;;;ACA1X;AACA;;;AAGA;AACA,wCAAyC,oBAAoB,EAAE;;AAE/D;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;ACXyD;AAQzD;IAME;QAHA,mBAAc,GAAW,CAAC,CAAC;QAC3B,mBAAc,GAAW,GAAG,CAAC;IAM7B,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,qDAAmB,GAA3B;QACE,IAAI,UAAU,GAAW,CAAC,CAAC;QAE3B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAC,UAAsB;YACjD,UAAU,IAAI,UAAU,CAAC,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAC,UAAsB;YACjD,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAc,GAAd;QACE,IAAM,WAAW,GAAW,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;QACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,GAAG,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3F,CAAC;IA9BQ;QAAR,oEAAK,EAAE;;mEAA8B;IAD3B,uBAAuB;QALnC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;;OACW,uBAAuB,CAiCnC;IAAD,8BAAC;CAAA;AAjCmC;;;;;;;;ACRpC,2wBAA2wB,aAAa,86B;;;;;;;ACAxxB;AACA;;;AAGA;AACA,0IAA2I,iBAAiB,EAAE,sCAAsC,iBAAiB,EAAE,4CAA4C,iBAAiB,EAAE,yBAAyB,yBAAyB,yBAAyB,EAAE,mCAAmC,cAAc,kBAAkB,yBAAyB,yBAAyB,EAAE,kCAAkC,6BAA6B,4BAA4B,kBAAkB,EAAE,2CAA2C,6BAA6B,oBAAoB,EAAE,0CAA0C,uBAAuB,wBAAwB,0BAA0B,EAAE,4BAA4B,sBAAsB,uBAAuB,kBAAkB,mBAAmB,EAAE;;AAE54B;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACXqD;AACI;AAEI;AAEG;AACwC;AAOxG;IAaE,yBACU,MAAc,EACd,cAA8B,EAC9B,YAA0B;QAHpC,iBAcC;QAbS,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAfpC,gBAAW,GAAW,mEAAW,CAAC;QAClC,mBAAc,GAAW,sEAAc,CAAC;QACxC,gBAAW,GAAW,mEAAW,CAAC;QAehC,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,cAAc,GAAG,8EAAW,CAAC,iBAAiB,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAExC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,IAAU;YAC9E,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;IAC5C,CAAC;IAED,kDAAwB,GAAxB;QACE,MAAM,CAAC,IAAI,CAAC,6BAA2B,IAAI,CAAC,IAAI,CAAC,IAAM,CAAC,CAAC;IAC3D,CAAC;IAED,4CAAkB,GAAlB,UAAmB,UAAoB;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mEAAW,CAAC,EAAE;YAClC,UAAU,EAAE,UAAU;SACvB,CAAC,CAAC;IACL,CAAC;IAEO,4CAAkB,GAA1B,UAA2B,UAAoB;QAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+DAAO,CAAC,EAAE;YAC9B,UAAU,EAAE,UAAU;SACvB,CAAC,CAAC;IACL,CAAC;IAEO,gCAAM,GAAd;QACE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,8EAAW,CAAC,iBAAiB,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEO,+CAAqB,GAA7B;QAAA,iBAMC;QALC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC;YAC3B,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,+DAAO,CAAC,IAAI,CAAC,CAAC;YAClD,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,sEAAc,CAAC,IAAI,CAAC,CAAC;YAChE,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,mEAAW,CAAC,IAAI,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,kDAAwB,GAAhC;QACE,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,sEAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/C,IAAM,aAAa,GAAa,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,sEAAc,CAAC,CAAC;YAClF,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;IAvEU,eAAe;QAL3B,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAekB,+DAAM;YACE,uEAAc;YAChB,8EAAY;OAhBzB,eAAe,CAyE3B;IAAD,sBAAC;CAAA;AAzE2B;;;;;;;;ACb5B,2VAA2V,wDAAwD,kqB;;;;;;;ACAnZ;AACA;;;AAGA;AACA,oIAAqI,yBAAyB,kBAAkB,2BAA2B,4BAA4B,sBAAsB,EAAE,kBAAkB,oBAAoB,EAAE;;AAEvS;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;;ACX0F;AACjD;AACgC;AAEZ;AACF;AACR;AAC8D;AAER;AAOzG;IAUE,+BACU,MAAiB,EACjB,MAAc,EACd,WAAwB,EACxB,YAA0B;QAJpC,iBAgBC;QAfS,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAX1B,aAAQ,GAA6B,IAAI,mEAAY,EAAa,CAAC;QAa3E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAExC,IAAI,CAAC,WAAW,GAAG;YACjB,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,OAAO;SAClB,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,IAAU;YAC9E,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;IAC5C,CAAC;IAED,0CAAU,GAAV;QAAA,iBAaC;QAZC,IAAI,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YAClD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;oBACtB,KAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC9C,CAAC;gBACD,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAClD,CAAC;gBAED,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAe,GAAf;QAAA,iBAUC;QATC,IAAM,WAAW,GAAc,IAAI,CAAC,YAAY,EAAE,CAAC;QAEnD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YACrE,IAAM,OAAO,GAAY,QAAQ,CAAC,IAAI,CAAC,eAAe,KAAK,SAAS,CAAC;YACrE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;gBAC5C,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX;QAAA,iBAUC;QATC,IAAM,WAAW,GAAc,IAAI,CAAC,YAAY,EAAE,CAAC;QAEnD,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YAChE,IAAM,OAAO,GAAY,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,KAAK,IAAI,CAAC;YAC7E,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;gBACxC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAU,GAAV;QACE,IAAI,MAAM,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACtD,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,MAAM,CAAC,IAAI,GAAG;YACZ,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0HAAyB,EAAE,MAAM,CAAC,CAAC;IACtD,CAAC;IAED,6CAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,8BAA4B,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,CAAC;IAC3D,CAAC;IAED,iDAAiB,GAAjB;QACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IACzC,CAAC;IAEO,4CAAY,GAApB;QACE,IAAM,SAAS,GAAU,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvD,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC;QAErC,IAAM,aAAa,GAAc,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACnE,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC;QAEhC,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IAEO,6CAAa,GAArB;QACE,IAAI,MAAM,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACtD,MAAM,CAAC,IAAI,GAAG;YACZ,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kIAA2B,EAAE,MAAM,CAAC,CAAC;IAC/D,CAAC;IAEO,mDAAmB,GAA3B,UAA4B,SAAoB;QAC9C,IAAI,CAAC,SAAS,CAAC,8BAA2B,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,OAAG,CAAC,CAAC;IAC7E,CAAC;IAEO,yDAAyB,GAAjC,UAAkC,SAAoB;QACpD,IAAI,CAAC,SAAS,CAAC,qBAAkB,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,oBAAgB,CAAC,CAAC;IACjF,CAAC;IAEO,qDAAqB,GAA7B,UAA8B,SAAoB;QAChD,IAAI,CAAC,SAAS,CAAC,8BAA2B,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,OAAG,CAAC,CAAC;IAC7E,CAAC;IAEO,yCAAS,GAAjB,UAAkB,OAAe;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE;YACxC,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;IACL,CAAC;IAlIQ;QAAR,oEAAK,EAAE;kCAAa,4EAAS;4DAAC;IACtB;QAAR,oEAAK,EAAE;kCAAQ,oEAAK;wDAAC;IACZ;QAAT,qEAAM,EAAE;kCAAY,mEAAY;2DAA4C;IAHlE,qBAAqB;QALjC,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAYkB,oEAAS;YACT,+DAAM;YACD,sEAAW;YACV,8EAAY;OAdzB,qBAAqB,CAqIjC;IAAD,4BAAC;CAAA;AArIiC;;;;;;;;AChBlC,s2BAAs2B,sBAAsB,kOAAkO,gBAAgB,qNAAqN,wBAAwB,iTAAiT,SAAS,8QAA8Q,wBAAwB,0NAA0N,kBAAkB,gJAAgJ,iD;;;;;;;ACAvzE;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;ACX8F;AAC9B;AAShE;IAOE;QAHA,cAAS,GAAa,CAAC,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;IAKtH,CAAC;IAED,8CAAQ,GAAR;IAEA,CAAC;IAED,iDAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,KAAK,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,qDAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAEO,0DAAoB,GAA5B;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAkB,CAAQ,IAAI,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;IA1BQ;QAAR,oEAAK,EAAE;;kEAAoB;IACR;QAAnB,0EAAS,CAAC,kEAAO,CAAC;kCAAO,kEAAO;6DAAC;IAFvB,2BAA2B;QALvC,wEAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;;SAGrC,CAAC;;OACW,2BAA2B,CA4BvC;IAAD,kCAAC;CAAA;AA5BuC;;;;;;;;ACVxC,m+BAAm+B,4BAA4B,6XAA6X,sBAAsB,oPAAoP,8BAA8B,uTAAuT,SAAS,wSAAwS,uBAAuB,yPAAyP,wBAAwB,gJAAgJ,mO;;;;;;;ACApsF;AACA;;;AAGA;AACA,wCAAyC,qBAAqB,mBAAmB,EAAE;;AAEnF;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;ACRuB;AACuD;AAU9E;IAYE;QAPU,kBAAa,GAA6B,IAAI,mEAAY,EAAa,CAAC;QAIlF,cAAS,GAAa,CAAC,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAKjH,CAAC;IAED,gDAAe,GAAf;QACE,wDAAwD;QACxD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,4CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;QACvD,CAAC;IACH,CAAC;IAED,yCAAQ,GAAR,UAAS,SAAqB;QAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAEO,qDAAoB,GAA5B;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAkB,CAAY,IAAI,CAAC,SAAS,CAAC,CAAC;IACtE,CAAC;IAEO,oDAAmB,GAA3B;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjC,IAAI,CAAC,UAAU,CAAC,mBAAmB,GAAG,UAAC,SAAoB,EAAE,QAAgB;YAC3E,IAAM,KAAK,GAAmB,SAAS,CAAC,KAAM,CAAC;YAE/C,MAAM,CAAC;gBACL,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE;gBACzC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE;gBACpC,YAAY,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI;gBACnC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE;gBACpD,OAAO,EAAE,CAAC,SAAS,CAAC,QAAQ;gBAC5B,UAAU,EAAE,CAAC,KAAK,CAAC,QAAQ;aAE5B,CAAC,QAAQ,CAAC,CAAC;QACd,CAAC,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,UAAC,SAAoB,EAAE,MAAc;YACrE,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC;QACrG,CAAC,CAAC;IACJ,CAAC;IAxDQ;QAAR,oEAAK,EAAE;;+DAAqB;IACpB;QAAR,oEAAK,EAAE;;6DAAwB;IACvB;QAAR,oEAAK,EAAE;;gEAAwB;IACvB;QAAR,oEAAK,EAAE;;0DAAiB;IACf;QAAT,qEAAM,EAAE;kCAAiB,mEAAY;iEAA4C;IAC9D;QAAnB,0EAAS,CAAC,kEAAO,CAAC;kCAAO,kEAAO;wDAAC;IACT;QAAxB,0EAAS,CAAC,uEAAY,CAAC;kCAAY,uEAAY;6DAAC;IAPtC,sBAAsB;QALlC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;;OACW,sBAAsB,CA0DlC;IAAD,6BAAC;CAAA;AA1DkC;;;;;;;;ACdnC,uJAAuJ,sBAAsB,oZAAoZ,gBAAgB,m6C;;;;;;;ACAjlB;AACA;;;AAGA;AACA,sIAAuI,qBAAqB,EAAE,oBAAoB,0BAA0B,EAAE,cAAc,qBAAqB,EAAE,0BAA0B,mBAAmB,EAAE,6BAA6B,kBAAkB,EAAE,2CAA2C,oBAAoB,EAAE;;AAEpZ;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACkB;AACF;AAEL;AAGU;AAOvE;IAOE,qCACU,YAA0B,EAC1B,WAAwB,EACxB,SAAoD,EAC3B,IAAS;QAHlC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI,CAAK;QAN5C,yBAAoB,GAAU,wFAAe,CAAC,IAAI,CAAC;QAQjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEO,+CAAS,GAAjB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,MAAM,EAAE;gBACN,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,wFAAe,CAAC,SAAS;gBACvG,CAAC,kEAAU,CAAC,QAAQ,CAAC;aACtB;YACD,KAAK,EAAE;gBACL,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,GAAG,SAAS;gBAChG,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,kEAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC7D;SACF,CAAC,CAAC;IACL,CAAC;IAED,+CAAS,GAAT;QAAA,iBAWC;QAVC,IAAM,WAAW,GAAc,IAAI,CAAC,YAAY,EAAE,CAAC;QAEnD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YAC9D,IAAM,OAAO,GAAY,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,KAAK,SAAS,CAAC;YAC3E,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;gBAC/C,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBAC3C,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAW,GAAX,UAAY,KAAa;QAAzB,iBAWC;QAVC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAE3B,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YACnE,IAAM,OAAO,GAAY,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,KAAK,IAAI,CAAC;YAC7E,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;oBACnB,YAAY,EAAE,KAAI,CAAC,SAAS;iBAC7B,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAO,GAAP,UAAQ,KAAa;QACnB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAE3B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,qDAAe,GAAf;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,EAAE,KAAK,IAAI,CAAC,aAAa,CAAC;IAC3E,CAAC;IAEO,kDAAY,GAApB;QACE,MAAM,CAAC;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE;YAC7C,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;SACxC,CAAC;IACJ,CAAC;IAEO,oDAAc,GAAtB,UAAuB,KAAY;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAnFU,2BAA2B;QALvC,wEAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;;;SAGtC,CAAC;QAYG,gFAAM,CAAC,0EAAe,CAAC;yCAHF,8EAAY;YACb,mEAAW;YACb,uEAAY;OAVtB,2BAA2B,CAqFvC;IAAD,kCAAC;CAAA;AArFuC;;;;;;;;ACdxC,uJAAuJ,sBAAsB,ogBAAogB,+BAA+B,wKAAwK,gBAAgB,uRAAuR,YAAY,4D;;;;;;;ACA3qC;AACA;;;AAGA;AACA,sIAAuI,qBAAqB,EAAE,oBAAoB,0BAA0B,EAAE,cAAc,qBAAqB,EAAE,wBAAwB,kBAAkB,sBAAsB,mBAAmB,yBAAyB,EAAE,uBAAuB,qBAAqB,yBAAyB,EAAE;;AAExa;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACgB;AAQlE;IAGE,mCACU,SAAkD,EACzB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAyC;QACzB,SAAI,GAAJ,IAAI,CAAK;QAE1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,2CAAO,GAAP,UAAQ,KAAa;QACnB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAZU,yBAAyB;QALrC,wEAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;QAMG,gFAAM,CAAC,0EAAe,CAAC;yCADL,uEAAY;OAJtB,yBAAyB,CAcrC;IAAD,gCAAC;CAAA;AAdqC;;;;;;;;;ACPtC;AAAA;IAAA;IAKA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACPoC;AAErC;IAAqC,mCAAO;IAmB1C,yBAAY,KAAa;QAAzB,YACE,kBAAM,KAAK,EAAE,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,SACzC;QAJD,WAAK,GAAY,IAAI,CAAC;;IAItB,CAAC;IApBM,yBAAS,GAAW,WAAW,CAAC;IAChC,uBAAO,GAAW,SAAS,CAAC;IAC5B,uBAAO,GAAW,SAAS,CAAC;IAC5B,sBAAM,GAAW,QAAQ,CAAC;IAC1B,wBAAQ,GAAW,UAAU,CAAC;IAC9B,yBAAS,GAAW,WAAW,CAAC;IAEhC,oBAAI,GAAU;QACnB,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;QAC1C,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;QACtC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;QACpC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE;QACvC,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;QAC1C,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE;KACxC,CAAC;IAOJ,sBAAC;CAAA,CAtBoC,yDAAO,GAsB3C;AAtB2B;;;;;;;;;ACC5B;AAAA;IAAA;IAUA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACboC;AAErC;IAAiC,+BAAO;IAmBtC,qBAAY,KAAa;eACvB,kBAAM,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC;IACtC,CAAC;IApBM,iBAAK,GAAW,OAAO,CAAC;IACxB,iBAAK,GAAW,OAAO,CAAC;IACxB,eAAG,GAAW,KAAK,CAAC;IACpB,eAAG,GAAW,KAAK,CAAC;IACpB,mBAAO,GAAW,SAAS,CAAC;IAC5B,cAAE,GAAW,IAAI,CAAC;IAClB,oBAAQ,GAAW,UAAU,CAAC;IAE9B,gBAAI,GAAU;QACnB,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;QAClC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;QAClC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;QAC9B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;QAC9B,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;QACtC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;QACxC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;KAC7B,CAAC;IAMJ,kBAAC;CAAA,CAvBgC,yDAAO,GAuBvC;AAvBuB;;;;;;;;;ACFxB;AAAA,IAAM,UAAU,GAAU;IACxB,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,cAAc,EAAE;IAC/C,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,mBAAmB,EAAE;IACrD,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE;IAC5C,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,iBAAiB,EAAE;CACnD,CAAC;AACoB;;;;;;;;;;;;;;;;;;;;;ACNe;AAErC;IAAiC,+BAAO;IAatC,qBAAY,KAAa;eACvB,kBAAM,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC;IACtC,CAAC;IAdM,oBAAQ,GAAW,UAAU,CAAC;IAC9B,qBAAS,GAAW,WAAW,CAAC;IAChC,4BAAgB,GAAW,kBAAkB,CAAC;IAC9C,qBAAS,GAAW,WAAW,CAAC;IAEhC,gBAAI,GAAU;QACnB,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;QACxC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE;QACvC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,kBAAkB,EAAE;QAC/C,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;KAC3C,CAAC;IAMJ,kBAAC;CAAA,CAjBgC,yDAAO,GAiBvC;AAjBuB;;;;;;;;;ACFxB;AAAA;IAAA;IAEA,CAAC;IADQ,gBAAK,GAAW,OAAO,CAAC;IACjC,iBAAC;CAAA;AAFsB;;;;;;;;;ACAvB;AAAA;IAIE,iBAAY,KAAa,EAAE,OAAc,EAAE,UAAoB;QAC7D,IAAM,OAAO,GAAU,OAAO,CAAC,MAAM,CAAC,UAAC,SAAc;YACnD,MAAM,CAAC,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,KAAK,KAAK,KAAK,CAAC;QACxG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;IACH,CAAC;IAEH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACdwC;AA2Bd;AAE3B,IAAM,OAAO,GAAU;IACrB,0EAAe;IACf,wEAAa;IACb,4EAAiB;IACjB,yEAAc;IACd,8EAAmB;IACnB,8EAAmB;IACnB,2EAAgB;IAChB,6EAAkB;IAClB,4EAAiB;IACjB,wEAAa;IACb,yEAAc;IACd,wEAAa;IACb,wEAAa;IACb,8EAAmB;IACnB,6EAAkB;IAClB,+EAAoB;IACpB,mFAAwB;IACxB,yEAAc;IACd,0EAAe;IACf,0EAAe;IACf,+EAAoB;IACpB,4EAAiB;IACjB,wEAAa;IACb,yEAAc;IACd,2EAAgB;IAChB,2EAAgB;CACjB,CAAC;AAMF;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAJ1B,uEAAQ,CAAC;YACR,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SACjB,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;AC9D3B,wgGAAwgG,qBAAqB,0YAA0Y,SAAS,w0C;;;;;;;ACAh7G;AACA;;;AAGA;AACA,6IAA8I,gBAAgB,EAAE,kBAAkB,oBAAoB,sBAAsB,EAAE,iBAAiB,qBAAqB,iBAAiB,EAAE,+BAA+B,gCAAgC,oCAAoC,EAAE,8CAA8C,sBAAsB,EAAE,6CAA6C,uBAAuB,EAAE,EAAE,2BAA2B,gBAAgB,EAAE,kCAAkC,qBAAqB,EAAE,gCAAgC,mBAAmB,EAAE,+BAA+B,YAAY,kBAAkB,EAAE,EAAE;;AAEtuB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;ACXqD;AACe;AAEX;AACI;AAKG;AACX;AAOrD;IAkBE,8BACU,MAAc,EACd,cAA8B,EAC9B,YAA0B,EAC1B,WAAwB;QAJlC,iBAoBC;QAnBS,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QAhBlC,iBAAY,GAAU,iFAAW,CAAC,IAAI,CAAC;QAOvC,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAU7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QACxC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YAC9C,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChD,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC9D,KAAI,CAAC,MAAM,EAAE,CAAC;YAChB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,IAAU;YAC9E,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;IAC5C,CAAC;IAEO,wCAAS,GAAjB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,iBAAiB,EAAE,CAAC,SAAS,EAAE,CAAC,kEAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,kEAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5F,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC,kEAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,kEAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3F,oBAAoB,EAAE,CAAC,SAAS,EAAE,CAAC,kEAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1E,mBAAmB,EAAE,CAAC,SAAS,EAAE,CAAC,kEAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACzE,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;SACX,CAAC,CAAC;IACL,CAAC;IAEO,qCAAM,GAAd,UAAe,IAAa,EAAE,OAAgB;QAA9C,iBA0CC;QAzCC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,KAAK,GAAe;YACtB,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;YACpC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO;YACtC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;SACrC,CAAC;QAEF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC3C,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC9F,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC5C,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAC3G,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC/C,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC7E,CAAC;QAED,IAAM,QAAQ,GAAc;YAC1B,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,OAAO;SACjB,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;YAChE,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YAC3C,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC;YAChC,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC;YACpC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEzB,CAAC,EAAE;YACD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,wCAAS,GAAjB;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,WAAW;YAClD,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,oDAAqB,GAA7B,UAA8B,IAAY;QACxC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;IACtB,CAAC;IAEO,gDAAiB,GAAzB;QACE,IAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACxE,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sEAAc,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;IACvE,CAAC;IAEO,yCAAU,GAAlB,UAAmB,SAAoB;QACrC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAxHU,oBAAoB;QALhC,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAoBkB,+DAAM;YACE,uEAAc;YAChB,8EAAY;YACb,mEAAW;OAtBvB,oBAAoB,CA0HhC;IAAD,2BAAC;CAAA;AA1HgC;;;;;;;;ACjBjC,gL;;;;;;;ACAA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;ACXkD;AACA;AAOlD;IAGE;QAFA,gBAAW,GAAW,mEAAW,CAAC;IAIlC,CAAC;IAED,iCAAQ,GAAR;IAEA,CAAC;IATU,cAAc;QAL1B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;ACR3B,sM;;;;;;;ACAA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;ACXkD;AAOlD;IAEE;IAEA,CAAC;IAED,wCAAQ,GAAR;IAEA,CAAC;IARU,qBAAqB;QALjC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,qBAAqB,CAUjC;IAAD,4BAAC;CAAA;AAViC;;;;;;;;ACPlC,67BAA67B,gCAAgC,wCAAwC,gBAAgB,4RAA4R,gBAAgB,8sC;;;;;;;ACAj0C;AACA;;;AAGA;AACA,4IAA6I,gCAAgC,iCAAiC,EAAE,oCAAoC,0BAA0B,gCAAgC,EAAE,uCAAuC,uBAAuB,0BAA0B,qBAAqB,EAAE,8CAA8C,wBAAwB,EAAE;;AAEve;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACX0C;AACD;AAEoB;AAGU;AACzB;AAO9C;IAaE,2BACU,MAAc,EACd,YAA0B;QAD1B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QALpC,mBAAc,GAAY,IAAI,CAAC;QAO7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC;QAExC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+DAAO,CAAC,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEO,uCAAW,GAAnB;QAAA,iBAiBC;QAhBC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;gBACtD,IAAM,QAAQ,GAAsB,EAAE,CAAC;gBACvC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAC,WAAW;oBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,wFAAe,CAAC,WAAW,CAAC,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;gBAC9B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAEpB,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,+CAAmB,GAA3B;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,YAAY;gBAC5D,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,2CAAe,GAAf,UAAgB,MAAc;QAC5B,MAAM,CAAC,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,uCAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACjD,CAAC;IAED,2CAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,yCAAa,GAAb,UAAc,SAAqB;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;IACH,CAAC;IAEO,0CAAc,GAAtB;QACE,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAlFU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAekB,+DAAM;YACA,8EAAY;OAfzB,iBAAiB,CAmF7B;IAAD,wBAAC;CAAA;AAnF6B;;;;;;;;;;;;;;;;;ACdsB;AAKpD;IAAA;IAiBA,CAAC;IAhBC,4BAAS,GAAT,UAAU,KAAY,EAAE,KAAa,EAAE,IAAc;QACnD,IAAM,SAAS,GAAW,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAExC,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,KAAK,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;gBACxB,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;gBACxB,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC/B,MAAM,CAAC,CAAC,GAAG,SAAS,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,CAAC,CAAC;gBACX,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAhBU,QAAQ;QAHpB,mEAAI,CAAC;YACJ,IAAI,EAAE,MAAM;SACb,CAAC;OACW,QAAQ,CAiBpB;IAAD,eAAC;CAAA;AAjBoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLoC;AACP;AAEnB;AAKqC;AAEP;AACD;AACH;AAGC;AACqB;AAG/E;IAmBE,sBACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAnBxB,WAAM,GAAW,8DAAM,CAAC;QACxB,kBAAa,GAAW,sDAAsD,CAAC;QAevF,eAAU,GAAsB,IAAI,mEAAY,EAAO,CAAC;QAKtD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEM,qCAAc,GAArB,UAAsB,WAAmB;QACvC,YAAY,CAAC,OAAO,CAAC,4EAAoB,EAAE,WAAW,CAAC,CAAC;IAC1D,CAAC;IACM,qCAAc,GAArB;QACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,4EAAoB,CAAC,CAAC;IACpD,CAAC;IACM,wCAAiB,GAAxB;QACE,YAAY,CAAC,UAAU,CAAC,4EAAoB,CAAC,CAAC;IAChD,CAAC;IAEM,8BAAO,GAAd,UAAe,IAAU;QACvB,YAAY,CAAC,OAAO,CAAC,qEAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5D,CAAC;IACM,8BAAO,GAAd;QACE,IAAM,UAAU,GAAW,YAAY,CAAC,OAAO,CAAC,qEAAa,CAAC,CAAC;QAC/D,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC;IACzD,CAAC;IACM,iCAAU,GAAjB;QACE,YAAY,CAAC,UAAU,CAAC,qEAAa,CAAC,CAAC;IACzC,CAAC;IAEM,4BAAK,GAAZ,UAAa,WAAmB;QAAhC,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAEjC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,QAAa;YACvC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC9B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,6BAAM,GAAb;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAEM,gCAAS,GAAhB;QAAA,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,WAAW;SAExB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,QAAQ;YACxC,IAAI,cAAmB,CAAC;YAExB,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,cAAc,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC;YAClE,CAAC;YAED,MAAM,CAAC,cAAc,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,6BAAM,GAAb,UAAc,KAAiB,EAAE,QAAmB;QAApD,iBAgDC;QA/CC,IAAI,OAAO,GAAQ;YACjB,IAAI,EAAE,6EAAU,CAAC,KAAK;YACtB,YAAY,EAAE,KAAK,CAAC,YAAY,IAAI,KAAK;YACzC,IAAI,EAAE,QAAQ,CAAC,SAAS,IAAI,CAAC,GAAG,QAAQ,CAAC,SAAS,GAAG,CAAC;YACtD,OAAO,EAAE,QAAQ,CAAC,OAAO,IAAI,EAAE;YAC/B,IAAI,EAAE,CAAC,8EAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SAC5B,CAAC;QAEF,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAChC,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC5B,OAAO,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;QACtD,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;QACpD,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC/B,OAAO,CAAC,oBAAoB,GAAG,KAAK,CAAC,oBAAoB,CAAC;QAC5D,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9B,OAAO,CAAC,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC;QAC1D,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1C,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAClC,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAChC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,SAAS,EAAE,OAAO;SAEnB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,QAAQ;YACxC,IAAI,cAAmB,CAAC;YAExB,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,cAAc,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;gBAErD,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,KAAY;oBACxC,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACL,CAAC;YAED,MAAM,CAAC,cAAc,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gCAAS,GAAhB;QAAA,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,SAAS;SAEtB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,QAAQ;YACxC,IAAI,cAAmB,CAAC;YAExB,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,cAAc,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAClD,CAAC;YAED,MAAM,CAAC,cAAc,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,8BAAO,GAAd,UAAe,IAAU;QAAzB,iBA2BC;QA1BC,IAAI,OAAO,GAAQ;YACjB,QAAQ,EAAE,6EAAU,CAAC,KAAK;YAC1B,MAAM,EAAE,IAAI,CAAC,EAAE;YACf,IAAI,EAAE,CAAC,YAAY,CAAC;SACrB,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,SAAS;YACrB,SAAS,EAAE,OAAO;SAEnB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,QAAQ;YACxC,IAAI,WAAW,GAAU,EAAE,CAAC;YAC5B,IAAI,aAAa,GAAU,EAAE,CAAC;YAE9B,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,aAAa,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,WAAW,CAAC;gBAE/E,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAC,MAAc;oBAChD,aAAa,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,KAAU;wBACvC,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;YAED,MAAM,CAAC,aAAa,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,wCAAiB,GAAxB,UAAyB,IAAU,EAAE,QAAkB;QACrD,IAAI,OAAO,GAAQ;YACjB,MAAM,EAAE,IAAI,CAAC,EAAE;YACf,IAAI,EAAE,CAAC;SACR,CAAC;QAEF,IAAI,UAAU,GAAU,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;IAEO,uCAAgB,GAAxB,UAAyB,OAAY,EAAE,UAAiB,EAAE,QAAkB;QAA5E,iBAyBC;QAxBC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChC,KAAK,EAAE,IAAI,CAAC,mBAAmB;YAC/B,SAAS,EAAE,OAAO;SAEnB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YAC9C,IAAI,OAAO,GAAU,EAAE,CAAC;YAExB,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAM,YAAY,GAAQ,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBACzD,EAAE,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC5G,IAAM,cAAc,GAAQ,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;oBAC/D,OAAO,GAAG,cAAc,CAAC,KAAK,CAAC;oBAC/B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAExC,EAAE,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;wBACxC,OAAO,CAAC,IAAI,EAAE,CAAC;wBACf,KAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAEvD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,QAAQ,CAAC,UAAU,CAAC,CAAC;oBACvB,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,0CAAmB,GAA1B,UAA2B,IAAU,EAAE,QAAkB;QACvD,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,UAAC,cAAc;YAC1C,IAAI,YAAY,GAAU,EAAE,CAAC;YAE7B,cAAc,CAAC,OAAO,CAAC,UAAC,KAAY;gBAClC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,YAAY,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,oCAAa,GAApB,UAAqB,gBAAqB;QACxC,IAAI,OAAO,GAAQ;YACjB,MAAM,EAAE,CAAC,gBAAgB,CAAC,MAAM,IAAI,wFAAe,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE;YAC5E,OAAO,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAClC,QAAQ,EAAE,gBAAgB,CAAC,QAAQ;SACpC,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,kBAAkB;YAC9B,SAAS,EAAE,OAAO;SAEnB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC/B,CAAC;IAEM,sCAAe,GAAtB,UAAuB,SAAoB;QACzC,IAAI,OAAO,GAAQ;YACjB,EAAE,EAAE,SAAS,CAAC,EAAE;SACjB,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,oBAAoB;YAChC,SAAS,EAAE,OAAO;SAEnB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC/B,CAAC;IAEM,2CAAoB,GAA3B,UAA4B,SAAoB;QAC9C,IAAI,OAAO,GAAQ;YACjB,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE;SAC5B,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,IAAI,CAAC,yBAAyB;YACrC,SAAS,EAAE,OAAO;SAEnB,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC/B,CAAC;IAEO,wCAAiB,GAAzB;QACE,IAAI,OAAO,GAAQ,EAAE,CAAC;QAEtB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,aAAa,GAAG,YAAU,IAAI,CAAC,cAAc,EAAI,CAAC;QAC5D,CAAC;QAED,MAAM,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;IAC9B,CAAC;IAEO,sCAAe,GAAvB,UAAwB,QAAa;QACnC,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC;IACnC,CAAC;IAEO,sCAAe,GAAvB,UAAwB,QAAa;QACnC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC;IAEO,qCAAc,GAAtB,UAAuB,KAAY;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjB,KAAK,CAAC,MAAM,GAAG,IAAI,iFAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YACrD,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjB,KAAK,CAAC,MAAM,GAAG,IAAI,gFAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YACrD,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,KAAK,oDAAoD,CAAC,CAAC,CAAC;gBACzG,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;YAC/C,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAChD,CAAC;QACH,CAAC;IACH,CAAC;IAEO,yCAAkB,GAA1B,UAA2B,SAAoB;QAC7C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrB,SAAS,CAAC,MAAM,GAAG,IAAI,wFAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YACjE,CAAC;YAED,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,cAAc,CAAS,SAAS,CAAC,KAAK,CAAC,CAAC;YAC/C,CAAC;QACH,CAAC;IACH,CAAC;IAEO,wCAAiB,GAAzB;QAEE,IAAI,CAAC,cAAc,GAAG,oFAKd,CAAC;QAET,IAAI,CAAC,eAAe,GAAG,8ZA2BnB,CAAC;QAEL,IAAI,CAAC,iBAAiB,GAAM,IAAI,CAAC,eAAe,qIAO5C,CAAC;QAEL,IAAI,CAAC,WAAW,GAAG,6CAGf,CAAC;QAEL,IAAI,CAAC,SAAS,GAAG,mZAqBb,CAAC;QAEL,IAAI,CAAC,WAAW,GAAG,miBAqBT,IAAI,CAAC,cAAc,2eAenB,IAAI,CAAC,iBAAiB,sCAG5B,CAAC;QAEL,IAAI,CAAC,SAAS,GAAG,saAoBT,IAAI,CAAC,eAAe,4GAMxB,CAAC;QAEL,IAAI,CAAC,mBAAmB,GAAG,gUAgBb,IAAI,CAAC,cAAc,sEAK7B,CAAC;QAEL,IAAI,CAAC,kBAAkB,GAAG,0SActB,CAAC;QAEL,IAAI,CAAC,oBAAoB,GAAG,kIAOxB,CAAC;QAEL,IAAI,CAAC,yBAAyB,GAAG,4SAgB7B,CAAC;IACP,CAAC;IApgBU,YAAY;QADxB,yEAAU,EAAE;yCAqBW,wEAAU;OApBrB,YAAY,CAsgBxB;IAAD,mBAAC;CAAA;AAtgBwB;;;;;;;;;ACnBzB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,0EAA0E;AAC1E,gFAAgF;AAEzE,IAAM,WAAW,GAAQ;IAC9B,mCAAmC;IACnC,iBAAiB,EAAE,GAAG;IACtB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACT6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<app-header></app-header>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"page-wrapper\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  constructor() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/app.component.ts","import { environment } from '../environments/environment';\n\nexport const apiUrl: string = 'https://graphql.anilist.co';\nexport const apiLoginUrl: string = `https://anilist.co/api/v2/oauth/authorize?client_id=${ environment.anilist_client_id }&response_type=token`;\nexport const apiTokenPrefix: string = '#access_token=';\n\nexport const accessTokenCookieKey: string = 'accessToken';\nexport const userCookieKey: string = 'user';\n\nexport const animeSearchUrl: string = '/anime-search';\nexport const userListUrl: string = '/user-list';\nexport const rootUrl: string = animeSearchUrl;\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/app.constants.ts","/* core */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n/* modules */\nimport { MaterialModule } from './modules/material.module';\n/* components */\nimport { AppComponent } from './app.component';\n/* providers */\nimport { AnimeService } from './providers/anime.service';\n/* pipes */\nimport { SortPipe } from './pipes/sort';\n/* pages */\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { AnimeSearchComponent } from './pages/anime-search/anime-search.component';\nimport { UserListComponent } from './pages/user-list/user-list.component';\n/* components */\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SearchResultsTableComponent } from './components/search-results-table/search-results-table.component';\nimport { UserListTableComponent } from './components/user-list-table/user-list-table.component';\nimport { MediaActionsComponent } from './components/media-actions/media-actions.component';\nimport { MediaDetailModalComponent } from './modals/media-detail-modal/media-detail-modal.component';\nimport { ListEntryFormModalComponent } from './modals/list-entry-form-modal/list-entry-form-modal.component';\nimport { GenresOverviewComponent } from './components/genres-overview/genres-overview.component';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/anime-search', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'anime-search', component: AnimeSearchComponent },\n  { path: 'user-list', component: UserListComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    LoginComponent,\n    AnimeSearchComponent,\n    UserListComponent,\n    HeaderComponent,\n    FooterComponent,\n    SearchResultsTableComponent,\n    UserListTableComponent,\n    MediaActionsComponent,\n    MediaDetailModalComponent,\n    ListEntryFormModalComponent,\n    GenresOverviewComponent,\n    SortPipe\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MaterialModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [\n    AnimeService\n  ],\n  bootstrap: [\n    AppComponent\n  ],\n  entryComponents: [\n    MediaDetailModalComponent,\n    ListEntryFormModalComponent\n  ]\n})\n\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/app.module.ts","module.exports = \"<mat-toolbar>\\n\\n  <div class=\\\"text-center\\\">\\n    <div>\\n      About\\n    </div>\\n\\n    <div class=\\\"links-wrapper\\\">\\n      <a [href]=\\\"gitHubProjectUrl\\\">\\n        <i class=\\\"fa fa-github fa-1x\\\"></i> GitHub repository\\n      </a>\\n    </div>\\n\\n    <div class=\\\"about-anilist margin-top-xxs\\\">\\n      Powered by the <mat-icon svgIcon=\\\"anilist\\\"></mat-icon> AniList API\\n    </div>\\n  </div>\\n\\n</mat-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/footer/footer.component.html\n// module id = ../../../../../src/app/components/footer/footer.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* generic */\\n/* specific */\\nmat-toolbar {\\n  display: block;\\n  height: auto;\\n  padding: 16px;\\n  font-size: 14px;\\n  line-height: 21px; }\\n  mat-toolbar .about-anilist {\\n    color: #444; }\\n    mat-toolbar .about-anilist .mat-icon[svgIcon=\\\"anilist\\\"] {\\n      height: 12px;\\n      width: 16px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/footer/footer.component.scss\n// module id = ../../../../../src/app/components/footer/footer.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n  gitHubProjectUrl: string = 'https://github.com/jesuscc1993/angular-material-demo';\n\n  constructor(\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer\n  ) {\n    iconRegistry.addSvgIcon('anilist', sanitizer.bypassSecurityTrustResourceUrl('assets/pictures/vectorial/icons/anilist.svg'));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/components/footer/footer.component.ts","module.exports = \"<h3>\\n  Genres Overview\\n</h3>\\n\\n<mat-grid-list *ngIf=\\\"genreStatsList && genreStatsList.length | sort: 'amount'\\\" [cols]=\\\"getColumnCount()\\\" rowHeight=\\\"32px\\\">\\n  <mat-grid-tile *ngFor=\\\"let genreStats of genreStatsList\\\" [matTooltip]=\\\"genreStats.amount + ' entries'\\\" matTooltipPosition=\\\"above\\\">\\n    {{ genreStats.genre }} ({{ genreStats.percentage }}%)\\n  </mat-grid-tile>\\n</mat-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/genres-overview/genres-overview.component.html\n// module id = ../../../../../src/app/components/genres-overview/genres-overview.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-grid-tile {\\n  cursor: default; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/genres-overview/genres-overview.component.scss\n// module id = ../../../../../src/app/components/genres-overview/genres-overview.component.scss\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { GenreStats } from '../../models/anilist/genreStats';\n\n@Component({\n  selector: 'app-genres-overview',\n  templateUrl: './genres-overview.component.html',\n  styleUrls: ['./genres-overview.component.scss']\n})\nexport class GenresOverviewComponent implements OnInit {\n  @Input() genreStatsList: GenreStats[];\n\n  maxColumnCount: number = 5;\n  minColumnWidth: number = 160;\n\n  constructor(\n\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.calculateStatistics();\n  }\n\n  private calculateStatistics(): void {\n    let totalCount: number = 0;\n\n    this.genreStatsList.forEach((genreStats: GenreStats) => {\n      totalCount += genreStats.amount;\n    });\n\n    this.genreStatsList.forEach((genreStats: GenreStats) => {\n      genreStats.percentage = Math.round(genreStats.amount * 100 / totalCount);\n    });\n  }\n\n  getColumnCount(): number {\n    const columnCount: number = window.screen.width / this.minColumnWidth;\n    return Math.floor(columnCount < this.maxColumnCount ? columnCount : this.maxColumnCount);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/components/genres-overview/genres-overview.component.ts","module.exports = \"<mat-toolbar>\\n\\n  <div>\\n    <span class=\\\"hide-below-s\\\">\\n      Anime management client\\n    </span>\\n  </div>\\n\\n  <div class=\\\"centered-content section-links\\\" *ngIf=\\\"user\\\">\\n    <a [routerLink]=\\\"animeSearchUrl\\\" [class.active]=\\\"onAnimeSearch\\\">\\n      <i class=\\\"fa fa-search fa-2x\\\"></i>\\n      <small>\\n        Anime search\\n      </small>\\n    </a>\\n    <a [routerLink]=\\\"userListUrl\\\" [class.active]=\\\"onUserList\\\">\\n      <i class=\\\"fa fa-list-ul fa-2x\\\"></i>\\n      <small>\\n        User's list\\n      </small>\\n    </a>\\n  </div>\\n\\n  <span class=\\\"filler\\\"></span>\\n\\n  <!-- logged in -->\\n  <div *ngIf=\\\"user\\\" class=\\\"flex-box center\\\">\\n    <span class=\\\"padding-right-xs clickable hide-below-s\\\" [matMenuTriggerFor]=\\\"userMenu\\\">\\n      {{ user.name }}\\n    </span>\\n    <img class=\\\"avatar clickable hide-below-s\\\" [src]=\\\"user.avatar.large\\\" [matMenuTriggerFor]=\\\"userMenu\\\">\\n\\n    <a class=\\\"clickable show-below-s\\\" [matMenuTriggerFor]=\\\"userMenu\\\">\\n      <i class=\\\"fa fa-bars fa-1x\\\"></i>\\n    </a>\\n\\n    <mat-menu #userMenu=\\\"matMenu\\\">\\n      <button mat-menu-item (click)=\\\"navigateToAnilistProfile()\\\">\\n        <i class=\\\"fa fa-external-link fa-1x margin-right-xxxs\\\"></i>\\n        View profile\\n      </button>\\n      <button mat-menu-item (click)=\\\"logOut()\\\">\\n        <i class=\\\"fa fa-sign-out fa-1x margin-right-xxxs\\\"></i>\\n        Log out\\n      </button>\\n    </mat-menu>\\n  </div>\\n\\n  <!-- not logged in -->\\n  <div *ngIf=\\\"!user\\\" class=\\\"flex-box center\\\">\\n    <a *ngIf=\\\"loginAvailable\\\" [href]=apiLoginUrl>\\n    <span class=\\\"hide-below-s\\\">\\n      Log in with AniList\\n    </span>\\n      <i class=\\\"fa fa-sign-in fa-1x\\\"></i>\\n    </a>\\n  </div>\\n\\n</mat-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/header/header.component.html\n// module id = ../../../../../src/app/components/header/header.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* generic */\\n/* specific */\\nmat-toolbar {\\n  height: 64px; }\\n  mat-toolbar > *.centered-content {\\n    z-index: 0; }\\n  mat-toolbar > *:not(.centered-content) {\\n    z-index: 1; }\\n  mat-toolbar .filler {\\n    -ms-flex: 1 1 auto;\\n        flex: 1 1 auto; }\\n  mat-toolbar .centered-content {\\n    left: 0;\\n    width: 100%;\\n    position: absolute;\\n    text-align: center; }\\n  mat-toolbar .section-links a {\\n    vertical-align: middle;\\n    display: inline-block;\\n    width: 96px; }\\n    mat-toolbar .section-links a.active {\\n      pointer-events: none;\\n      color: #999; }\\n    mat-toolbar .section-links a small {\\n      display: block;\\n      font-size: 12px;\\n      line-height: 12px; }\\n  mat-toolbar img.avatar {\\n    max-width: 64px;\\n    max-height: 100%;\\n    width: auto;\\n    height: auto; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/header/header.component.scss\n// module id = ../../../../../src/app/components/header/header.component.scss\n// module chunks = main","import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AnimeService } from '../../providers/anime.service';\nimport { User } from '../../models/anilist/user';\nimport { environment } from '../../../environments/environment';\nimport { apiLoginUrl, rootUrl, apiTokenPrefix, userListUrl, animeSearchUrl } from '../../app.constants';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnDestroy {\n  apiLoginUrl: string = apiLoginUrl;\n  animeSearchUrl: string = animeSearchUrl;\n  userListUrl: string = userListUrl;\n\n  user: User;\n  onRoot: boolean;\n  onAnimeSearch: boolean;\n  onUserList: boolean;\n  loginAvailable: boolean;\n\n  private userChangeSubscription: any;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private animeService: AnimeService\n  ) {\n    this.checkAndStoreAccessToken();\n    this.subscribeToNavigation();\n\n    this.loginAvailable = environment.anilist_client_id >= 0;\n    this.user = this.animeService.getUser();\n\n    this.userChangeSubscription = this.animeService.userChange.subscribe((user: User) => {\n      this.user = user;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.userChangeSubscription.unsubscribe();\n  }\n\n  navigateToAnilistProfile(): void {\n    window.open(`https://anilist.co/user/${this.user.name}`);\n  }\n\n  navigateToUserList(replaceUrl?: boolean): void {\n    this.router.navigate([userListUrl], {\n      replaceUrl: replaceUrl\n    });\n  }\n\n  private navigateToHomePage(replaceUrl?: boolean): void {\n    this.router.navigate([rootUrl], {\n      replaceUrl: replaceUrl\n    });\n  }\n\n  private logOut(): void {\n    this.animeService.logOut();\n    this.user = undefined;\n    this.loginAvailable = environment.anilist_client_id >= 0;\n    this.navigateToHomePage();\n  }\n\n  private subscribeToNavigation(): void {\n    this.router.events.subscribe(() => {\n      this.onRoot = location.href.indexOf(rootUrl) >= 0;\n      this.onAnimeSearch = location.href.indexOf(animeSearchUrl) >= 0;\n      this.onUserList = location.href.indexOf(userListUrl) >= 0;\n    });\n  }\n\n  private checkAndStoreAccessToken(): void {\n    if (location.href.indexOf(apiTokenPrefix) >= 0) {\n      const locationParts: string[] = location.href.split('&')[0].split(apiTokenPrefix);\n      history.replaceState({}, 'Login success', locationParts[0]);\n      this.animeService.logIn(locationParts[1]);\n      this.navigateToHomePage(true);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/components/header/header.component.ts","module.exports = \"<i class=\\\"fa fa-bars menu-toggle clickable\\\" [matMenuTriggerFor]=\\\"entryMenu\\\"></i>\\n\\n<mat-menu #entryMenu=\\\"matMenu\\\">\\n  <button mat-menu-item (click)=\\\"saveToList()\\\" [disabled]=\\\"!user\\\">\\n    <i class=\\\"fa fa-1x action-icon\\\" [class.fa-plus]=\\\"!isUpdateAvailable()\\\" [class.fa-refresh]=\\\"isUpdateAvailable()\\\"></i>\\n    {{ isUpdateAvailable() ? 'Update entry' : 'Add to list' }}\\n  </button>\\n  <button *ngIf=\\\"isUpdateAvailable()\\\" mat-menu-item (click)=\\\"toggleFavourite()\\\">\\n    <i class=\\\"fa fa-star fa-1x action-icon\\\"></i>\\n    Toggle favourite\\n  </button>\\n  <button *ngIf=\\\"isUpdateAvailable()\\\" mat-menu-item (click)=\\\"deleteEntry()\\\">\\n    <i class=\\\"fa fa-trash fa-1x action-icon\\\"></i>\\n    Delete from list\\n  </button>\\n  <button *ngIf=\\\"media\\\" mat-menu-item (click)=\\\"showDetail()\\\">\\n    <i class=\\\"fa fa-id-card-o fa-1x action-icon\\\"></i>\\n    Show details\\n  </button>\\n  <button mat-menu-item (click)=\\\"viewOnAniList()\\\">\\n    <i class=\\\"fa fa-external-link fa-1x action-icon\\\"></i>\\n    View on AniList\\n  </button>\\n</mat-menu>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/media-actions/media-actions.component.html\n// module id = ../../../../../src/app/components/media-actions/media-actions.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* generic */\\n/* specific */\\n:host {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-align: center;\\n      align-items: center;\\n  overflow: visible; }\\n\\n.action-icon {\\n  min-width: 24px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/media-actions/media-actions.component.scss\n// module id = ../../../../../src/app/components/media-actions/media-actions.component.scss\n// module chunks = main","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\n\nimport { AnimeService } from '../../providers/anime.service';\nimport { ListEntry } from '../../models/anilist/listEntry';\nimport { Media } from '../../models/anilist/media';\nimport { ListEntryFormModalComponent } from '../../modals/list-entry-form-modal/list-entry-form-modal.component';\nimport { User } from '../../models/anilist/user';\nimport { MediaDetailModalComponent } from '../../modals/media-detail-modal/media-detail-modal.component';\n\n@Component({\n  selector: 'app-media-actions',\n  templateUrl: './media-actions.component.html',\n  styleUrls: ['./media-actions.component.scss']\n})\nexport class MediaActionsComponent implements OnInit, OnDestroy {\n  @Input() listEntry?: ListEntry;\n  @Input() media: Media;\n  @Output() onUpdate?: EventEmitter<ListEntry> = new EventEmitter<ListEntry>();\n\n  user: User;\n\n  private modalConfig: any;\n  private userChangeSubscription: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private router: Router,\n    private matSnackBar: MatSnackBar,\n    private animeService: AnimeService\n  ) {\n    this.user = this.animeService.getUser();\n\n    this.modalConfig = {\n      width: 'auto',\n      maxWidth: '672px'\n    };\n\n    this.userChangeSubscription = this.animeService.userChange.subscribe((user: User) => {\n      this.user = user;\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.media.mediaListEntry && !this.listEntry) {\n      this.listEntry = this.media.mediaListEntry;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.userChangeSubscription.unsubscribe();\n  }\n\n  saveToList(): void {\n    this.showFormModal().afterClosed().subscribe((result) => {\n      if (result) {\n        if (result.savedEntry) {\n          this.showSavedEntryToast(result.savedEntry);\n        }\n        if (result.deletedEntry) {\n          this.showDeletedEntryToast(result.deletedEntry);\n        }\n\n        this.onUpdate.emit(result.savedEntry || result.deletedEntry);\n      }\n    });\n  }\n\n  toggleFavourite(): void {\n    const targetEntry: ListEntry = this.getListEntry();\n\n    this.animeService.toggleFavouriteEntry(targetEntry).subscribe((response) => {\n      const success: boolean = response.data.ToggleFavourite !== undefined;\n      if (success) {\n        this.showToggledFavouriteToast(targetEntry);\n        this.onUpdate.emit(targetEntry);\n      }\n    });\n  }\n\n  deleteEntry(): void {\n    const targetEntry: ListEntry = this.getListEntry();\n\n    this.animeService.deleteListEntry(targetEntry).subscribe((response) => {\n      const success: boolean = response.data.DeleteMediaListEntry.deleted === true;\n      if (success) {\n        this.showDeletedEntryToast(targetEntry);\n        this.onUpdate.emit(targetEntry);\n      }\n    });\n  }\n\n  showDetail(): void {\n    let config: any = Object.assign({}, this.modalConfig);\n    config.maxWidth = '800px';\n    config.data = {\n      media: this.media\n    };\n\n    this.dialog.open(MediaDetailModalComponent, config);\n  }\n\n  viewOnAniList(): void {\n    window.open(`https://anilist.co/anime/${this.media.id}`);\n  }\n\n  isUpdateAvailable(): boolean {\n    return !!this.listEntry && !!this.user;\n  }\n\n  private getListEntry(): ListEntry {\n    const mediaCopy: Media = Object.assign({}, this.media);\n    mediaCopy.mediaListEntry = undefined;\n\n    const listEntryCopy: ListEntry = Object.assign({}, this.listEntry);\n    listEntryCopy.media = mediaCopy;\n\n    return listEntryCopy;\n  }\n\n  private showFormModal(): MatDialogRef<ListEntryFormModalComponent> {\n    let config: any = Object.assign({}, this.modalConfig);\n    config.data = {\n      listEntry: this.listEntry,\n      media: this.media\n    };\n\n    return this.dialog.open(ListEntryFormModalComponent, config);\n  }\n\n  private showSavedEntryToast(listEntry: ListEntry): void {\n    this.showToast(`Updated list entry for \"${listEntry.media.title.romaji}\"`);\n  }\n\n  private showToggledFavouriteToast(listEntry: ListEntry): void {\n    this.showToast(`Toggled entry \"${listEntry.media.title.romaji}\" as favourite`);\n  }\n\n  private showDeletedEntryToast(listEntry: ListEntry): void {\n    this.showToast(`Deleted list entry for \"${listEntry.media.title.romaji}\"`);\n  }\n\n  private showToast(message: string): void {\n    this.matSnackBar.open(message, undefined, {\n      duration: 10000,\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/components/media-actions/media-actions.component.ts","module.exports = \"<mat-table #table [dataSource]=\\\"dataSource\\\" [hidden]=\\\"!dataSource || dataSource.data.length < 1\\\" class=\\\"series-table\\\">\\n\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      <app-media-actions [media]=\\\"anime\\\"></app-media-actions>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"cover-image\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Cover\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      <img [src]=\\\"anime.coverImage.medium\\\" class=\\\"cover\\\">\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"title\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Title\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      <span class=\\\"title\\\">\\n        {{ anime.title.romaji }}\\n      </span>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"format\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Format\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      {{ anime.format }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"start-date\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Year\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      {{ anime.startDate.year }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"genres\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Genres\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      <mat-list>\\n        <mat-list-item *ngFor=\\\"let genre of anime.genres\\\">\\n          <mat-chip>{{ genre }}</mat-chip>\\n        </mat-list-item>\\n      </mat-list>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"mean-score\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Score\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      {{ anime.meanScore / 10 }}/10\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"episodes\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Episodes\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let anime\\\">\\n      {{ anime.episodes }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"tableRows\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let rowData; columns: tableRows\\\"></mat-row>\\n\\n</mat-table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/search-results-table/search-results-table.component.html\n// module id = ../../../../../src/app/components/search-results-table/search-results-table.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/search-results-table/search-results-table.component.scss\n// module id = ../../../../../src/app/components/search-results-table/search-results-table.component.scss\n// module chunks = main","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatSort, MatTableDataSource } from '@angular/material';\n\nimport { Anime } from '../../models/anilist/anime';\n\n@Component({\n  selector: 'app-search-results-table',\n  templateUrl: './search-results-table.component.html',\n  styleUrls: ['./search-results-table.component.scss']\n})\nexport class SearchResultsTableComponent implements OnInit, OnChanges {\n  @Input() tableData: Anime[];\n  @ViewChild(MatSort) sort: MatSort;\n\n  tableRows: string[] = ['actions', 'cover-image', 'title', 'format', 'start-date', 'genres', 'mean-score', 'episodes'];\n  dataSource: MatTableDataSource<Anime>;\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.tableData.currentValue !== changes.tableData.previousValue) {\n      this.initializeDataSource();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n  }\n\n  private initializeDataSource(): void {\n    this.dataSource = new MatTableDataSource<Anime>(this.tableData);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/components/search-results-table/search-results-table.component.ts","module.exports = \"<mat-table #table [dataSource]=\\\"dataSource\\\" [hidden]=\\\"!dataSource || dataSource.data.length < 1\\\" matSort class=\\\"series-table\\\">\\n\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let entry\\\">\\n      <app-media-actions\\n        [listEntry]=\\\"entry\\\"\\n        [media]=\\\"entry.media\\\"\\n        (onUpdate)=\\\"onUpdate($event)\\\">\\n      </app-media-actions>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"cover-image\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Cover\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let entry\\\">\\n      <img [src]=\\\"entry.media.coverImage.medium\\\" class=\\\"cover\\\">\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"title\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\\n      Title\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let entry\\\">\\n      <span class=\\\"title\\\">\\n        {{ entry.media.title.romaji }}\\n      </span>\\n      <i *ngIf=\\\"favouriteIDs && favouriteIDs.indexOf(entry.media.id) >= 0\\\"\\n         class=\\\"fa fa-heart fa-1x favourite\\\">\\n      </i>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"format\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>\\n      Format\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let entry\\\">\\n      {{ entry.media.format }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"start-date\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n      Year\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let entry\\\">\\n      {{ entry.media.startDate.year }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"genres\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      Genres\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let entry\\\">\\n      <mat-list>\\n        <mat-list-item *ngFor=\\\"let genre of entry.media.genres\\\">\\n          <mat-chip>{{ genre }}</mat-chip>\\n        </mat-list-item>\\n      </mat-list>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"score\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n      Score\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let entry\\\">\\n      {{ entry.scoreRaw / 10 }}/10\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"episodes\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header start=\\\"desc\\\">\\n      Episodes\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let entry\\\">\\n      {{ entry.media.episodes }}\\n    </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"tableRows\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let rowData; columns: tableRows\\\"></mat-row>\\n\\n</mat-table>\\n\\n<mat-paginator\\n  #paginator\\n  [pageSize]=\\\"10\\\"\\n  [pageSizeOptions]=\\\"[5, 10, 25, 50, 75, 100, 250, 500, 750, 1000]\\\"\\n  [showFirstLastButtons]=\\\"true\\\">\\n</mat-paginator>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/user-list-table/user-list-table.component.html\n// module id = ../../../../../src/app/components/user-list-table/user-list-table.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fa.favourite {\\n  padding: 3px 0 0;\\n  color: #F50057; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/components/user-list-table/user-list-table.component.scss\n// module id = ../../../../../src/app/components/user-list-table/user-list-table.component.scss\n// module chunks = main","import {\n  AfterViewInit, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\nimport { ListEntry } from '../../models/anilist/listEntry';\nimport { Anime } from '../../models/anilist/anime';\n\n@Component({\n  selector: 'app-user-list-table',\n  templateUrl: './user-list-table.component.html',\n  styleUrls: ['./user-list-table.component.scss']\n})\nexport class UserListTableComponent implements AfterViewInit, OnChanges {\n  @Input() tableStatus: string;\n  @Input() tableData: ListEntry[];\n  @Input() favouriteIDs: number[];\n  @Input() filter?: string;\n  @Output() onEntryUpdate?: EventEmitter<ListEntry> = new EventEmitter<ListEntry>();\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  tableRows: string[] = ['actions', 'cover-image', 'title', 'format', 'start-date', 'genres', 'score', 'episodes'];\n  dataSource: MatTableDataSource<ListEntry>;\n\n  constructor() {\n\n  }\n\n  ngAfterViewInit(): void {\n    // TODO: Fix ExpressionChangedAfterItHasBeenCheckedError\n    this.initializeDataSource();\n    this.bindChildComponents();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.dataSource && changes.filter) {\n      this.dataSource.filter = changes.filter.currentValue;\n    }\n  }\n\n  onUpdate(listEntry?: ListEntry): void {\n    this.onEntryUpdate.emit(listEntry);\n  }\n\n  private initializeDataSource(): void {\n    this.dataSource = new MatTableDataSource<ListEntry>(this.tableData);\n  }\n\n  private bindChildComponents(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.dataSource.sortingDataAccessor = (listEntry: ListEntry, property: string) => {\n      const anime: Anime = (<Anime> listEntry.media);\n\n      return {\n        'title': anime.title.romaji.toLowerCase(),\n        'format': anime.format.toLowerCase(),\n        'start-date': +anime.startDate.year,\n        'genres': anime.genres.length ? anime.genres[0] : '',\n        'score': +listEntry.scoreRaw,\n        'episodes': +anime.episodes\n\n      }[property];\n    };\n\n    this.dataSource.filterPredicate = (listEntry: ListEntry, filter: string) => {\n      return listEntry.media.title.romaji.trim().toLowerCase().indexOf(filter.trim().toLowerCase()) >= 0;\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/components/user-list-table/user-list-table.component.ts","module.exports = \"<h3 class=\\\"header\\\">\\n  <i class=\\\"fa fa-times float-right clickable\\\" (click)=\\\"dismiss()\\\"></i>\\n\\n  <div class=\\\"title\\\">\\n    {{ media.title.romaji }}\\n  </div>\\n</h3>\\n\\n<mat-divider></mat-divider>\\n\\n<div class=\\\"content\\\">\\n  <form [formGroup]=\\\"listEntryForm\\\" (ngSubmit)=\\\"saveEntry()\\\">\\n\\n    <!-- status -->\\n    <div class=\\\"form-group\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Status\\\" formControlName=\\\"status\\\">\\n          <mat-option *ngFor=\\\"let status of liestEntryStatusList\\\" [value]=\\\"status.value\\\">\\n            {{ status.label }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <!-- score -->\\n    <div class=\\\"form-group\\\">\\n      <mat-form-field class=\\\"score-input\\\">\\n        <mat-label>Score</mat-label>\\n        <input\\n          matInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"10\\\" step=\\\".1\\\"\\n          [placeholder]=\\\"listEntry ? listEntry.scoreRaw / 10 : 5\\\" formControlName=\\\"score\\\" required>\\n      </mat-form-field> / 10\\n    </div>\\n\\n    <!--<mat-slider min=\\\"0\\\" max=\\\"10\\\" value=\\\"5\\\" step=\\\"0.5\\\" tickInterval=\\\"2\\\" class=\\\"full-width no-padding\\\"></mat-slider>-->\\n\\n    <mat-divider class=\\\"padding-bottom-xs\\\"></mat-divider>\\n\\n    <!--<span *ngIf=\\\"listEntry !== undefined\\\">-->\\n      <!--<button mat-raised-button color=\\\"warn\\\" class=\\\"margin-right-s square-button\\\" (click)=\\\"deleteEntry($event)\\\">-->\\n        <!--<i class=\\\"fa fa-trash fa-1x baseline\\\"></i>-->\\n      <!--</button>-->\\n    <!--</span>-->\\n\\n    <span class=\\\"float-right\\\">\\n      <button mat-raised-button color=\\\"accent\\\" class=\\\"margin-right-xs\\\" [disabled]=\\\"!listEntryForm.valid || !isSubmitEnabled()\\\">\\n        <i class=\\\"fa fa-send fa-1x baseline margin-right-xxxs\\\"></i>\\n        Submit\\n      </button>\\n\\n      <button mat-raised-button class=\\\"float-right\\\" (click)=\\\"dismiss($event)\\\">\\n        <i class=\\\"fa fa-times fa-1x baseline margin-right-xxxs\\\"></i>\\n        Cancel\\n      </button>\\n    </span>\\n\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/modals/list-entry-form-modal/list-entry-form-modal.component.html\n// module id = ../../../../../src/app/modals/list-entry-form-modal/list-entry-form-modal.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* generic */\\n/* specific */\\n.header {\\n  margin: 0 0 16px; }\\n  .header .title {\\n    padding-right: 16px; }\\n\\n.content {\\n  margin: 16px 0 0; }\\n  .content .form-group {\\n    margin: auto; }\\n  .content mat-form-field {\\n    width: 100%; }\\n    .content mat-form-field.score-input {\\n      width: 72px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/modals/list-entry-form-modal/list-entry-form-modal.component.scss\n// module id = ../../../../../src/app/modals/list-entry-form-modal/list-entry-form-modal.component.scss\n// module chunks = main","import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { AnimeService } from '../../providers/anime.service';\nimport { ListEntry } from '../../models/anilist/listEntry';\nimport { Media } from '../../models/anilist/media';\nimport { ListEntryStatus } from '../../models/anilist/listEntryStatus';\n\n@Component({\n  selector: 'app-list-entry-form-modal',\n  templateUrl: './list-entry-form-modal.component.html',\n  styleUrls: ['./list-entry-form-modal.component.scss']\n})\nexport class ListEntryFormModalComponent {\n  originalEntry: ListEntry;\n  listEntry: ListEntry;\n  media: Media;\n  listEntryForm: FormGroup;\n  liestEntryStatusList: any[] = ListEntryStatus.LIST;\n\n  constructor(\n    private animeService: AnimeService,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<ListEntryFormModalComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: any\n  ) {\n    this.listEntry = data.listEntry;\n    this.media = data.media;\n    this.setupForm();\n  }\n\n  private setupForm(): void {\n    if (this.listEntry) {\n      this.originalEntry = Object.assign({}, this.listEntry);\n    }\n\n    this.listEntryForm = this.formBuilder.group({\n      status: [\n        this.originalEntry && this.originalEntry.status ? this.originalEntry.status : ListEntryStatus.COMPLETED,\n        [Validators.required]\n      ],\n      score: [\n        this.originalEntry && this.originalEntry.scoreRaw ? this.originalEntry.scoreRaw / 10 : undefined,\n        [Validators.required, Validators.max(10), Validators.min(0)]\n      ]\n    });\n  }\n\n  saveEntry(): void {\n    const entryToSave: ListEntry = this.getFormEntry();\n\n    this.animeService.saveListEntry(entryToSave).subscribe((response) => {\n      const success: boolean = response.data.SaveMediaListEntry.id !== undefined;\n      if (success) {\n        this.listEntry.scoreRaw = entryToSave.scoreRaw;\n        this.listEntry.status = entryToSave.status;\n        this.dialogRef.close(this.listEntry);\n      }\n    });\n  }\n\n  deleteEntry(event?: Event): void {\n    this.preventDefault(event);\n\n    this.animeService.deleteListEntry(this.listEntry).subscribe((response) => {\n      const success: boolean = response.data.DeleteMediaListEntry.deleted === true;\n      if (success) {\n        this.dialogRef.close({\n          deletedEntry: this.listEntry\n        });\n      }\n    });\n  }\n\n  dismiss(event?: Event): void {\n    this.preventDefault(event);\n\n    this.dialogRef.close();\n  }\n\n  isSubmitEnabled(): boolean {\n    return !this.originalEntry || this.getFormEntry() !== this.originalEntry;\n  }\n\n  private getFormEntry(): ListEntry {\n    return {\n      media: this.media,\n      scoreRaw: this.listEntryForm.value.score * 10,\n      status: this.listEntryForm.value.status\n    };\n  }\n\n  private preventDefault(event: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/modals/list-entry-form-modal/list-entry-form-modal.component.ts","module.exports = \"<h3 class=\\\"header\\\">\\n  <i class=\\\"fa fa-times float-right clickable\\\" (click)=\\\"dismiss()\\\"></i>\\n\\n  <div class=\\\"title\\\">\\n    {{ media.title.romaji }}\\n  </div>\\n</h3>\\n\\n<mat-divider></mat-divider>\\n\\n<div *ngIf=\\\"media\\\" class=\\\"content\\\">\\n  <img [src]=\\\"media.coverImage && media.coverImage.large\\\" class=\\\"cover\\\">\\n\\n  <div *ngIf=\\\"media.description\\\">\\n    <h4 class=\\\"margin-bottom-xxs\\\">\\n      Description:\\n    </h4>\\n\\n    <div [innerHTML]=\\\"media.description\\\"></div>\\n  </div>\\n\\n  <div *ngIf=\\\"media.studios && media.studios.nodes && media.studios.nodes.length\\\">\\n    <h4 class=\\\"margin-bottom-xxs\\\">\\n      Studio:\\n    </h4>\\n\\n    <span>\\n      {{ media.studios.nodes[0].name }}\\n    </span>\\n  </div>\\n\\n  <div *ngIf=\\\"media.status && media.status.length\\\">\\n    <h4 class=\\\"margin-bottom-xxs\\\">\\n      Status:\\n    </h4>\\n\\n    <span>\\n      {{ media.status }}\\n    </span>\\n  </div>\\n\\n  <div *ngIf=\\\"media.tags && media.tags.length\\\">\\n    <h4 class=\\\"margin-bottom-xxs\\\">\\n      Tags:\\n    </h4>\\n\\n    <span *ngFor=\\\"let tag of media.tags\\\">\\n      <span *ngIf=\\\"!tag.isMediaSpoiler\\\">\\n        <mat-chip [title]=\\\"tag.description\\\">{{ tag.name }}</mat-chip>\\n      </span>\\n    </span>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/modals/media-detail-modal/media-detail-modal.component.html\n// module id = ../../../../../src/app/modals/media-detail-modal/media-detail-modal.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* generic */\\n/* specific */\\n.header {\\n  margin: 0 0 16px; }\\n  .header .title {\\n    padding-right: 16px; }\\n\\n.content {\\n  margin: 16px 0 0; }\\n  .content img.cover {\\n    float: left;\\n    max-width: 33vw;\\n    width: 160px;\\n    margin-right: 12px; }\\n  .content mat-chip {\\n    padding: 0 4px;\\n    border-radius: 3px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/modals/media-detail-modal/media-detail-modal.component.scss\n// module id = ../../../../../src/app/modals/media-detail-modal/media-detail-modal.component.scss\n// module chunks = main","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Media } from '../../models/anilist/media';\n\n@Component({\n  selector: 'app-media-detail-modal',\n  templateUrl: './media-detail-modal.component.html',\n  styleUrls: ['./media-detail-modal.component.scss']\n})\nexport class MediaDetailModalComponent {\n  media: Media;\n\n  constructor(\n    private dialogRef: MatDialogRef<MediaDetailModalComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: any\n  ) {\n    this.media = data.media;\n  }\n\n  dismiss(event?: Event): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/modals/media-detail-modal/media-detail-modal.component.ts","import { Media } from './media';\n\nexport class ListEntry {\n  id?: number;\n  scoreRaw?: number;\n  status?: string;\n  media?: Media;\n}\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/models/anilist/listEntry.ts","import { EnumMap } from '../enumMap';\n\nexport class ListEntryStatus extends EnumMap {\n  static COMPLETED: string = 'completed';\n  static CURRENT: string = 'current';\n  static DROPPED: string = 'dropped';\n  static PAUSED: string = 'paused';\n  static PLANNING: string = 'planning';\n  static REPEATING: string = 'repeating';\n\n  static LIST: any[] = [\n    { label: 'Completed', value: 'completed' },\n    { label: 'Dropped', value: 'dropped' },\n    { label: 'Paused', value: 'paused' },\n    { label: 'Planned', value: 'planning' },\n    { label: 'Repeating', value: 'repeating' },\n    { label: 'Watching', value: 'current' }\n  ];\n\n  shown: boolean = true;\n\n  constructor(value: string) {\n    super(value, ListEntryStatus.LIST, true);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/models/anilist/listEntryStatus.ts","import { CoverImage, Tag, Title } from './dataTypes';\nimport { ListEntry } from './listEntry';\n\nexport class Media {\n  coverImage: CoverImage;\n  description: string;\n  id: number;\n  meanScore: number;\n  mediaListEntry: ListEntry;\n  status: string;\n  studios: any;\n  tags: Tag[];\n  title: Title;\n}\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/models/anilist/media.ts","import { EnumMap } from '../enumMap';\n\nexport class MediaFormat extends EnumMap {\n  static MOVIE: string = 'MOVIE';\n  static MUSIC: string = 'MUSIC';\n  static ONA: string = 'ONA';\n  static OVA: string = 'OVA';\n  static SPECIAL: string = 'SPECIAL';\n  static TV: string = 'TV';\n  static TV_SHORT: string = 'TV_SHORT';\n\n  static LIST: any[] = [\n    { label: 'Movie', value: 'MOVIE' },\n    { label: 'Music', value: 'MUSIC' },\n    { label: 'ONA', value: 'ONA' },\n    { label: 'OVA', value: 'OVA' },\n    { label: 'Special', value: 'SPECIAL' },\n    { label: 'TV short', value: 'TV_SHORT' },\n    { label: 'TV', value: 'TV' }\n  ];\n\n  constructor(value: string) {\n    super(value, MediaFormat.LIST, true);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/models/anilist/mediaFormats.ts","const mediaSorts: any[] = [\n  { label: 'Title (asc)', value: 'TITLE_ROMAJI' },\n  { label: 'Title (desc)', value: 'TITLE_ROMAJI_DESC' },\n  { label: 'Year (asc)', value: 'START_DATE' },\n  { label: 'Year (desc)', value: 'START_DATE_DESC' },\n];\nexport { mediaSorts };\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/models/anilist/mediaSorts.ts","import { EnumMap } from '../enumMap';\n\nexport class MediaStatus extends EnumMap {\n  static FINISHED: string = 'FINISHED';\n  static RELEASING: string = 'RELEASING';\n  static NOT_YET_RELEASED: string = 'NOT_YET_RELEASED';\n  static CANCELLED: string = 'CANCELLED';\n\n  static LIST: any[] = [\n    { label: 'Finished', value: 'FINISHED' },\n    { label: 'Airing', value: 'RELEASING' },\n    { label: 'Unaired', value: 'NOT_YET_RELEASED' },\n    { label: 'Cancelled', value: 'CANCELLED' }\n  ];\n\n  constructor(value: string) {\n    super(value, MediaStatus.LIST, true);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/models/anilist/mediaStatus.ts","export class MediaTypes {\n  static ANIME: string = 'ANIME';\n}\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/models/anilist/mediaType.ts","export class EnumMap {\n  label: string;\n  value: string;\n\n  constructor(value: string, mapping: any[], ignoreCase?: boolean) {\n    const matches: any[] = mapping.filter((mediaType: any) => {\n      return ignoreCase ? mediaType.value.toLowerCase() === value.toLowerCase() : mediaType.value === value;\n    });\n\n    if (matches.length) {\n      return matches[0];\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/models/enumMap.ts","import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\n\nconst modules: any[] = [\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDatepickerModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatTooltipModule\n];\n\n@NgModule({\n  imports: modules,\n  exports: modules\n})\nexport class MaterialModule { }\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/modules/material.module.ts","module.exports = \"<mat-card *ngIf=\\\"!user\\\" class=\\\"warning margin-bottom-xs\\\">\\n  <h4>\\n    <i class=\\\"fa fa-exclamation-circle fa-1x margin-right-xxs\\\"></i>\\n    You are not logged in. Search will be available but most other features will not.\\n  </h4>\\n</mat-card>\\n\\n<form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"search()\\\">\\n\\n  <mat-card class=\\\"text-center\\\">\\n\\n    <h1>\\n      <label for=\\\"searchInput\\\">\\n        Anime search\\n      </label>\\n    </h1>\\n\\n    <div class=\\\"form-group\\\">\\n      <mat-form-field class=\\\"medium display-block margin-auto\\\">\\n        <input id=\\\"searchInput\\\" matInput placeholder=\\\"Anime title\\\" formControlName=\\\"search\\\">\\n      </mat-form-field>\\n    </div>\\n\\n    <!--<mat-form-field id=\\\"yearInput\\\">-->\\n      <!--<input matInput [matDatepicker]=\\\"startDatePicker\\\" placeholder=\\\"Year\\\" disabled>-->\\n      <!--<mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>-->\\n      <!--<mat-datepicker #startDatePicker disabled=\\\"false\\\" startView=\\\"year\\\"></mat-datepicker>-->\\n    <!--</mat-form-field>-->\\n\\n    <mat-expansion-panel class=\\\"mat-elevation-z padding-bottom-s search-filters\\\">\\n      <mat-expansion-panel-header>\\n        Advanced filters\\n      </mat-expansion-panel-header>\\n\\n      <mat-divider></mat-divider>\\n\\n      <div class=\\\"vertical-padding-xs\\\">\\n\\n        <!-- air date -->\\n        <div class=\\\"form-group two-rows\\\">\\n          <mat-form-field class=\\\"medium\\\">\\n            <input\\n                matInput type=\\\"number\\\"\\n                placeholder=\\\"Aired after year\\\"\\n                formControlName=\\\"startDate_greater\\\"\\n                [min]=\\\"minYear\\\" [max]=\\\"maxYear\\\"\\n            >\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"medium\\\">\\n            <input\\n                matInput type=\\\"number\\\"\\n                placeholder=\\\"Aired before year\\\"\\n                formControlName=\\\"startDate_lesser\\\"\\n                [min]=\\\"minYear\\\" [max]=\\\"maxYear\\\"\\n            >\\n          </mat-form-field>\\n        </div>\\n\\n        <!-- score -->\\n        <div class=\\\"form-group two-rows\\\">\\n          <mat-form-field class=\\\"medium\\\">\\n            <input\\n                matInput type=\\\"number\\\"\\n                placeholder=\\\"Scored above\\\"\\n                formControlName=\\\"averageScore_greater\\\"\\n                min=\\\"0\\\" max=\\\"10\\\" step=\\\".1\\\"\\n            >\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"medium\\\">\\n            <input\\n                matInput type=\\\"number\\\"\\n                placeholder=\\\"Scored below\\\"\\n                formControlName=\\\"averageScore_lesser\\\"\\n                min=\\\"0\\\" max=\\\"10\\\" step=\\\".1\\\"\\n            >\\n          </mat-form-field>\\n        </div>\\n\\n        <!-- formats -->\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"large\\\">\\n            <mat-select placeholder=\\\"Format\\\" #formatInput formControlName=\\\"formats\\\" multiple>\\n              <mat-option *ngFor=\\\"let mediaFormat of mediaFormats\\\" [value]=\\\"mediaFormat.value\\\">\\n                {{ mediaFormat.label }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <!-- genres -->\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"large\\\">\\n            <mat-select placeholder=\\\"Genre\\\" formControlName=\\\"genres\\\" multiple>\\n              <mat-option *ngFor=\\\"let genre of mediaGenres\\\" [value]=\\\"genre\\\">\\n                {{ genre }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n      </div>\\n\\n      <mat-divider></mat-divider>\\n\\n    </mat-expansion-panel>\\n\\n    <button mat-raised-button color=\\\"accent\\\" class=\\\"display-block margin-auto\\\" [disabled]=\\\"!searchForm.valid\\\">\\n      <i class=\\\"fa fa-search fa-1x baseline margin-right-xxxs\\\"></i>\\n      Search\\n    </button>\\n\\n  </mat-card>\\n\\n  <mat-progress-bar *ngIf=\\\"searching\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n  <div *ngIf=\\\"!searching\\\" class=\\\"progress-placeholder\\\"></div>\\n\\n  <mat-card *ngIf=\\\"errorGotten\\\" class=\\\"error\\\">\\n    <h4>\\n      <i class=\\\"fa fa-exclamation-circle fa-1x margin-right-xxs\\\"></i>\\n      Error 500: Internal server error\\n    </h4>\\n  </mat-card>\\n\\n  <mat-card *ngIf=\\\"noResults\\\" class=\\\"info\\\">\\n    <h4>\\n      <i class=\\\"fa fa-info-circle fa-1x margin-right-xxs\\\"></i>\\n      No results found\\n    </h4>\\n  </mat-card>\\n\\n  <mat-card *ngIf=\\\"animeList && animeList.length > 0\\\" class=\\\"no-padding\\\">\\n    <app-search-results-table [tableData]=\\\"animeList\\\"></app-search-results-table>\\n\\n    <mat-paginator\\n      [length]=\\\"pagination.total\\\"\\n      [pageSize]=\\\"pagination.perPage\\\"\\n      [pageSizeOptions]=\\\"[5, 10, 25, 50]\\\"\\n      (page)=\\\"changePage($event)\\\">\\n    </mat-paginator>\\n  </mat-card>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/pages/anime-search/anime-search.component.html\n// module id = ../../../../../src/app/pages/anime-search/anime-search.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* generic */\\n/* specific */\\nmat-form-field {\\n  width: 100%; }\\n\\n#searchInput {\\n  font-size: 16px;\\n  line-height: 24px; }\\n\\n.form-group {\\n  max-width: 640px;\\n  margin: auto; }\\n  @media (min-width: 481px) {\\n    .form-group.two-rows > * {\\n      max-width: calc(50% - 16px); }\\n      .form-group.two-rows > *:first-child {\\n        float: left; }\\n      .form-group.two-rows > *:last-child {\\n        float: right; } }\\n\\n.progress-placeholder {\\n  height: 5px; }\\n\\nmat-card:not(:first-of-type) {\\n  margin-top: 24px; }\\n\\nmat-expansion-panel-header {\\n  padding: 0 8px; }\\n\\n@media (max-width: 480px) {\\n  button {\\n    width: 100%; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/pages/anime-search/anime-search.component.scss\n// module id = ../../../../../src/app/pages/anime-search/anime-search.component.scss\n// module chunks = main","import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PageEvent } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AnimeService } from '../../providers/anime.service';\nimport { User } from '../../models/anilist/user';\nimport { MediaQuery } from '../../models/anilist/query';\nimport { PageQuery } from '../../models/anilist/pageInfo';\nimport { Anime } from '../../models/anilist/anime';\nimport { MediaFormat } from '../../models/anilist/mediaFormats';\nimport { animeSearchUrl } from '../../app.constants';\n\n@Component({\n  selector: 'app-anime-search',\n  templateUrl: './anime-search.component.html',\n  styleUrls: ['./anime-search.component.scss']\n})\nexport class AnimeSearchComponent implements OnDestroy {\n\n  user: User;\n  animeList: Anime[];\n  searchForm: FormGroup;\n  pagination: PageQuery;\n  mediaFormats: any[] = MediaFormat.LIST;\n  mediaGenres: string[];\n\n  searching: boolean;\n  noResults: boolean;\n  errorGotten: boolean;\n\n  minYear: number = 1900;\n  maxYear: number = new Date().getFullYear() + 1;\n\n  private userChangeSubscription: any;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private animeService: AnimeService,\n    private formBuilder: FormBuilder\n  ) {\n    this.user = this.animeService.getUser();\n    this.setupForm();\n    this.getGenres();\n\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params['search'] && params['search'].length) {\n        this.searchForm.controls['search'].setValue(params['search']);\n        this.search();\n      }\n    });\n\n    this.userChangeSubscription = this.animeService.userChange.subscribe((user: User) => {\n      this.user = user;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.userChangeSubscription.unsubscribe();\n  }\n\n  private setupForm(): void {\n    this.searchForm = this.formBuilder.group({\n      search: [''],\n      startDate_greater: [undefined, [Validators.min(this.minYear), Validators.max(this.maxYear)]],\n      startDate_lesser: [undefined, [Validators.min(this.minYear), Validators.max(this.maxYear)]],\n      averageScore_greater: [undefined, [Validators.min(0), Validators.max(10)]],\n      averageScore_lesser: [undefined, [Validators.min(0), Validators.max(10)]],\n      formats: [],\n      genres: []\n    });\n  }\n\n  private search(page?: number, perPage?: number): void {\n    this.updateQueryParams();\n\n    this.searching = true;\n    this.errorGotten = false;\n\n    let query: MediaQuery = {\n      search: this.searchForm.value.search,\n      formats: this.searchForm.value.formats,\n      genres: this.searchForm.value.genres\n    };\n\n    if (this.searchForm.value.startDate_lesser) {\n      query.startDate_lesser = this.getDateScalarFromYear(this.searchForm.value.startDate_lesser);\n    }\n    if (this.searchForm.value.startDate_greater) {\n      query.startDate_greater = this.getDateScalarFromYear(this.searchForm.value.startDate_greater - 1) + 1231;\n    }\n    if (this.searchForm.value.averageScore_greater) {\n      query.averageScore_greater = this.searchForm.value.averageScore_greater * 10;\n    }\n    if (this.searchForm.value.averageScore_lesser) {\n      query.averageScore_lesser = this.searchForm.value.averageScore_lesser * 10;\n    }\n\n    const pageInfo: PageQuery = {\n      pageIndex: page,\n      perPage: perPage\n    };\n\n    this.animeService.search(query, pageInfo).subscribe((response: any) => {\n      this.noResults = response.media.length < 1;\n      this.animeList = response.media;\n      this.pagination = response.pageInfo;\n      this.searching = false;\n\n    }, () => {\n      this.errorGotten = true;\n      this.noResults = false;\n      this.searching = false;\n\n    });\n  }\n\n  private getGenres(): void {\n    this.animeService.getGenres().subscribe((mediaGenres) => {\n      this.mediaGenres = mediaGenres;\n    });\n  }\n\n  private getDateScalarFromYear(year: number): number {\n    return year * 10000;\n  }\n\n  private updateQueryParams(): void {\n    const queryParams: any = {};\n    if (this.searchForm.value.search && this.searchForm.value.search.length) {\n      queryParams.search = this.searchForm.value.search;\n    }\n    this.router.navigate([animeSearchUrl], { queryParams: queryParams });\n  }\n\n  private changePage(pageEvent: PageEvent): void {\n    this.search(pageEvent.pageIndex + 1, pageEvent.pageSize);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/pages/anime-search/anime-search.component.ts","module.exports = \"<mat-card>\\n  <div class=\\\"text-center vertical-padding-m\\\">\\n    <h2>\\n      <a [href]=apiLoginUrl>Log in with AniList</a>\\n    </h2>\\n  </div>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/pages/login/login.component.html\n// module id = ../../../../../src/app/pages/login/login.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/pages/login/login.component.scss\n// module id = ../../../../../src/app/pages/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { apiLoginUrl } from '../../app.constants';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  apiLoginUrl: string = apiLoginUrl;\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/pages/login/login.component.ts","module.exports = \"<mat-card class=\\\"inline-block text-center\\\">\\n  <i class=\\\"fa fa-exclamation-circle fa-5x\\\"></i>\\n  <h1>\\n    Error 404\\n  </h1>\\n  <h2>\\n    Page not found\\n  </h2>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/pages/page-not-found/page-not-found.component.html\n// module id = ../../../../../src/app/pages/page-not-found/page-not-found.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/pages/page-not-found/page-not-found.component.scss\n// module id = ../../../../../src/app/pages/page-not-found/page-not-found.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/pages/page-not-found/page-not-found.component.ts","module.exports = \"<mat-card *ngIf=\\\"!user\\\" class=\\\"warning\\\">\\n  <h4>\\n    <i class=\\\"fa fa-exclamation-circle fa-1x margin-right-xxs\\\"></i>\\n    You are not logged in.\\n  </h4>\\n</mat-card>\\n\\n<mat-spinner *ngIf=\\\"user && !ready\\\" mode=\\\"indeterminate\\\" class=\\\"full-page\\\"></mat-spinner>\\n\\n<div *ngIf=\\\"user && ready && !errorGotten\\\">\\n\\n  <div *ngIf=\\\"statuses && statuses.length\\\">\\n    <mat-card class=\\\"table-filter\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter by name\\\">\\n      </mat-form-field>\\n    </mat-card>\\n\\n    <mat-card class=\\\"margin-top-s\\\">\\n      <h3>\\n        Show / Go to\\n      </h3>\\n\\n      <div class=\\\"statuses-wrapper\\\">\\n        <span *ngFor=\\\"let status of statuses\\\" class=\\\"status-wrapper\\\">\\n          <mat-checkbox [(ngModel)]=\\\"status.shown\\\"></mat-checkbox>\\n\\n          <a *ngIf=\\\"hasDataOfStatus(status.value)\\\" href=\\\"{{ '/user-list#' + status.value }}\\\" class=\\\"capitalize\\\">\\n            {{ status.label }}\\n          </a>\\n        </span>\\n      </div>\\n    </mat-card>\\n\\n    <div *ngFor=\\\"let status of statuses\\\">\\n      <div *ngIf=\\\"status.shown && hasDataOfStatus(status.value)\\\" class=\\\"status-table-wrapper\\\">\\n\\n        <h3 [id]=\\\"status.value\\\" class=\\\"capitalize\\\">\\n          {{ status.label }}\\n        </h3>\\n\\n        <mat-card class=\\\"no-padding\\\">\\n          <app-user-list-table\\n            [tableStatus]=\\\"status.value\\\"\\n            [tableData]=\\\"statusObjects[status.value]\\\"\\n            [favouriteIDs]=\\\"favouriteIDs\\\"\\n            [filter]=\\\"filter\\\"\\n            (onEntryUpdate)=\\\"onEntryUpdate($event)\\\">\\n          </app-user-list-table>\\n        </mat-card>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"padding-top-xs padding-bottom-m\\\">\\n      <h3>\\n        Settings\\n      </h3>\\n\\n      <mat-slide-toggle\\n        [checked]=\\\"reloadOnUpdate\\\"\\n        (change)=\\\"reloadOnUpdate = !reloadOnUpdate\\\">\\n        Reload on update\\n      </mat-slide-toggle>\\n    </div>\\n\\n    <app-genres-overview\\n      [genreStatsList]=\\\"user.stats.favouredGenresOverview\\\">\\n    </app-genres-overview>\\n  </div>\\n\\n  <mat-card *ngIf=\\\"!statuses || !statuses.length\\\">\\n    <h4>\\n      <i class=\\\"fa fa-exclamation-circle fa-1x margin-right-xxs\\\"></i>\\n      You haven't added any entries yet.\\n    </h4>\\n  </mat-card>\\n\\n</div>\\n\\n<mat-card *ngIf=\\\"errorGotten\\\" class=\\\"error\\\">\\n  <h4>\\n    <i class=\\\"fa fa-exclamation-circle fa-1x margin-right-xxs\\\"></i>\\n    Error 500: Internal server error\\n  </h4>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/pages/user-list/user-list.component.html\n// module id = ../../../../../src/app/pages/user-list/user-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* spacing */\\n/* font sizes */\\n/* device sizes */\\n/* material */\\n/* generic */\\n/* specific */\\n.table-filter {\\n  padding-top: 8px !important;\\n  padding-bottom: 0 !important; }\\n\\n.statuses-wrapper mat-checkbox {\\n  display: inline-block;\\n  vertical-align: text-bottom; }\\n\\n.statuses-wrapper .status-wrapper {\\n  margin-right: 16px;\\n  display: inline-block;\\n  min-width: 104px; }\\n\\n.status-table-wrapper:not(:last-of-type) {\\n  margin-bottom: 40px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// Z:/Txus/Projects/web/ng-material/src/app/pages/user-list/user-list.component.scss\n// module id = ../../../../../src/app/pages/user-list/user-list.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AnimeService } from '../../providers/anime.service';\nimport { User } from '../../models/anilist/user';\nimport { ListEntry } from '../../models/anilist/listEntry';\nimport { ListEntryStatus } from '../../models/anilist/listEntryStatus';\nimport { rootUrl } from '../../app.constants';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent {\n  user: User;\n  statusObjects: any;\n  statuses: ListEntryStatus[];\n  favouriteIDs: number[];\n\n  loggedIn: boolean;\n  ready: boolean;\n  errorGotten: boolean;\n\n  reloadOnUpdate: boolean = true;\n  filter: string;\n\n  constructor(\n    private router: Router,\n    private animeService: AnimeService\n  ) {\n    this.user = this.animeService.getUser();\n    this.loggedIn = this.user !== undefined;\n\n    if (!this.loggedIn) {\n      this.router.navigate([rootUrl]);\n    }\n\n    this.updateListData();\n  }\n\n  private getUserList(): void {\n    if (this.user) {\n      this.animeService.getList(this.user).subscribe((response) => {\n        const statuses: ListEntryStatus[] = [];\n        Object.keys(response).sort().forEach((statusValue) => {\n          statuses.push(new ListEntryStatus(statusValue));\n        });\n\n        this.statusObjects = response;\n        this.statuses = statuses;\n        this.ready = true;\n\n      }, (error) => {\n        this.errorGotten = true;\n        this.ready = true;\n      });\n    }\n  }\n\n  private getListFavouriteIDs(): void {\n    if (this.user) {\n      this.animeService.getListFavouriteIDs(this.user, (favouriteIDs) => {\n        this.favouriteIDs = favouriteIDs;\n      });\n    }\n  }\n\n  hasDataOfStatus(status: string): boolean {\n    return this.statusObjects &&\n           this.statusObjects[status] &&\n           this.statusObjects[status].length > 0;\n  }\n\n  applyFilter(filterValue: string): void {\n    this.filter = filterValue.trim().toLowerCase();\n  }\n\n  getListAsString(): string {\n    return JSON.stringify(this.statusObjects, undefined, 2);\n  }\n\n  onEntryUpdate(listEntry?: ListEntry): void {\n    if (this.reloadOnUpdate) {\n      this.updateListData();\n    }\n  }\n\n  private updateListData(): void {\n    this.statusObjects = undefined;\n    this.statuses = undefined;\n    this.favouriteIDs = undefined;\n    this.ready = false;\n\n    this.getUserList();\n    this.getListFavouriteIDs();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/pages/user-list/user-list.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort',\n})\nexport class SortPipe implements PipeTransform {\n  transform(array: any[], field: string, desc?: boolean): any[] {\n    const direction: number = desc ? -1 : 1;\n\n    if (array && array.length) {\n      array.sort((a: any, b: any) => {\n        if (a[field] < b[field]) {\n          return -1 * direction;\n        } else if (a[field] > b[field]) {\n          return 1 * direction;\n        } else {\n          return 0;\n        }\n      });\n    }\n    return array;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/pipes/sort.ts","import { EventEmitter, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport { User } from '../models/anilist/user';\nimport { Anime } from '../models/anilist/anime';\nimport { ListEntry } from '../models/anilist/listEntry';\nimport { ListEntryStatus } from '../models/anilist/listEntryStatus';\nimport { Media } from '../models/anilist/media';\nimport { MediaFormat } from '../models/anilist/mediaFormats';\nimport { MediaStatus } from '../models/anilist/mediaStatus';\nimport { MediaTypes } from '../models/anilist/mediaType';\nimport { MediaQuery } from '../models/anilist/query';\nimport { PageQuery } from '../models/anilist/pageInfo';\nimport { mediaSorts } from '../models/anilist/mediaSorts';\nimport { apiUrl, accessTokenCookieKey, userCookieKey } from '../app.constants';\n\n@Injectable()\nexport class AnimeService {\n  private apiUrl: string = apiUrl;\n  private fallbackCover: string = 'assets/pictures/non-vectorial/no-cover-available.png';\n\n  private pageInfoFields: string;\n  private listAnimeFields: string;\n  private searchAnimeFields: string;\n\n  private genresQuery: string;\n  private userQuery: string;\n  private searchQuery: string;\n  private listQuery: string;\n  private listFavouritesQuery: string;\n  private saveListEntryQuery: string;\n  private deleteListEntryQuery: string;\n  private toggleFavouriteEntryQuery: string;\n\n  userChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor (\n    private httpClient: HttpClient\n  ) {\n    this.initializeQueries();\n  }\n\n  public setAccessToken(accessToken: string): void {\n    localStorage.setItem(accessTokenCookieKey, accessToken);\n  }\n  public getAccessToken(): string {\n    return localStorage.getItem(accessTokenCookieKey);\n  }\n  public removeAccessToken(): void {\n    localStorage.removeItem(accessTokenCookieKey);\n  }\n\n  public setUser(user: User): void {\n    localStorage.setItem(userCookieKey, JSON.stringify(user));\n  }\n  public getUser(): User {\n    const jsonString: string = localStorage.getItem(userCookieKey);\n    return jsonString ? JSON.parse(jsonString) : undefined;\n  }\n  public removeUser(): void {\n    localStorage.removeItem(userCookieKey);\n  }\n\n  public logIn(accessToken: string): void {\n    this.setAccessToken(accessToken);\n\n    this.queryUser().subscribe((response: any) => {\n      this.setUser(response.Viewer);\n      this.userChange.emit(this.getUser());\n    });\n  }\n\n  public logOut(): void {\n    this.removeAccessToken();\n    this.removeUser();\n    this.userChange.emit();\n  }\n\n  public getGenres(): Observable<string[]> {\n    return this.httpClient.post(this.apiUrl, {\n      query: this.genresQuery\n\n    }, this.getRequestOptions()).map((response) => {\n      let serverResponse: any;\n\n      if (this.isValidResponse(response)) {\n        serverResponse = this.getResponseData(response).GenreCollection;\n      }\n\n      return serverResponse;\n    });\n  }\n\n  public search(query: MediaQuery, pageInfo: PageQuery): Observable<any> {\n    let options: any = {\n      type: MediaTypes.ANIME,\n      adultContent: query.adultContent || false,\n      page: pageInfo.pageIndex >= 1 ? pageInfo.pageIndex : 1,\n      perPage: pageInfo.perPage || 10,\n      sort: [mediaSorts[0].value]\n    };\n\n    if (query.search) {\n      options.search = query.search;\n    }\n    if (query.startDate_greater) {\n      options.startDate_greater = query.startDate_greater;\n    }\n    if (query.startDate_lesser) {\n      options.startDate_lesser = query.startDate_lesser;\n    }\n    if (query.averageScore_greater) {\n      options.averageScore_greater = query.averageScore_greater;\n    }\n    if (query.averageScore_lesser) {\n      options.averageScore_lesser = query.averageScore_lesser;\n    }\n    if (query.formats && query.formats.length) {\n      options.formats = query.formats;\n    }\n    if (query.genres && query.genres.length) {\n      options.genres = query.genres;\n    }\n\n    return this.httpClient.post(this.apiUrl, {\n      query: this.searchQuery,\n      variables: options\n\n    }, this.getRequestOptions()).map((response) => {\n      let serverResponse: any;\n\n      if (this.isValidResponse(response)) {\n        serverResponse = this.getResponseData(response).Page;\n\n        serverResponse.media.forEach((anime: Anime) => {\n          this.parseAnimeData(anime);\n        });\n      }\n\n      return serverResponse;\n    });\n  }\n\n  public queryUser(): Observable<User> {\n    return this.httpClient.post(this.apiUrl, {\n      query: this.userQuery\n\n    }, this.getRequestOptions()).map((response) => {\n      let serverResponse: any;\n\n      if (this.isValidResponse(response)) {\n        serverResponse = this.getResponseData(response);\n      }\n\n      return serverResponse;\n    });\n  }\n\n  public getList(user: User): Observable<any> {\n    let options: any = {\n      listType: MediaTypes.ANIME,\n      userId: user.id,\n      sort: ['SCORE_DESC']\n    };\n\n    return this.httpClient.post(this.apiUrl, {\n      query: this.listQuery,\n      variables: options\n\n    }, this.getRequestOptions()).map((response) => {\n      let statusLists: any[] = [];\n      let statusObjects: any[] = [];\n\n      if (this.isValidResponse(response)) {\n        statusObjects = this.getResponseData(response).MediaListCollection.statusLists;\n\n        Object.keys(statusObjects).forEach((status: string) => {\n          statusObjects[status].forEach((entry: any) => {\n            this.parseListEntryData(entry);\n          });\n        });\n      }\n\n      return statusObjects;\n    });\n  }\n\n  public getListFavourites(user: User, callback: Function): void {\n    let options: any = {\n      userId: user.id,\n      page: 0\n    };\n\n    let favourites: any[] = [];\n    this.queryResultsPage(options, favourites, callback);\n  }\n\n  private queryResultsPage(options: any, favourites: any[], callback: Function): void {\n    this.httpClient.post(this.apiUrl, {\n      query: this.listFavouritesQuery,\n      variables: options\n\n    }, this.getRequestOptions()).subscribe((response) => {\n      let results: any[] = [];\n\n      if (this.isValidResponse(response)) {\n        const responseData: any = this.getResponseData(response);\n        if (responseData && responseData.User && responseData.User.favourites && responseData.User.favourites.anime) {\n          const favouritesData: any = responseData.User.favourites.anime;\n          results = favouritesData.nodes;\n          favourites = favourites.concat(results);\n\n          if (favouritesData.pageInfo.hasNextPage) {\n            options.page++;\n            this.queryResultsPage(options, favourites, callback);\n\n          } else {\n            callback(favourites);\n          }\n        }\n      }\n    });\n  }\n\n  public getListFavouriteIDs(user: User, callback: Function): void {\n    this.getListFavourites(user, (listFavourites) => {\n      let favouriteIDs: any[] = [];\n\n      listFavourites.forEach((media: Media) => {\n        favouriteIDs.push(media.id);\n      });\n\n      callback(favouriteIDs);\n    });\n  }\n\n  public saveListEntry(listEntryRequest: any): Observable<any> {\n    let options: any = {\n      status: (listEntryRequest.status || ListEntryStatus.COMPLETED).toUpperCase(),\n      mediaId: listEntryRequest.media.id,\n      scoreRaw: listEntryRequest.scoreRaw\n    };\n\n    return this.httpClient.post(this.apiUrl, {\n      query: this.saveListEntryQuery,\n      variables: options\n\n    }, this.getRequestOptions());\n  }\n\n  public deleteListEntry(listEntry: ListEntry): Observable<any> {\n    let options: any = {\n      id: listEntry.id\n    };\n\n    return this.httpClient.post(this.apiUrl, {\n      query: this.deleteListEntryQuery,\n      variables: options\n\n    }, this.getRequestOptions());\n  }\n\n  public toggleFavouriteEntry(listEntry: ListEntry): Observable<any> {\n    let options: any = {\n      animeId: listEntry.media.id\n    };\n\n    return this.httpClient.post(this.apiUrl, {\n      query: this.toggleFavouriteEntryQuery,\n      variables: options\n\n    }, this.getRequestOptions());\n  }\n\n  private getRequestOptions(): any {\n    let headers: any = {};\n\n    if (this.getAccessToken()) {\n      headers.Authorization = `Bearer ${this.getAccessToken()}`;\n    }\n\n    return { headers: headers };\n  }\n\n  private isValidResponse(response: any): boolean {\n    return response && response.data;\n  }\n\n  private getResponseData(response: any): any {\n    return response.data;\n  }\n\n  private parseAnimeData(anime: Anime): void {\n    if (anime) {\n      if (anime.format) {\n        anime.format = new MediaFormat(anime.format).label;\n      }\n\n      if (anime.status) {\n        anime.status = new MediaStatus(anime.status).label;\n      }\n\n      if (anime.coverImage && anime.coverImage.medium === 'https://cdn.anilist.co/img/dir/anime/med/noimg.jpg') {\n        anime.coverImage.medium = this.fallbackCover;\n      }\n\n      if (anime.mediaListEntry) {\n        this.parseListEntryData(anime.mediaListEntry);\n      }\n    }\n  }\n\n  private parseListEntryData(listEntry: ListEntry): void {\n    if (listEntry) {\n      if (listEntry.status) {\n        listEntry.status = new ListEntryStatus(listEntry.status).value;\n      }\n\n      if (listEntry.media) {\n        this.parseAnimeData(<Anime> listEntry.media);\n      }\n    }\n  }\n\n  private initializeQueries(): void {\n\n    this.pageInfoFields = `\n      currentPage\n      hasNextPage\n      lastPage\n      perPage\n      total`;\n\n    this.listAnimeFields = `\n      coverImage {\n        large\n        medium\n      }\n      description\n      episodes\n      format\n      genres\n      id\n      meanScore\n      startDate {\n        year\n      }\n      status\n      studios(isMain: true) {\n        nodes {\n          name\n        }\n      }\n      tags {\n        description\n        isMediaSpoiler\n        name\n      }\n      title {\n        romaji\n      }`;\n\n    this.searchAnimeFields = `${this.listAnimeFields}\n      mediaListEntry {\n        id\n        scoreRaw: score (\n          format: POINT_100\n        )\n        status\n      }`;\n\n    this.genresQuery = `\n      {\n        GenreCollection\n      }`;\n\n    this.userQuery = `\n      {\n        Viewer {\n          avatar {\n            large\n          }\n          id\n          name\n          options {\n            displayAdultContent\n          }\n          stats {\n            favouredGenresOverview {\n              amount\n              genre\n              meanScore\n              timeWatched\n            }\n            watchedTime\n          }\n        }\n      }`;\n\n    this.searchQuery = `\n      query (\n        $adultContent: Boolean,\n        $averageScore_greater: Int,\n        $averageScore_lesser: Int,\n        $formats: [MediaFormat],\n        $genres: [String],\n        $id: Int,\n        $page: Int,\n        $perPage: Int,\n        $search: String,\n        $sort: [MediaSort],\n        $startDate_greater: FuzzyDateInt,\n        $startDate_lesser: FuzzyDateInt,\n        $type: MediaType\n      ) {\n        Page (\n          page: $page,\n          perPage: $perPage\n        ) {\n          pageInfo {\n            ${this.pageInfoFields}\n          }\n          media (\n            averageScore_greater: $averageScore_greater,\n            averageScore_lesser: $averageScore_lesser,\n            format_in: $formats,\n            genre_in: $genres,\n            isAdult: $adultContent,\n            search: $search,\n            sort: $sort,\n            startDate_greater: $startDate_greater,\n            startDate_lesser: $startDate_lesser,\n            type: $type,\n            id: $id\n          ) {\n            ${this.searchAnimeFields}\n          }\n        }\n      }`;\n\n    this.listQuery = `\n      query (\n        $listType: MediaType,\n        $sort: [MediaListSort],\n        $userId: Int!\n      ) {\n        MediaListCollection (\n          sort: $sort,\n          type: $listType,\n          userId: $userId\n        ) {\n          statusLists {\n            ... mediaListEntry\n          }\n        }\n      }\n  \n      fragment mediaListEntry on MediaList {\n        id\n        media {\n          ${this.listAnimeFields}\n        }\n        scoreRaw: score (\n          format: POINT_100\n        )\n        status\n      }`;\n\n    this.listFavouritesQuery = `\n      query (\n        $userId: Int!,\n        $page: Int\n      ) {\n        User (\n          id: $userId\n        ) {\n          favourites {\n            anime (\n              page: $page\n            ) {\n              nodes {\n                id\n              }\n              pageInfo {\n                ${this.pageInfoFields}\n              }\n            }\n          }\n        }\n      }`;\n\n    this.saveListEntryQuery = `\n      mutation (\n        $mediaId: Int,\n        $scoreRaw: Int,\n        $status: MediaListStatus\n      ) {\n        SaveMediaListEntry (\n          mediaId: $mediaId,\n          scoreRaw: $scoreRaw,\n          status: $status\n        ) {\n          id\n          status\n        }\n      }`;\n\n    this.deleteListEntryQuery = `\n      mutation (\n        $id: Int\n      ) {\n        DeleteMediaListEntry (id: $id) {\n          deleted\n        }\n      }`;\n\n    this.toggleFavouriteEntryQuery = `\n      mutation (\n        $animeId: Int\n      ) {\n        ToggleFavourite (\n          animeId: $animeId\n        ) {\n          anime {\n            nodes {\n              id\n              title {\n                userPreferred\n              }\n            }\n          }\n        }\n      }`;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/app/providers/anime.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `envi ronment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment: any = {\n  // anilist_client_id: 329, // local\n  anilist_client_id: 331, // GitHub\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// Z:/Txus/Projects/web/ng-material/src/main.ts"],"sourceRoot":"webpack:///"}